<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一行一行源码分析清楚 AbstractQueuedSynchronizer (三)</title>
      <link href="/posts/1892723867.html"/>
      <url>/posts/1892723867.html</url>
      
        <content type="html"><![CDATA[<p>这篇文章是 AQS 系列的最后一篇，第一篇，我们通过 ReentrantLock 公平锁分析了 AQS 的核心，第二篇的重点是把 Condition 说明白，同时也说清楚了对于线程中断的使用。这篇，我们的关注点是 AQS 最后的部分，<strong>AQS 共享模式</strong>的使用。有前两篇文章的铺垫，剩下的源码分析将会简单很多。本文先用 CountDownLatch 将共享模式说清楚，然后顺着把其他 AQS 相关的类 CyclicBarrier、Semaphore 的源码一起过一下。相对来说，如果读者有前面两篇文章的基础，这篇文章是简单很多，不过对于初学者来说，1 小时估计也是免不了的。</p><a id="more"></a><h2 id="CountDownLatch"><a href="#CountDownLatch" class="headerlink" title="CountDownLatch"></a>CountDownLatch</h2><p>CountDownLatch 这个类是比较典型的 AQS 的共享模式的使用，这是一个高频使用的类。latch 的中文意思是<strong>门栓、栅栏</strong>，具体怎么解释我就不废话了，大家随意，看两个例子就知道在哪里用、怎么用了。</p><h3 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a>使用例子</h3><p>我们看下 Doug Lea 在 java doc 中给出的例子，这个例子非常实用，我经常会写到这个代码。</p><p>假设我们有 N ( N &gt; 0 ) 个任务，那么我们会用 N 来初始化一个 CountDownLatch，然后将这个 latch 的引用传递到各个线程中，在每个线程完成了任务后，调用 latch.countDown() 代表完成了一个任务。</p><p>调用 latch.await() 的方法的线程会阻塞，直到所有的任务完成。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Driver2</span> </span>&#123; <span class="comment">// ...</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        CountDownLatch doneSignal = <span class="keyword">new</span> CountDownLatch(N);</span><br><span class="line">        Executor e = Executors.newFixedThreadPool(<span class="number">8</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 N 个任务，提交给线程池来执行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i) <span class="comment">// create and start threads</span></span><br><span class="line">            e.execute(<span class="keyword">new</span> WorkerRunnable(doneSignal, i));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 等待所有的任务完成，这个方法才会返回</span></span><br><span class="line">        doneSignal.await();           <span class="comment">// wait for all to finish</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WorkerRunnable</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CountDownLatch doneSignal;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    WorkerRunnable(CountDownLatch doneSignal, <span class="keyword">int</span> i) &#123;</span><br><span class="line">        <span class="keyword">this</span>.doneSignal = doneSignal;</span><br><span class="line">        <span class="keyword">this</span>.i = i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            doWork(i);</span><br><span class="line">            <span class="comment">// 这个线程的任务完成了，调用 countDown 方法</span></span><br><span class="line">            doneSignal.countDown();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException ex) &#123;</span><br><span class="line">        &#125; <span class="comment">// return;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">()</span> </span>&#123; ...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>所以说 CountDownLatch 非常实用，我们常常会将一个比较大的任务进行拆分，然后开启多个线程来执行，等所有线程都执行完了以后，再往下执行其他操作。这里例子中，<strong>只有 main 线程调用了 await 方法</strong>。</p><p>我们再来看另一个例子，这个例子很典型，用了两个 CountDownLatch：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Driver</span> </span>&#123; <span class="comment">// ...</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        CountDownLatch startSignal = <span class="keyword">new</span> CountDownLatch(<span class="number">1</span>);</span><br><span class="line">        CountDownLatch doneSignal = <span class="keyword">new</span> CountDownLatch(N);</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; ++i) <span class="comment">// create and start threads</span></span><br><span class="line">            <span class="keyword">new</span> Thread(<span class="keyword">new</span> Worker(startSignal, doneSignal)).start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这边插入一些代码，确保上面的每个线程先启动起来，才执行下面的代码。</span></span><br><span class="line">        doSomethingElse();            <span class="comment">// don't let run yet</span></span><br><span class="line">        <span class="comment">// 因为这里 N == 1，所以，只要调用一次，那么所有的 await 方法都可以通过</span></span><br><span class="line">        startSignal.countDown();      <span class="comment">// let all threads proceed</span></span><br><span class="line">        doSomethingElse();</span><br><span class="line">        <span class="comment">// 等待所有任务结束</span></span><br><span class="line">        doneSignal.await();           <span class="comment">// wait for all to finish</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span> <span class="keyword">implements</span> <span class="title">Runnable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CountDownLatch startSignal;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> CountDownLatch doneSignal;</span><br><span class="line"></span><br><span class="line">    Worker(CountDownLatch startSignal, CountDownLatch doneSignal) &#123;</span><br><span class="line">        <span class="keyword">this</span>.startSignal = startSignal;</span><br><span class="line">        <span class="keyword">this</span>.doneSignal = doneSignal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 为了让所有线程同时开始任务，我们让所有线程先阻塞在这里</span></span><br><span class="line">            <span class="comment">// 等大家都准备好了，再打开这个门栓</span></span><br><span class="line">            startSignal.await();</span><br><span class="line">            doWork();</span><br><span class="line">            doneSignal.countDown();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InterruptedException ex) &#123;</span><br><span class="line">        &#125; <span class="comment">// return;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">doWork</span><span class="params">()</span> </span>&#123; ...&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这个例子中，doneSignal 同第一个例子的使用，我们说说这里的 startSignal。N 个新开启的线程都调用了startSignal.await() 进行阻塞等待，它们阻塞在<strong>栅栏</strong>上，只有当条件满足的时候（startSignal.countDown()），它们才能同时通过这个栅栏，目的是让所有的线程站在一个起跑线上。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/44/1.jpg" alt="aqs-0"></p><p>如果始终只有一个线程调用 await 方法等待任务完成，那么 CountDownLatch 就会简单很多，所以之后的源码分析读者一定要在脑海中构建出这么一个场景：有 m 个线程是做任务的，有 n 个线程在某个栅栏上等待这 m 个线程做完任务，直到所有 m 个任务完成后，n 个线程同时通过栅栏。</p><h3 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h3><p>Talk is cheap, show me the code.</p><p>构造方法，需要传入一个不小于 0 的整数：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">CountDownLatch</span><span class="params">(<span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (count &lt; <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"count &lt; 0"</span>);</span><br><span class="line">    <span class="keyword">this</span>.sync = <span class="keyword">new</span> Sync(count);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 老套路了，内部封装一个 Sync 类继承自 AQS</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Sync</span> <span class="keyword">extends</span> <span class="title">AbstractQueuedSynchronizer</span> </span>&#123;</span><br><span class="line">    Sync(<span class="keyword">int</span> count) &#123;</span><br><span class="line">        <span class="comment">// 这样就 state == count 了</span></span><br><span class="line">        setState(count);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>代码都是套路，先分析套路：AQS 里面的 state 是一个整数值，这边用一个 int count 参数其实初始化就是设置了这个值，所有调用了 await 方法的等待线程会挂起，然后有其他一些线程会做 state = state - 1 操作，当 state 减到 0 的同时，那个将 state 减为 0 的线程会负责唤醒 所有调用了 await 方法的线程。都是套路啊，只是 Doug Lea 的套路很深，代码很巧妙，不然我们也没有要分析源码的必要。</p></blockquote><p>对于 CountDownLatch，我们仅仅需要关心两个方法，一个是 countDown() 方法，另一个是 await() 方法。</p><p>countDown() 方法每次调用都会将 state 减 1，直到 state 的值为 0；而 await 是一个阻塞方法，当 state 减为 0 的时候，await 方法才会返回。await 可以被多个线程调用，读者这个时候脑子里要有个图：所有调用了 await 方法的线程阻塞在 AQS 的阻塞队列中，等待条件满足（state == 0），将线程从队列中一个个唤醒过来。</p><p>我们用以下程序来分析源码，t1 和 t2 负责调用 countDown() 方法，t3 和 t4 调用 await 方法阻塞：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CountDownLatchDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        CountDownLatch latch = <span class="keyword">new</span> CountDownLatch(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        Thread t1 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException ignore) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 休息 5 秒后(模拟线程工作了 5 秒)，调用 countDown()</span></span><br><span class="line">                latch.countDown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="string">"t1"</span>);</span><br><span class="line"></span><br><span class="line">        Thread t2 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    Thread.sleep(<span class="number">10000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException ignore) &#123;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 休息 10 秒后(模拟线程工作了 10 秒)，调用 countDown()</span></span><br><span class="line">                latch.countDown();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="string">"t2"</span>);</span><br><span class="line"></span><br><span class="line">        t1.start();</span><br><span class="line">        t2.start();</span><br><span class="line"></span><br><span class="line">        Thread t3 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 阻塞，等待 state 减为 0</span></span><br><span class="line">                    latch.await();</span><br><span class="line">                    System.out.println(<span class="string">"线程 t3 从 await 中返回了"</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"线程 t3 await 被中断"</span>);</span><br><span class="line">                    Thread.currentThread().interrupt();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="string">"t3"</span>);</span><br><span class="line">        Thread t4 = <span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 阻塞，等待 state 减为 0</span></span><br><span class="line">                    latch.await();</span><br><span class="line">                    System.out.println(<span class="string">"线程 t4 从 await 中返回了"</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"线程 t4 await 被中断"</span>);</span><br><span class="line">                    Thread.currentThread().interrupt();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="string">"t4"</span>);</span><br><span class="line"></span><br><span class="line">        t3.start();</span><br><span class="line">        t4.start();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>上述程序，大概在过了 10 秒左右的时候，会输出：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">线程 t3 从 await 中返回了</span><br><span class="line">线程 t4 从 await 中返回了</span><br></pre></td></tr></table></figure></div><blockquote><p>这两条输出，顺序不是绝对的</p><p>后面的分析，我们假设 t3 先进入阻塞队列</p></blockquote><p>接下来，我们按照流程一步一步走：先 await 等待，然后被唤醒，await 方法返回。</p><p>首先，我们来看 await() 方法，它代表线程阻塞，等待 state 的值减为 0。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    sync.acquireSharedInterruptibly(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquireSharedInterruptibly</span><span class="params">(<span class="keyword">int</span> arg)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="comment">// 这也是老套路了，我在第二篇的中断那一节说过了</span></span><br><span class="line">    <span class="keyword">if</span> (Thread.interrupted())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// t3 和 t4 调用 await 的时候，state 都大于 0（state 此时为 2）。</span></span><br><span class="line">    <span class="comment">// 也就是说，这个 if 返回 true，然后往里看</span></span><br><span class="line">    <span class="keyword">if</span> (tryAcquireShared(arg) &lt; <span class="number">0</span>)</span><br><span class="line">        doAcquireSharedInterruptibly(arg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只有当 state == 0 的时候，这个方法才会返回 1</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (getState() == <span class="number">0</span>) ? <span class="number">1</span> : -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>从方法名我们就可以看出，这个方法是获取共享锁，并且此方法是可中断的（中断的时候抛出 InterruptedException 退出这个方法）。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doAcquireSharedInterruptibly</span><span class="params">(<span class="keyword">int</span> arg)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="comment">// 1. 入队</span></span><br><span class="line">    <span class="keyword">final</span> Node node = addWaiter(Node.SHARED);</span><br><span class="line">    <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">final</span> Node p = node.predecessor();</span><br><span class="line">            <span class="keyword">if</span> (p == head) &#123;</span><br><span class="line">                <span class="comment">// 同上，只要 state 不等于 0，那么这个方法返回 -1</span></span><br><span class="line">                <span class="keyword">int</span> r = tryAcquireShared(arg);</span><br><span class="line">                <span class="keyword">if</span> (r &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    setHeadAndPropagate(node, r);</span><br><span class="line">                    p.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                    failed = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 2</span></span><br><span class="line">            <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                parkAndCheckInterrupt())</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (failed)</span><br><span class="line">            cancelAcquire(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>我们来仔细分析这个方法，线程 t3 经过第 1 步 addWaiter 入队以后，我们应该可以得到这个：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/44/2.jpg" alt="aqs-0"></p><p>由于 tryAcquireShared 这个方法会返回 -1，所以 if (r &gt;= 0) 这个分支不会进去。到 shouldParkAfterFailedAcquire 的时候，t3 将 head 的 waitStatus 值设置为 -1，如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/44/3.jpg" alt="aqs-0"></p><p>然后进入到 parkAndCheckInterrupt 的时候，t3 挂起。</p><p>我们再分析 t4 入队，t4 会将前驱节点 t3 所在节点的 waitStatus 设置为 -1，t4 入队后，应该是这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/44/4.jpg" alt="aqs-0"></p><p>然后，t4 也挂起。接下来，t3 和 t4 就等待唤醒了。</p><p>接下来，我们来看唤醒的流程。为了让下面的示意图更丰富些，我们假设用 10 初始化 CountDownLatch。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/44/5.jpg" alt="aqs-0"></p><p>当然，我们的例子中，其实没有 10 个线程，只有 2 个线程 t1 和 t2，只是为了让图好看些罢了。</p><p>我们再一步步看具体的流程。首先，我们看 countDown() 方法:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">countDown</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.releaseShared(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">releaseShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 只有当 state 减为 0 的时候，tryReleaseShared 才返回 true</span></span><br><span class="line">    <span class="comment">// 否则只是简单的 state = state - 1 那么 countDown() 方法就结束了</span></span><br><span class="line">    <span class="comment">//    将 state 减到 0 的那个操作才是最复杂的，继续往下吧</span></span><br><span class="line">    <span class="keyword">if</span> (tryReleaseShared(arg)) &#123;</span><br><span class="line">        <span class="comment">// 唤醒 await 的线程</span></span><br><span class="line">        doReleaseShared();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 这个方法很简单，用自旋的方法实现 state 减 1</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">tryReleaseShared</span><span class="params">(<span class="keyword">int</span> releases)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">int</span> c = getState();</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> nextc = c-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (compareAndSetState(c, nextc))</span><br><span class="line">            <span class="keyword">return</span> nextc == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>countDown 方法就是每次调用都将 state 值减 1，如果 state 减到 0 了，那么就调用下面的方法进行唤醒阻塞队列中的线程：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用这个方法的时候，state == 0</span></span><br><span class="line"><span class="comment">// 这个方法先不要看所有的代码，按照思路往下到我写注释的地方，我们先跑通一个流程，其他的之后还会仔细分析</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doReleaseShared</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        Node h = head;</span><br><span class="line">        <span class="keyword">if</span> (h != <span class="keyword">null</span> &amp;&amp; h != tail) &#123;</span><br><span class="line">            <span class="keyword">int</span> ws = h.waitStatus;</span><br><span class="line">            <span class="comment">// t3 入队的时候，已经将头节点的 waitStatus 设置为 Node.SIGNAL（-1） 了</span></span><br><span class="line">            <span class="keyword">if</span> (ws == Node.SIGNAL) &#123;</span><br><span class="line">                <span class="comment">// 将 head 的 waitStatue 设置为 0</span></span><br><span class="line">                <span class="keyword">if</span> (!compareAndSetWaitStatus(h, Node.SIGNAL, <span class="number">0</span>))</span><br><span class="line">                    <span class="keyword">continue</span>;            <span class="comment">// loop to recheck cases</span></span><br><span class="line">                <span class="comment">// 就是这里，唤醒 head 的后继节点，也就是阻塞队列中的第一个节点</span></span><br><span class="line">                <span class="comment">// 在这里，也就是唤醒 t3</span></span><br><span class="line">                unparkSuccessor(h);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ws == <span class="number">0</span> &amp;&amp;</span><br><span class="line">                     !compareAndSetWaitStatus(h, <span class="number">0</span>, Node.PROPAGATE)) <span class="comment">// todo</span></span><br><span class="line">                <span class="keyword">continue</span>;                <span class="comment">// loop on failed CAS</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (h == head)                   <span class="comment">// loop if head changed</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>一旦 t3 被唤醒后，我们继续回到 await 的这段代码，parkAndCheckInterrupt 返回，我们先不考虑中断的情况：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doAcquireSharedInterruptibly</span><span class="params">(<span class="keyword">int</span> arg)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Node node = addWaiter(Node.SHARED);</span><br><span class="line">    <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">final</span> Node p = node.predecessor();</span><br><span class="line">            <span class="keyword">if</span> (p == head) &#123;</span><br><span class="line">                <span class="keyword">int</span> r = tryAcquireShared(arg);</span><br><span class="line">                <span class="keyword">if</span> (r &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    setHeadAndPropagate(node, r); <span class="comment">// 2. 这里是下一步</span></span><br><span class="line">                    p.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                    failed = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                <span class="comment">// 1. 唤醒后这个方法返回</span></span><br><span class="line">                parkAndCheckInterrupt())</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (failed)</span><br><span class="line">            cancelAcquire(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>接下来，t3 会进到 setHeadAndPropagate(node, r) 这个方法，先把 head 给占了，然后唤醒队列中其他的线程：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setHeadAndPropagate</span><span class="params">(Node node, <span class="keyword">int</span> propagate)</span> </span>&#123;</span><br><span class="line">    Node h = head; <span class="comment">// Record old head for check below</span></span><br><span class="line">    setHead(node);</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 下面说的是，唤醒当前 node 之后的节点，即 t3 已经醒了，马上唤醒 t4</span></span><br><span class="line">    <span class="comment">// 类似的，如果 t4 后面还有 t5，那么 t4 醒了以后，马上将 t5 给唤醒了</span></span><br><span class="line">    <span class="keyword">if</span> (propagate &gt; <span class="number">0</span> || h == <span class="keyword">null</span> || h.waitStatus &lt; <span class="number">0</span> ||</span><br><span class="line">        (h = head) == <span class="keyword">null</span> || h.waitStatus &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        Node s = node.next;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span> || s.isShared())</span><br><span class="line">            <span class="comment">// 又是这个方法，只是现在的 head 已经不是原来的空节点了，是 t3 的节点了</span></span><br><span class="line">            doReleaseShared();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>又回到这个方法了，那么接下来，我们好好分析 doReleaseShared 这个方法，我们根据流程，头节点 head 此时是 t3 节点了：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用这个方法的时候，state == 0</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doReleaseShared</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        Node h = head;</span><br><span class="line">        <span class="comment">// 1. h == null: 说明阻塞队列为空</span></span><br><span class="line">        <span class="comment">// 2. h == tail: 说明头结点可能是刚刚初始化的头节点，</span></span><br><span class="line">        <span class="comment">//   或者是普通线程节点，但是此节点既然是头节点了，那么代表已经被唤醒了，阻塞队列没有其他节点了</span></span><br><span class="line">        <span class="comment">// 所以这两种情况不需要进行唤醒后继节点</span></span><br><span class="line">        <span class="keyword">if</span> (h != <span class="keyword">null</span> &amp;&amp; h != tail) &#123;</span><br><span class="line">            <span class="keyword">int</span> ws = h.waitStatus;</span><br><span class="line">            <span class="comment">// t4 将头节点(此时是 t3)的 waitStatus 设置为 Node.SIGNAL（-1） 了</span></span><br><span class="line">            <span class="keyword">if</span> (ws == Node.SIGNAL) &#123;</span><br><span class="line">                <span class="comment">// 这里 CAS 失败的场景请看下面的解读</span></span><br><span class="line">                <span class="keyword">if</span> (!compareAndSetWaitStatus(h, Node.SIGNAL, <span class="number">0</span>))</span><br><span class="line">                    <span class="keyword">continue</span>;            <span class="comment">// loop to recheck cases</span></span><br><span class="line">                <span class="comment">// 就是这里，唤醒 head 的后继节点，也就是阻塞队列中的第一个节点</span></span><br><span class="line">                <span class="comment">// 在这里，也就是唤醒 t4</span></span><br><span class="line">                unparkSuccessor(h);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ws == <span class="number">0</span> &amp;&amp;</span><br><span class="line">                     <span class="comment">// 这个 CAS 失败的场景是：执行到这里的时候，刚好有一个节点入队，入队会将这个 ws 设置为 -1</span></span><br><span class="line">                     !compareAndSetWaitStatus(h, <span class="number">0</span>, Node.PROPAGATE))</span><br><span class="line">                <span class="keyword">continue</span>;                <span class="comment">// loop on failed CAS</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果到这里的时候，前面唤醒的线程已经占领了 head，那么再循环</span></span><br><span class="line">        <span class="comment">// 否则，就是 head 没变，那么退出循环，</span></span><br><span class="line">        <span class="comment">// 退出循环是不是意味着阻塞队列中的其他节点就不唤醒了？当然不是，唤醒的线程之后还是会调用这个方法的</span></span><br><span class="line">        <span class="keyword">if</span> (h == head)                   <span class="comment">// loop if head changed</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>我们分析下最后一个 if 语句，然后才能解释第一个 CAS 为什么可能会失败：</p><p>1、h == head：说明头节点还没有被刚刚用 unparkSuccessor 唤醒的线程（这里可以理解为 t4）占有，此时 break 退出循环。<br>2、 h != head：头节点被刚刚唤醒的线程（这里可以理解为 t4）占有，那么这里重新进入下一轮循环，唤醒下一个节点（这里是 t4 ）。我们知道，等到 t4 被唤醒后，其实是会主动唤醒 t5、t6、t7…，那为什么这里要进行下一个循环来唤醒 t5 呢？我觉得是出于吞吐量的考虑。</p><p>满足上面的 2 的场景，那么我们就能知道为什么上面的 CAS 操作 compareAndSetWaitStatus(h, Node.SIGNAL, 0) 会失败了？</p><p>因为当前进行 for 循环的线程到这里的时候，可能刚刚唤醒的线程 t4 也刚刚好到这里了，那么就有可能 CAS 失败了。</p><p>for 循环第一轮的时候会唤醒 t4，t4 醒后会将自己设置为头节点，如果在 t4 设置头节点后，for 循环才跑到 if (h == head)，那么此时会返回 false，for 循环会进入下一轮。t4 唤醒后也会进入到这个方法里面，那么 for 循环第二轮和 t4 就有可能在这个 CAS 相遇，那么就只会有一个成功了。</p><h2 id="CyclicBarrier"><a href="#CyclicBarrier" class="headerlink" title="CyclicBarrier"></a>CyclicBarrier</h2><p>字面意思是“可重复使用的栅栏”或“周期性的栅栏”，总之不是用了一次就没用了的，CyclicBarrier 相比 CountDownLatch 来说，要简单很多，其源码没有什么高深的地方，它是 ReentrantLock 和 Condition 的组合使用。看如下示意图，CyclicBarrier 和 CountDownLatch 是不是很像，只是 CyclicBarrier 可以有不止一个栅栏，因为它的栅栏（Barrier）可以重复使用（Cyclic）。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/44/6.jpg" alt="aqs-0"></p><p>首先，CyclicBarrier 的源码实现和 CountDownLatch 大相径庭，CountDownLatch 基于 AQS 的共享模式的使用，而 CyclicBarrier 基于 Condition 来实现。</p><p>因为 CyclicBarrier 的源码相对来说简单许多，读者只要熟悉了前面关于 Condition 的分析，那么这里的源码是毫无压力的，就是几个特殊概念罢了。</p><p>先用一张图来描绘下 CyclicBarrier 里面的一些概念，和它的基本使用流程：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/44/7.jpg" alt="aqs-0"></p><blockquote><p>看图我们也知道了，CyclicBarrier 的源码最重要的就是 await() 方法了。</p></blockquote><p>大家先把图看完，然后我们开始源码分析：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CyclicBarrier</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 我们说了，CyclicBarrier 是可以重复使用的，我们把每次从开始使用到穿过栅栏当做"一代"，或者"一个周期"</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Generation</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> broken = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** The lock for guarding barrier entry */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// CyclicBarrier 是基于 Condition 的</span></span><br><span class="line">    <span class="comment">// Condition 是“条件”的意思，CyclicBarrier 的等待线程通过 barrier 的“条件”是大家都到了栅栏上</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Condition trip = lock.newCondition();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 参与的线程数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> parties;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果设置了这个，代表越过栅栏之前，要执行相应的操作</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Runnable barrierCommand;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前所处的“代”</span></span><br><span class="line">    <span class="keyword">private</span> Generation generation = <span class="keyword">new</span> Generation();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 还没有到栅栏的线程数，这个值初始为 parties，然后递减</span></span><br><span class="line">    <span class="comment">// 还没有到栅栏的线程数 = parties - 已经到栅栏的数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> count;</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CyclicBarrier</span><span class="params">(<span class="keyword">int</span> parties, Runnable barrierAction)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (parties &lt;= <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">        <span class="keyword">this</span>.parties = parties;</span><br><span class="line">        <span class="keyword">this</span>.count = parties;</span><br><span class="line">        <span class="keyword">this</span>.barrierCommand = barrierAction;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CyclicBarrier</span><span class="params">(<span class="keyword">int</span> parties)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(parties, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div><p>首先，先看怎么开启新的一代：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开启新的一代，当最后一个线程到达栅栏上的时候，调用这个方法来唤醒其他线程，同时初始化“下一代”</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">nextGeneration</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 首先，需要唤醒所有的在栅栏上等待的线程</span></span><br><span class="line">    trip.signalAll();</span><br><span class="line">    <span class="comment">// 更新 count 的值</span></span><br><span class="line">    count = parties;</span><br><span class="line">    <span class="comment">// 重新生成“新一代”</span></span><br><span class="line">    generation = <span class="keyword">new</span> Generation();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>开启新的一代，类似于重新实例化一个 CyclicBarrier 实例</p></blockquote><p>看看怎么打破一个栅栏：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">breakBarrier</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 设置状态 broken 为 true</span></span><br><span class="line">    generation.broken = <span class="keyword">true</span>;</span><br><span class="line">    <span class="comment">// 重置 count 为初始值 parties</span></span><br><span class="line">    count = parties;</span><br><span class="line">    <span class="comment">// 唤醒所有已经在等待的线程</span></span><br><span class="line">    trip.signalAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这两个方法之后用得到，现在开始分析最重要的等待通过栅栏方法 await 方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不带超时机制</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException, BrokenBarrierException </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> dowait(<span class="keyword">false</span>, <span class="number">0L</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (TimeoutException toe) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Error(toe); <span class="comment">// cannot happen</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 带超时机制，如果超时抛出 TimeoutException 异常</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">await</span><span class="params">(<span class="keyword">long</span> timeout, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> InterruptedException,</span></span><br><span class="line"><span class="function">           BrokenBarrierException,</span></span><br><span class="line"><span class="function">           TimeoutException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> dowait(<span class="keyword">true</span>, unit.toNanos(timeout));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>继续往里看：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">dowait</span><span class="params">(<span class="keyword">boolean</span> timed, <span class="keyword">long</span> nanos)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> InterruptedException, BrokenBarrierException,</span></span><br><span class="line"><span class="function">               TimeoutException </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    <span class="comment">// 先要获取到锁，然后在 finally 中要记得释放锁</span></span><br><span class="line">    <span class="comment">// 如果记得 Condition 部分的话，我们知道 condition 的 await() 会释放锁，被 signal() 唤醒的时候需要重新获取锁</span></span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> Generation g = generation;</span><br><span class="line">        <span class="comment">// 检查栅栏是否被打破，如果被打破，抛出 BrokenBarrierException 异常</span></span><br><span class="line">        <span class="keyword">if</span> (g.broken)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BrokenBarrierException();</span><br><span class="line">        <span class="comment">// 检查中断状态，如果中断了，抛出 InterruptedException 异常</span></span><br><span class="line">        <span class="keyword">if</span> (Thread.interrupted()) &#123;</span><br><span class="line">            breakBarrier();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// index 是这个 await 方法的返回值</span></span><br><span class="line">        <span class="comment">// 注意到这里，这个是从 count 递减后得到的值</span></span><br><span class="line">        <span class="keyword">int</span> index = --count;</span><br><span class="line">      </span><br><span class="line">        <span class="comment">// 如果等于 0，说明所有的线程都到栅栏上了，准备通过</span></span><br><span class="line">        <span class="keyword">if</span> (index == <span class="number">0</span>) &#123;  <span class="comment">// tripped</span></span><br><span class="line">            <span class="keyword">boolean</span> ranAction = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 如果在初始化的时候，指定了通过栅栏前需要执行的操作，在这里会得到执行</span></span><br><span class="line">                <span class="keyword">final</span> Runnable command = barrierCommand;</span><br><span class="line">                <span class="keyword">if</span> (command != <span class="keyword">null</span>)</span><br><span class="line">                    command.run();</span><br><span class="line">                <span class="comment">// 如果 ranAction 为 true，说明执行 command.run() 的时候，没有发生异常退出的情况</span></span><br><span class="line">                ranAction = <span class="keyword">true</span>;</span><br><span class="line">                <span class="comment">// 唤醒等待的线程，然后开启新的一代</span></span><br><span class="line">                nextGeneration();</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!ranAction)</span><br><span class="line">                    <span class="comment">// 进到这里，说明执行指定操作的时候，发生了异常，那么需要打破栅栏</span></span><br><span class="line">                    <span class="comment">// 之前我们说了，打破栅栏意味着唤醒所有等待的线程，设置 broken 为 true，重置 count 为 parties</span></span><br><span class="line">                    breakBarrier();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// loop until tripped, broken, interrupted, or timed out</span></span><br><span class="line">        <span class="comment">// 如果是最后一个线程调用 await，那么上面就返回了</span></span><br><span class="line">        <span class="comment">// 下面的操作是给那些不是最后一个到达栅栏的线程执行的</span></span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 如果带有超时机制，调用带超时的 Condition 的 await 方法等待，直到最后一个线程调用 await</span></span><br><span class="line">                <span class="keyword">if</span> (!timed)</span><br><span class="line">                    trip.await();</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (nanos &gt; <span class="number">0L</span>)</span><br><span class="line">                    nanos = trip.awaitNanos(nanos);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException ie) &#123;</span><br><span class="line">                <span class="comment">// 如果到这里，说明等待的线程在 await（是 Condition 的 await）的时候被中断</span></span><br><span class="line">                <span class="keyword">if</span> (g == generation &amp;&amp; ! g.broken) &#123;</span><br><span class="line">                    <span class="comment">// 打破栅栏</span></span><br><span class="line">                    breakBarrier();</span><br><span class="line">                    <span class="comment">// 打破栅栏后，重新抛出这个 InterruptedException 异常给外层调用的方法</span></span><br><span class="line">                    <span class="keyword">throw</span> ie;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">// 到这里，说明 g != generation, 说明新的一代已经产生，即最后一个线程 await 执行完成，</span></span><br><span class="line">                    <span class="comment">// 那么此时没有必要再抛出 InterruptedException 异常，记录下来这个中断信息即可</span></span><br><span class="line">                    <span class="comment">// 或者是栅栏已经被打破了，那么也不应该抛出 InterruptedException 异常，</span></span><br><span class="line">                    <span class="comment">// 而是之后抛出 BrokenBarrierException 异常</span></span><br><span class="line">                    Thread.currentThread().interrupt();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 唤醒后，检查栅栏是否是“破的”</span></span><br><span class="line">            <span class="keyword">if</span> (g.broken)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BrokenBarrierException();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 这个 for 循环除了异常，就是要从这里退出了</span></span><br><span class="line">            <span class="comment">// 我们要清楚，最后一个线程在执行完指定任务(如果有的话)，会调用 nextGeneration 来开启一个新的代</span></span><br><span class="line">            <span class="comment">// 然后释放掉锁，其他线程从 Condition 的 await 方法中得到锁并返回，然后到这里的时候，其实就会满足 g != generation 的</span></span><br><span class="line">            <span class="comment">// 那什么时候不满足呢？barrierCommand 执行过程中抛出了异常，那么会执行打破栅栏操作，</span></span><br><span class="line">            <span class="comment">// 设置 broken 为true，然后唤醒这些线程。这些线程会从上面的 if (g.broken) 这个分支抛 BrokenBarrierException 异常返回</span></span><br><span class="line">            <span class="comment">// 当然，还有最后一种可能，那就是 await 超时，此种情况不会从上面的 if 分支异常返回，也不会从这里返回，会执行后面的代码</span></span><br><span class="line">            <span class="keyword">if</span> (g != generation)</span><br><span class="line">                <span class="keyword">return</span> index;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果醒来发现超时了，打破栅栏，抛出异常</span></span><br><span class="line">            <span class="keyword">if</span> (timed &amp;&amp; nanos &lt;= <span class="number">0L</span>) &#123;</span><br><span class="line">                breakBarrier();</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> TimeoutException();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>好了，我想我应该讲清楚了吧，我好像几乎没有漏掉任何一行代码吧？</p><p>下面开始收尾工作。</p><p>首先，我们看看怎么得到有多少个线程到了栅栏上，处于等待状态：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNumberWaiting</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> parties - count;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>判断一个栅栏是否被打破了，这个很简单，直接看 broken 的值即可：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBroken</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> generation.broken;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>前面我们在说 await 的时候也几乎说清楚了，什么时候栅栏会被打破，总结如下：</p><p>1、 中断，我们说了，如果某个等待的线程发生了中断，那么会打破栅栏，同时抛出 InterruptedException 异常；<br>2、 超时，打破栅栏，同时抛出 TimeoutException 异常；<br>3、 指定执行的操作抛出了异常，这个我们前面也说过。</p><p>最后，我们来看看怎么重置一个栅栏：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reset</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> ReentrantLock lock = <span class="keyword">this</span>.lock;</span><br><span class="line">    lock.lock();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        breakBarrier();   <span class="comment">// break the current generation</span></span><br><span class="line">        nextGeneration(); <span class="comment">// start a new generation</span></span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        lock.unlock();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>我们设想一下，如果初始化时，指定了线程 parties = 4，前面有 3 个线程调用了 await 等待，在第 4 个线程调用 await 之前，我们调用 reset 方法，那么会发生什么？</p><p>首先，打破栅栏，那意味着所有等待的线程（3个等待的线程）会唤醒，await 方法会通过抛出 BrokenBarrierException 异常返回。然后开启新的一代，重置了 count 和 generation，相当于一切归零了。</p><p>怎么样，CyclicBarrier 源码很简单吧。</p><h2 id="Semaphore"><a href="#Semaphore" class="headerlink" title="Semaphore"></a>Semaphore</h2><p>有了 CountDownLatch 的基础后，分析 Semaphore 会简单很多。Semaphore 是什么呢？它类似一个资源池（读者可以类比线程池），每个线程需要调用 acquire() 方法获取资源，然后才能执行，执行完后，需要 release 资源，让给其他的线程用。</p><p>大概大家也可以猜到，Semaphore 其实也是 AQS 中共享锁的使用，因为每个线程共享一个池嘛。</p><p>套路解读：创建 Semaphore 实例的时候，需要一个参数 permits，这个基本上可以确定是设置给 AQS 的 state 的，然后每个线程调用 acquire 的时候，执行 state = state - 1，release 的时候执行 state = state + 1，当然，acquire 的时候，如果 state = 0，说明没有资源了，需要等待其他线程 release。</p><p>构造方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Semaphore</span><span class="params">(<span class="keyword">int</span> permits)</span> </span>&#123;</span><br><span class="line">    sync = <span class="keyword">new</span> NonfairSync(permits);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Semaphore</span><span class="params">(<span class="keyword">int</span> permits, <span class="keyword">boolean</span> fair)</span> </span>&#123;</span><br><span class="line">    sync = fair ? <span class="keyword">new</span> FairSync(permits) : <span class="keyword">new</span> NonfairSync(permits);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这里和 ReentrantLock 类似，用了公平策略和非公平策略。</p><p>看 acquire 方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    sync.acquireSharedInterruptibly(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">acquireUninterruptibly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.acquireShared(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">(<span class="keyword">int</span> permits)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (permits &lt; <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">    sync.acquireSharedInterruptibly(permits);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">acquireUninterruptibly</span><span class="params">(<span class="keyword">int</span> permits)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (permits &lt; <span class="number">0</span>) <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException();</span><br><span class="line">    sync.acquireShared(permits);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这几个方法也是老套路了，大家基本都懂了吧，这边多了两个可以传参的 acquire 方法，不过大家也都懂的吧，如果我们需要一次获取超过一个的资源，会用得着这个的。</p><p>我们接下来看不抛出 InterruptedException 异常的 acquireUninterruptibly() 方法吧：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">acquireUninterruptibly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.acquireShared(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquireShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tryAcquireShared(arg) &lt; <span class="number">0</span>)</span><br><span class="line">        doAcquireShared(arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>前面说了，Semaphore 分公平策略和非公平策略，我们对比一下两个 tryAcquireShared 方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 公平策略：</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="comment">// 区别就在于是不是会先判断是否有线程在排队，然后才进行 CAS 减操作</span></span><br><span class="line">        <span class="keyword">if</span> (hasQueuedPredecessors())</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> available = getState();</span><br><span class="line">        <span class="keyword">int</span> remaining = available - acquires;</span><br><span class="line">        <span class="keyword">if</span> (remaining &lt; <span class="number">0</span> ||</span><br><span class="line">            compareAndSetState(available, remaining))</span><br><span class="line">            <span class="keyword">return</span> remaining;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 非公平策略：</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">int</span> <span class="title">tryAcquireShared</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> nonfairTryAcquireShared(acquires);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">int</span> <span class="title">nonfairTryAcquireShared</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">int</span> available = getState();</span><br><span class="line">        <span class="keyword">int</span> remaining = available - acquires;</span><br><span class="line">        <span class="keyword">if</span> (remaining &lt; <span class="number">0</span> ||</span><br><span class="line">            compareAndSetState(available, remaining))</span><br><span class="line">            <span class="keyword">return</span> remaining;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>也是老套路了，所以从源码分析角度的话，我们其实不太需要关心是不是公平策略还是非公平策略，它们的区别往往就那么一两行。</p><p>我们再回到 acquireShared 方法，</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquireShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tryAcquireShared(arg) &lt; <span class="number">0</span>)</span><br><span class="line">        doAcquireShared(arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>由于 tryAcquireShared(arg) 返回小于 0 的时候，说明 state 已经小于 0 了（没资源了），此时 acquire 不能立马拿到资源，需要进入到阻塞队列等待，虽然贴了很多代码，不在乎多这点了：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doAcquireShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Node node = addWaiter(Node.SHARED);</span><br><span class="line">    <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">boolean</span> interrupted = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">final</span> Node p = node.predecessor();</span><br><span class="line">            <span class="keyword">if</span> (p == head) &#123;</span><br><span class="line">                <span class="keyword">int</span> r = tryAcquireShared(arg);</span><br><span class="line">                <span class="keyword">if</span> (r &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                    setHeadAndPropagate(node, r);</span><br><span class="line">                    p.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                    <span class="keyword">if</span> (interrupted)</span><br><span class="line">                        selfInterrupt();</span><br><span class="line">                    failed = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                parkAndCheckInterrupt())</span><br><span class="line">                interrupted = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (failed)</span><br><span class="line">            cancelAcquire(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这个方法我就不介绍了，线程挂起后等待有资源被 release 出来。接下来，我们就要看 release 的方法了：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 任务介绍，释放一个资源</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">release</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.releaseShared(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">releaseShared</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (tryReleaseShared(arg)) &#123;</span><br><span class="line">        doReleaseShared();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryReleaseShared</span><span class="params">(<span class="keyword">int</span> releases)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">int</span> current = getState();</span><br><span class="line">        <span class="keyword">int</span> next = current + releases;</span><br><span class="line">        <span class="comment">// 溢出，当然，我们一般也不会用这么大的数</span></span><br><span class="line">        <span class="keyword">if</span> (next &lt; current) <span class="comment">// overflow</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">"Maximum permit count exceeded"</span>);</span><br><span class="line">        <span class="keyword">if</span> (compareAndSetState(current, next))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>tryReleaseShared 方法总是会返回 true，然后是 doReleaseShared，这个也是我们熟悉的方法了，我就贴下代码，不分析了，这个方法用于唤醒所有的等待线程：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doReleaseShared</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        Node h = head;</span><br><span class="line">        <span class="keyword">if</span> (h != <span class="keyword">null</span> &amp;&amp; h != tail) &#123;</span><br><span class="line">            <span class="keyword">int</span> ws = h.waitStatus;</span><br><span class="line">            <span class="keyword">if</span> (ws == Node.SIGNAL) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!compareAndSetWaitStatus(h, Node.SIGNAL, <span class="number">0</span>))</span><br><span class="line">                    <span class="keyword">continue</span>;            <span class="comment">// loop to recheck cases</span></span><br><span class="line">                unparkSuccessor(h);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (ws == <span class="number">0</span> &amp;&amp;</span><br><span class="line">                     !compareAndSetWaitStatus(h, <span class="number">0</span>, Node.PROPAGATE))</span><br><span class="line">                <span class="keyword">continue</span>;                <span class="comment">// loop on failed CAS</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (h == head)                   <span class="comment">// loop if head changed</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>Semphore 的源码确实很简单，基本上都是分析过的老代码的组合使用了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>写到这里，终于把 AbstractQueuedSynchronizer 基本上说完了，对于 Java 并发，Doug Lea 真的是神一样的存在。日后我们还会接触到很多 Doug Lea 的代码，希望我们大家都可以朝着大神的方向不断打磨自己的技术，少一些高大上的架构，多一些实实在在的优秀代码吧。</p><p>（全文完）</p><div class="note success"><p>原文链接：<a href="https://javadoop.com/post/AbstractQueuedSynchronizer-3" target="_blank" rel="noopener">一行一行源码分析清楚AbstractQueuedSynchronizer</a></p></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> AbstractQueuedSynchronizer </tag>
            
            <tag> ReentrantLock </tag>
            
            <tag> CountDownLatch </tag>
            
            <tag> CyclicBarrier </tag>
            
            <tag> Semaphore </tag>
            
            <tag> 并发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一行一行源码分析清楚 AbstractQueuedSynchronizer (二)</title>
      <link href="/posts/237210800.html"/>
      <url>/posts/237210800.html</url>
      
        <content type="html"><![CDATA[<p>文章比较长，信息量比较大，建议在 pc 上阅读。文章标题是为了呼应前文，其实可以单独成文的，主要是希望读者看文章能系统看。</p><p>本文关注以下几点内容：</p><p>1、 深入理解 ReentrantLock 公平锁和非公平锁的区别<br>2、 深入分析 AbstractQueuedSynchronizer 中的 ConditionObject<br>3、 深入理解 Java 线程中断和 InterruptedException 异常</p><p>基本上本文把以上几点都说清楚了，我假设读者看过<a href="https://www.liaofuzhan.com/posts/331601127.html">上一篇文章中对 AbstractQueuedSynchronizer 的介绍 </a>，当然如果你已经熟悉 AQS 中的独占锁了，那也可以直接看这篇。各小节之间基本上没什么关系，大家可以只关注自己感兴趣的部分。其实这篇文章的信息量很大，初学者估计<strong>至少要 1 小时</strong>才能看完，希望本文对得起大家的时间。</p><a id="more"></a><h2 id="公平锁和非公平锁"><a href="#公平锁和非公平锁" class="headerlink" title="公平锁和非公平锁"></a>公平锁和非公平锁</h2><p>ReentrantLock 默认采用非公平锁，除非你在构造方法中传入参数 true 。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ReentrantLock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 默认非公平锁</span></span><br><span class="line">    sync = <span class="keyword">new</span> NonfairSync();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ReentrantLock</span><span class="params">(<span class="keyword">boolean</span> fair)</span> </span>&#123;</span><br><span class="line">    sync = fair ? <span class="keyword">new</span> FairSync() : <span class="keyword">new</span> NonfairSync();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>公平锁的 lock 方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FairSync</span> <span class="keyword">extends</span> <span class="title">Sync</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        acquire(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// AbstractQueuedSynchronizer.acquire(int arg)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!tryAcquire(arg) &amp;&amp;</span><br><span class="line">            acquireQueued(addWaiter(Node.EXCLUSIVE), arg))</span><br><span class="line">            selfInterrupt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Thread current = Thread.currentThread();</span><br><span class="line">        <span class="keyword">int</span> c = getState();</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 1. 和非公平锁相比，这里多了一个判断：是否有线程在等待</span></span><br><span class="line">            <span class="keyword">if</span> (!hasQueuedPredecessors() &amp;&amp;</span><br><span class="line">                compareAndSetState(<span class="number">0</span>, acquires)) &#123;</span><br><span class="line">                setExclusiveOwnerThread(current);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (current == getExclusiveOwnerThread()) &#123;</span><br><span class="line">            <span class="keyword">int</span> nextc = c + acquires;</span><br><span class="line">            <span class="keyword">if</span> (nextc &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">"Maximum lock count exceeded"</span>);</span><br><span class="line">            setState(nextc);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>非公平锁的 lock 方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">NonfairSync</span> <span class="keyword">extends</span> <span class="title">Sync</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 2. 和公平锁相比，这里会直接先进行一次CAS，成功就返回了</span></span><br><span class="line">        <span class="keyword">if</span> (compareAndSetState(<span class="number">0</span>, <span class="number">1</span>))</span><br><span class="line">            setExclusiveOwnerThread(Thread.currentThread());</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            acquire(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// AbstractQueuedSynchronizer.acquire(int arg)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!tryAcquire(arg) &amp;&amp;</span><br><span class="line">            acquireQueued(addWaiter(Node.EXCLUSIVE), arg))</span><br><span class="line">            selfInterrupt();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nonfairTryAcquire(acquires);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Performs non-fair tryLock.  tryAcquire is implemented in</span></span><br><span class="line"><span class="comment"> * subclasses, but both need nonfair try for trylock method.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">nonfairTryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Thread current = Thread.currentThread();</span><br><span class="line">    <span class="keyword">int</span> c = getState();</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 这里没有对阻塞队列进行判断</span></span><br><span class="line">        <span class="keyword">if</span> (compareAndSetState(<span class="number">0</span>, acquires)) &#123;</span><br><span class="line">            setExclusiveOwnerThread(current);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (current == getExclusiveOwnerThread()) &#123;</span><br><span class="line">        <span class="keyword">int</span> nextc = c + acquires;</span><br><span class="line">        <span class="keyword">if</span> (nextc &lt; <span class="number">0</span>) <span class="comment">// overflow</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">"Maximum lock count exceeded"</span>);</span><br><span class="line">        setState(nextc);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>总结：公平锁和非公平锁只有两处不同：</p><p>1、 非公平锁在调用 lock 后，首先就会调用 CAS 进行一次抢锁，如果这个时候恰巧锁没有被占用，那么直接就获取到锁返回了。<br>2、 非公平锁在 CAS 失败后，和公平锁一样都会进入到 tryAcquire 方法，在 tryAcquire 方法中，如果发现锁这个时候被释放了（state == 0），非公平锁会直接 CAS 抢锁，但是公平锁会判断等待队列是否有线程处于等待状态，如果有则不去抢锁，乖乖排到后面。</p><p>公平锁和非公平锁就这两点区别，如果这两次 CAS 都不成功，那么后面非公平锁和公平锁是一样的，都要进入到阻塞队列等待唤醒。</p><p>相对来说，非公平锁会有更好的性能，因为它的吞吐量比较大。当然，非公平锁让获取锁的时间变得更加不确定，可能会导致在阻塞队列中的线程长期处于饥饿状态。</p><h2 id="Condition"><a href="#Condition" class="headerlink" title="Condition"></a>Condition</h2><p>Tips: 这里重申一下，要看懂这个，必须要先看懂上一篇关于 <a href="https://www.liaofuzhan.com/posts/331601127.html">AbstractQueuedSynchronizer</a> 的介绍，或者你已经有相关的知识了，否则这节肯定是看不懂的。</p><p>我们先来看看 Condition 的使用场景，Condition 经常可以用在<strong>生产者-消费者</strong>的场景中，请看 Doug Lea 给出的这个例子：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Condition;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.Lock;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.locks.ReentrantLock;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BoundedBuffer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Lock lock = <span class="keyword">new</span> ReentrantLock();</span><br><span class="line">    <span class="comment">// condition 依赖于 lock 来产生</span></span><br><span class="line">    <span class="keyword">final</span> Condition notFull = lock.newCondition();</span><br><span class="line">    <span class="keyword">final</span> Condition notEmpty = lock.newCondition();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Object[] items = <span class="keyword">new</span> Object[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> putptr, takeptr, count;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生产</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(Object x)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (count == items.length)</span><br><span class="line">                notFull.await();  <span class="comment">// 队列已满，等待，直到 not full 才能继续生产</span></span><br><span class="line">            items[putptr] = x;</span><br><span class="line">            <span class="keyword">if</span> (++putptr == items.length) putptr = <span class="number">0</span>;</span><br><span class="line">            ++count;</span><br><span class="line">            notEmpty.signal(); <span class="comment">// 生产成功，队列已经 not empty 了，发个通知出去</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 消费</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">take</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        lock.lock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">while</span> (count == <span class="number">0</span>)</span><br><span class="line">                notEmpty.await(); <span class="comment">// 队列为空，等待，直到队列 not empty，才能继续消费</span></span><br><span class="line">            Object x = items[takeptr];</span><br><span class="line">            <span class="keyword">if</span> (++takeptr == items.length) takeptr = <span class="number">0</span>;</span><br><span class="line">            --count;</span><br><span class="line">            notFull.signal(); <span class="comment">// 被我消费掉一个，队列 not full 了，发个通知出去</span></span><br><span class="line">            <span class="keyword">return</span> x;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            lock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>1、我们可以看到，在使用 condition 时，必须先持有相应的锁。这个和 Object 类中的方法有相似的语义，需要先持有某个对象的监视器锁才可以执行 wait(), notify() 或 notifyAll() 方法。</p><p>2、ArrayBlockingQueue 采用这种方式实现了生产者-消费者，所以请只把这个例子当做学习例子，实际生产中可以直接使用 ArrayBlockingQueue</p></blockquote><p>我们常用 obj.wait()，obj.notify() 或 obj.notifyAll() 来实现相似的功能，但是，它们是基于对象的监视器锁的。需要深入了解这几个方法的读者，可以参考我的另一篇文章《<a href="http://hongjiev.github.io/2017/07/05/Threads-And-Locks-md/" target="_blank" rel="noopener">深入分析 java 8 编程语言规范：Threads and Locks</a>》。而这里说的 Condition 是基于 ReentrantLock 实现的，而 ReentrantLock 是依赖于 AbstractQueuedSynchronizer 实现的。</p><p>在往下看之前，读者心里要有一个整体的概念。condition 是依赖于 ReentrantLock 的，不管是调用 await 进入等待还是 signal 唤醒，<strong>都必须获取到锁才能进行操作</strong>。</p><p>每个 ReentrantLock 实例可以通过调用多次 newCondition 产生多个 ConditionObject 的实例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">final</span> ConditionObject <span class="title">newCondition</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 实例化一个 ConditionObject</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ConditionObject();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>我们首先来看下我们关注的 Condition 的实现类 <code>AbstractQueuedSynchronizer</code> 类中的 <code>ConditionObject</code>。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConditionObject</span> <span class="keyword">implements</span> <span class="title">Condition</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1173984872572414699L</span>;</span><br><span class="line">        <span class="comment">// 条件队列的第一个节点</span></span><br><span class="line">  <span class="comment">// 不要管这里的关键字 transient，是不参与序列化的意思</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">transient</span> Node firstWaiter;</span><br><span class="line">        <span class="comment">// 条件队列的最后一个节点</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">transient</span> Node lastWaiter;</span><br><span class="line">        ......</span><br></pre></td></tr></table></figure></div><p>在上一篇介绍 AQS 的时候，我们有一个<strong>阻塞队列</strong>，用于保存等待获取锁的线程的队列。这里我们引入另一个概念，叫<strong>条件队列</strong>（condition queue），我画了一张简单的图用来说明这个。</p><blockquote><p>这里的阻塞队列如果叫做同步队列（sync queue）其实比较贴切，不过为了和前篇呼应，我就继续使用阻塞队列了。记住这里的两个概念，<strong>阻塞队列</strong>和<strong>条件队列</strong>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/43/1.jpg" alt="condition-2"></p><blockquote><p>这里，我们简单回顾下 Node 的属性：</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">volatile</span> <span class="keyword">int</span> waitStatus; <span class="comment">// 可取值 0、CANCELLED(1)、SIGNAL(-1)、CONDITION(-2)、PROPAGATE(-3)</span></span><br><span class="line"><span class="keyword">volatile</span> Node prev;</span><br><span class="line"><span class="keyword">volatile</span> Node next;</span><br><span class="line"><span class="keyword">volatile</span> Thread thread;</span><br><span class="line">Node nextWaiter;</span><br></pre></td></tr></table></figure></div><blockquote><p>prev 和 next 用于实现阻塞队列的双向链表，这里的 nextWaiter 用于实现条件队列的单向链表</p></blockquote><p>基本上，把这张图看懂，你也就知道 condition 的处理流程了。所以，我先简单解释下这图，然后再具体地解释代码实现。</p><p>1、 条件队列和阻塞队列的节点，都是 Node 的实例，因为条件队列的节点是需要转移到阻塞队列中去的；<br>2、 我们知道一个 ReentrantLock 实例可以通过多次调用 newCondition() 来产生多个 Condition 实例，这里对应 condition1 和 condition2。注意，ConditionObject 只有两个属性 firstWaiter 和 lastWaiter；<br>3、 每个 condition 有一个关联的<strong>条件队列</strong>，如线程 1 调用 <code>condition1.await()</code> 方法即可将当前线程 1 包装成 Node 后加入到条件队列中，然后阻塞在这里，不继续往下执行，条件队列是一个单向链表；<br>4、 调用<code>condition1.signal()</code> 触发一次唤醒，此时唤醒的是队头，会将condition1 对应的<strong>条件队列</strong>的 firstWaiter（队头） 移到<strong>阻塞队列的队尾</strong>，等待获取锁，获取锁后 await 方法才能返回，继续往下执行。</p><p>上面的 2-&gt;3-&gt;4 描述了一个最简单的流程，没有考虑中断、signalAll、还有带有超时参数的 await 方法等，不过把这里弄懂是这节的主要目的。</p><p>同时，从图中也可以很直观地看出，哪些操作是线程安全的，哪些操作是线程不安全的。</p><p>这个图看懂后，下面的代码分析就简单了。</p><p>接下来，我们一步步按照流程来走代码分析，我们先来看看 wait 方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 首先，这个方法是可被中断的，不可被中断的是另一个方法 awaitUninterruptibly()</span></span><br><span class="line"><span class="comment">// 这个方法会阻塞，直到调用 signal 方法（指 signal() 和 signalAll()，下同），或被中断</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="comment">// 老规矩，既然该方法要响应中断，那么在最开始就判断中断状态</span></span><br><span class="line">    <span class="keyword">if</span> (Thread.interrupted())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 添加到 condition 的条件队列中</span></span><br><span class="line">    Node node = addConditionWaiter();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 释放锁，返回值是释放锁之前的 state 值</span></span><br><span class="line">    <span class="comment">// await() 之前，当前线程是必须持有锁的，这里肯定要释放掉</span></span><br><span class="line">    <span class="keyword">int</span> savedState = fullyRelease(node);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> interruptMode = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 这里退出循环有两种情况，之后再仔细分析</span></span><br><span class="line">    <span class="comment">// 1. isOnSyncQueue(node) 返回 true，即当前 node 已经转移到阻塞队列了</span></span><br><span class="line">    <span class="comment">// 2. checkInterruptWhileWaiting(node) != 0 会到 break，然后退出循环，代表的是线程中断</span></span><br><span class="line">    <span class="keyword">while</span> (!isOnSyncQueue(node)) &#123;</span><br><span class="line">        LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> ((interruptMode = checkInterruptWhileWaiting(node)) != <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 被唤醒后，将进入阻塞队列，等待获取锁</span></span><br><span class="line">    <span class="keyword">if</span> (acquireQueued(node, savedState) &amp;&amp; interruptMode != THROW_IE)</span><br><span class="line">        interruptMode = REINTERRUPT;</span><br><span class="line">    <span class="keyword">if</span> (node.nextWaiter != <span class="keyword">null</span>) <span class="comment">// clean up if cancelled</span></span><br><span class="line">        unlinkCancelledWaiters();</span><br><span class="line">    <span class="keyword">if</span> (interruptMode != <span class="number">0</span>)</span><br><span class="line">        reportInterruptAfterWait(interruptMode);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>其实，我大体上也把整个 await 过程说得十之八九了，下面我们分步把上面的几个点用源码说清楚。</p><h3 id="1-将节点加入到条件队列"><a href="#1-将节点加入到条件队列" class="headerlink" title="1. 将节点加入到条件队列"></a>1. 将节点加入到条件队列</h3><p>addConditionWaiter() 是将当前节点加入到条件队列，看图我们知道，这种条件队列内的操作是线程安全的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将当前线程对应的节点入队，插入队尾</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">addConditionWaiter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Node t = lastWaiter;</span><br><span class="line">    <span class="comment">// 如果条件队列的最后一个节点取消了，将其清除出去</span></span><br><span class="line">    <span class="comment">// 为什么这里把 waitStatus 不等于 Node.CONDITION，就判定为该节点发生了取消排队？</span></span><br><span class="line">    <span class="keyword">if</span> (t != <span class="keyword">null</span> &amp;&amp; t.waitStatus != Node.CONDITION) &#123;</span><br><span class="line">        <span class="comment">// 这个方法会遍历整个条件队列，然后会将已取消的所有节点清除出队列</span></span><br><span class="line">        unlinkCancelledWaiters();</span><br><span class="line">        t = lastWaiter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// node 在初始化的时候，指定 waitStatus 为 Node.CONDITION</span></span><br><span class="line">    Node node = <span class="keyword">new</span> Node(Thread.currentThread(), Node.CONDITION);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// t 此时是 lastWaiter，队尾</span></span><br><span class="line">    <span class="comment">// 如果队列为空</span></span><br><span class="line">    <span class="keyword">if</span> (t == <span class="keyword">null</span>)</span><br><span class="line">        firstWaiter = node;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        t.nextWaiter = node;</span><br><span class="line">    lastWaiter = node;</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>上面的这块代码很简单，就是将当前线程进入到条件队列的队尾。</p><p>在addWaiter 方法中，有一个 unlinkCancelledWaiters() 方法，该方法用于清除队列中已经取消等待的节点。</p><p>当 await 的时候如果发生了取消操作（这点之后会说），或者是在节点入队的时候，发现最后一个节点是被取消的，会调用一次这个方法。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 等待队列是一个单向链表，遍历链表将已经取消等待的节点清除出去</span></span><br><span class="line"><span class="comment">// 纯属链表操作，很好理解，看不懂多看几遍就可以了</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unlinkCancelledWaiters</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Node t = firstWaiter;</span><br><span class="line">    Node trail = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">while</span> (t != <span class="keyword">null</span>) &#123;</span><br><span class="line">        Node next = t.nextWaiter;</span><br><span class="line">        <span class="comment">// 如果节点的状态不是 Node.CONDITION 的话，这个节点就是被取消的</span></span><br><span class="line">        <span class="keyword">if</span> (t.waitStatus != Node.CONDITION) &#123;</span><br><span class="line">            t.nextWaiter = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (trail == <span class="keyword">null</span>)</span><br><span class="line">                firstWaiter = next;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                trail.nextWaiter = next;</span><br><span class="line">            <span class="keyword">if</span> (next == <span class="keyword">null</span>)</span><br><span class="line">                lastWaiter = trail;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            trail = t;</span><br><span class="line">        t = next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="2-完全释放独占锁"><a href="#2-完全释放独占锁" class="headerlink" title="2. 完全释放独占锁"></a>2. 完全释放独占锁</h3><p>回到 wait 方法，节点入队了以后，会调用 <code>int savedState = fullyRelease(node);</code> 方法释放锁，注意，这里是完全释放独占锁（fully release），因为 ReentrantLock 是可以重入的。</p><blockquote><p>考虑一下这里的 savedState。如果在 condition1.await() 之前，假设线程先执行了 2 次 lock() 操作，那么 state 为 2，我们理解为该线程持有 2 把锁，这里 await() 方法必须将 state 设置为 0，然后再进入挂起状态，这样其他线程才能持有锁。当它被唤醒的时候，它需要重新持有 2 把锁，才能继续下去。</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 首先，我们要先观察到返回值 savedState 代表 release 之前的 state 值</span></span><br><span class="line"><span class="comment">// 对于最简单的操作：先 lock.lock()，然后 condition1.await()。</span></span><br><span class="line"><span class="comment">// 那么 state 经过这个方法由 1 变为 0，锁释放，此方法返回 1</span></span><br><span class="line"><span class="comment">// 相应的，如果 lock 重入了 n 次，savedState == n</span></span><br><span class="line"><span class="comment">// 如果这个方法失败，会将节点设置为"取消"状态，并抛出异常 IllegalMonitorStateException</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">int</span> <span class="title">fullyRelease</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> savedState = getState();</span><br><span class="line">        <span class="comment">// 这里使用了当前的 state 作为 release 的参数，也就是完全释放掉锁，将 state 置为 0</span></span><br><span class="line">        <span class="keyword">if</span> (release(savedState)) &#123;</span><br><span class="line">            failed = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">return</span> savedState;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalMonitorStateException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (failed)</span><br><span class="line">            node.waitStatus = Node.CANCELLED;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>考虑一下，如果一个线程在不持有 lock 的基础上，就去调用 condition1.await() 方法，它能进入条件队列，但是在上面的这个方法中，由于它不持有锁，release(savedState) 这个方法肯定要返回 false，进入到异常分支，然后进入 finally 块设置 <code>node.waitStatus = Node.CANCELLED</code>，这个已经入队的节点之后会被后继的节点”请出去“。</p></blockquote><h3 id="3-等待进入阻塞队列"><a href="#3-等待进入阻塞队列" class="headerlink" title="3. 等待进入阻塞队列"></a>3. 等待进入阻塞队列</h3><p>释放掉锁以后，接下来是这段，这边会自旋，如果发现自己还没到阻塞队列，那么挂起，等待被转移到阻塞队列。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> interruptMode = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 如果不在阻塞队列中，注意了，是阻塞队列</span></span><br><span class="line"><span class="keyword">while</span> (!isOnSyncQueue(node)) &#123;</span><br><span class="line">    <span class="comment">// 线程挂起</span></span><br><span class="line">    LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 这里可以先不用看了，等看到它什么时候被 unpark 再说</span></span><br><span class="line">    <span class="keyword">if</span> ((interruptMode = checkInterruptWhileWaiting(node)) != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>isOnSyncQueue(Node node) 用于判断节点是否已经转移到阻塞队列了：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在节点入条件队列的时候，初始化时设置了 waitStatus = Node.CONDITION</span></span><br><span class="line"><span class="comment">// 前面我提到，signal 的时候需要将节点从条件队列移到阻塞队列，</span></span><br><span class="line"><span class="comment">// 这个方法就是判断 node 是否已经移动到阻塞队列了</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">isOnSyncQueue</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 移动过去的时候，node 的 waitStatus 会置为 0，这个之后在说 signal 方法的时候会说到</span></span><br><span class="line">    <span class="comment">// 如果 waitStatus 还是 Node.CONDITION，也就是 -2，那肯定就是还在条件队列中</span></span><br><span class="line">    <span class="comment">// 如果 node 的前驱 prev 指向还是 null，说明肯定没有在 阻塞队列(prev是阻塞队列链表中使用的)</span></span><br><span class="line">    <span class="keyword">if</span> (node.waitStatus == Node.CONDITION || node.prev == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">// 如果 node 已经有后继节点 next 的时候，那肯定是在阻塞队列了</span></span><br><span class="line">    <span class="keyword">if</span> (node.next != <span class="keyword">null</span>) </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 下面这个方法从阻塞队列的队尾开始从后往前遍历找，如果找到相等的，说明在阻塞队列，否则就是不在阻塞队列</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 可以通过判断 node.prev() != null 来推断出 node 在阻塞队列吗？答案是：不能。</span></span><br><span class="line">    <span class="comment">// 这个可以看上篇 AQS 的入队方法，首先设置的是 node.prev 指向 tail，</span></span><br><span class="line">    <span class="comment">// 然后是 CAS 操作将自己设置为新的 tail，可是这次的 CAS 是可能失败的。</span></span><br><span class="line">  </span><br><span class="line">    <span class="keyword">return</span> findNodeFromTail(node);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从阻塞队列的队尾往前遍历，如果找到，返回 true</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">findNodeFromTail</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    Node t = tail;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t == node)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        t = t.prev;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>回到前面的循环，isOnSyncQueue(node) 返回 false 的话，那么进到 <code>LockSupport.park(this);</code> 这里线程挂起。</p><h3 id="4-signal-唤醒线程，转移到阻塞队列"><a href="#4-signal-唤醒线程，转移到阻塞队列" class="headerlink" title="4. signal 唤醒线程，转移到阻塞队列"></a>4. signal 唤醒线程，转移到阻塞队列</h3><p>为了大家理解，这里我们先看唤醒操作，因为刚刚到 <code>LockSupport.park(this);</code> 把线程挂起了，等待唤醒。</p><p>唤醒操作通常由另一个线程来操作，就像生产者-消费者模式中，如果线程因为等待消费而挂起，那么当生产者生产了一个东西后，会调用 signal 唤醒正在等待的线程来消费。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 唤醒等待了最久的线程</span></span><br><span class="line"><span class="comment">// 其实就是，将这个线程对应的 node 从条件队列转移到阻塞队列</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">signal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 调用 signal 方法的线程必须持有当前的独占锁</span></span><br><span class="line">    <span class="keyword">if</span> (!isHeldExclusively())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalMonitorStateException();</span><br><span class="line">    Node first = firstWaiter;</span><br><span class="line">    <span class="keyword">if</span> (first != <span class="keyword">null</span>)</span><br><span class="line">        doSignal(first);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从条件队列队头往后遍历，找出第一个需要转移的 node</span></span><br><span class="line"><span class="comment">// 因为前面我们说过，有些线程会取消排队，但是可能还在队列中</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doSignal</span><span class="params">(Node first)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">      <span class="comment">// 将 firstWaiter 指向 first 节点后面的第一个，因为 first 节点马上要离开了</span></span><br><span class="line">        <span class="comment">// 如果将 first 移除后，后面没有节点在等待了，那么需要将 lastWaiter 置为 null</span></span><br><span class="line">        <span class="keyword">if</span> ( (firstWaiter = first.nextWaiter) == <span class="keyword">null</span>)</span><br><span class="line">            lastWaiter = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 因为 first 马上要被移到阻塞队列了，和条件队列的链接关系在这里断掉</span></span><br><span class="line">        first.nextWaiter = <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (!transferForSignal(first) &amp;&amp;</span><br><span class="line">             (first = firstWaiter) != <span class="keyword">null</span>);</span><br><span class="line">      <span class="comment">// 这里 while 循环，如果 first 转移不成功，那么选择 first 后面的第一个节点进行转移，依此类推</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将节点从条件队列转移到阻塞队列</span></span><br><span class="line"><span class="comment">// true 代表成功转移</span></span><br><span class="line"><span class="comment">// false 代表在 signal 之前，节点已经取消了</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">transferForSignal</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// CAS 如果失败，说明此 node 的 waitStatus 已不是 Node.CONDITION，说明节点已经取消，</span></span><br><span class="line">    <span class="comment">// 既然已经取消，也就不需要转移了，方法返回，转移后面一个节点</span></span><br><span class="line">    <span class="comment">// 否则，将 waitStatus 置为 0</span></span><br><span class="line">    <span class="keyword">if</span> (!compareAndSetWaitStatus(node, Node.CONDITION, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// enq(node): 自旋进入阻塞队列的队尾</span></span><br><span class="line">    <span class="comment">// 注意，这里的返回值 p 是 node 在阻塞队列的前驱节点</span></span><br><span class="line">    Node p = enq(node);</span><br><span class="line">    <span class="keyword">int</span> ws = p.waitStatus;</span><br><span class="line">    <span class="comment">// ws &gt; 0 说明 node 在阻塞队列中的前驱节点取消了等待锁，直接唤醒 node 对应的线程。唤醒之后会怎么样，后面再解释</span></span><br><span class="line">    <span class="comment">// 如果 ws &lt;= 0, 那么 compareAndSetWaitStatus 将会被调用，上篇介绍的时候说过，节点入队后，需要把前驱节点的状态设为 Node.SIGNAL(-1)</span></span><br><span class="line">    <span class="keyword">if</span> (ws &gt; <span class="number">0</span> || !compareAndSetWaitStatus(p, ws, Node.SIGNAL))</span><br><span class="line">        <span class="comment">// 如果前驱节点取消或者 CAS 失败，会进到这里唤醒线程，之后的操作看下一节</span></span><br><span class="line">        LockSupport.unpark(node.thread);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>正常情况下，<code>ws &gt; 0 || !compareAndSetWaitStatus(p, ws, Node.SIGNAL)</code> 这句中，ws &lt;= 0，而且 <code>compareAndSetWaitStatus(p, ws, Node.SIGNAL)</code> 会返回 true，所以一般也不会进去 if 语句块中唤醒 node 对应的线程。然后这个方法返回 true，也就意味着 signal 方法结束了，节点进入了阻塞队列。</p><p>假设发生了阻塞队列中的前驱节点取消等待，或者 CAS 失败，只要唤醒线程，让其进到下一步即可。</p><h3 id="5-唤醒后检查中断状态"><a href="#5-唤醒后检查中断状态" class="headerlink" title="5. 唤醒后检查中断状态"></a>5. 唤醒后检查中断状态</h3><p>上一步 signal 之后，我们的线程由条件队列转移到了阻塞队列，之后就准备获取锁了。只要重新获取到锁了以后，继续往下执行。</p><p>等线程从挂起中恢复过来，继续往下看</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> interruptMode = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (!isOnSyncQueue(node)) &#123;</span><br><span class="line">    <span class="comment">// 线程挂起</span></span><br><span class="line">    LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ((interruptMode = checkInterruptWhileWaiting(node)) != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>先解释下 interruptMode。interruptMode 可以取值为 REINTERRUPT（1），THROW_IE（-1），0</p><p>1、 REINTERRUPT： 代表 await 返回的时候，需要重新设置中断状态<br>2、 THROW_IE： 代表 await 返回的时候，需要抛出 InterruptedException 异常<br>3、 0 ：说明在 await 期间，没有发生中断</p><p>有以下三种情况会让 LockSupport.park(this); 这句返回继续往下执行：</p><p>1、 常规路径。signal -&gt; 转移节点到阻塞队列 -&gt; 获取了锁（unpark）<br>2、 线程中断。在 park 的时候，另外一个线程对这个线程进行了中断<br>3、 signal 的时候我们说过，转移以后的前驱节点取消了，或者对前驱节点的CAS操作失败了<br>4、 假唤醒。这个也是存在的，和 Object.wait() 类似，都有这个问题</p><p>线程唤醒后第一步是调用 checkInterruptWhileWaiting(node) 这个方法，此方法用于判断是否在线程挂起期间发生了中断，如果发生了中断，是 signal 调用之前中断的，还是 signal 之后发生的中断。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 如果在 signal 之前已经中断，返回 THROW_IE</span></span><br><span class="line"><span class="comment">// 2. 如果是 signal 之后中断，返回 REINTERRUPT</span></span><br><span class="line"><span class="comment">// 3. 没有发生中断，返回 0</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">checkInterruptWhileWaiting</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Thread.interrupted() ?</span><br><span class="line">        (transferAfterCancelledWait(node) ? THROW_IE : REINTERRUPT) :</span><br><span class="line">        <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>Thread.interrupted()：如果当前线程已经处于中断状态，那么该方法返回 true，同时将中断状态重置为 false，所以，才有后续的 <code>重新中断（REINTERRUPT）</code> 的使用。</p></blockquote><p>看看怎么判断是 signal 之前还是之后发生的中断：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只有线程处于中断状态，才会调用此方法</span></span><br><span class="line"><span class="comment">// 如果需要的话，将这个已经取消等待的节点转移到阻塞队列</span></span><br><span class="line"><span class="comment">// 返回 true：如果此线程在 signal 之前被取消，</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">transferAfterCancelledWait</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 用 CAS 将节点状态设置为 0 </span></span><br><span class="line">    <span class="comment">// 如果这步 CAS 成功，说明是 signal 方法之前发生的中断，因为如果 signal 先发生的话，signal 中会将 waitStatus 设置为 0</span></span><br><span class="line">    <span class="keyword">if</span> (compareAndSetWaitStatus(node, Node.CONDITION, <span class="number">0</span>)) &#123;</span><br><span class="line">        <span class="comment">// 将节点放入阻塞队列</span></span><br><span class="line">        <span class="comment">// 这里我们看到，即使中断了，依然会转移到阻塞队列</span></span><br><span class="line">        enq(node);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 到这里是因为 CAS 失败，肯定是因为 signal 方法已经将 waitStatus 设置为了 0</span></span><br><span class="line">    <span class="comment">// signal 方法会将节点转移到阻塞队列，但是可能还没完成，这边自旋等待其完成</span></span><br><span class="line">    <span class="comment">// 当然，这种事情还是比较少的吧：signal 调用之后，没完成转移之前，发生了中断</span></span><br><span class="line">    <span class="keyword">while</span> (!isOnSyncQueue(node))</span><br><span class="line">        Thread.yield();</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>这里再说一遍，即使发生了中断，节点依然会转移到阻塞队列。</p></blockquote><p>到这里，大家应该都知道这个 while 循环怎么退出了吧。要么中断，要么转移成功。</p><p>这里描绘了一个场景，本来有个线程，它是排在条件队列的后面的，但是因为它被中断了，那么它会被唤醒，然后它发现自己不是被 signal 的那个，但是它会自己主动去进入到阻塞队列。</p><h3 id="6-获取独占锁"><a href="#6-获取独占锁" class="headerlink" title="6. 获取独占锁"></a>6. 获取独占锁</h3><p>while 循环出来以后，下面是这段代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (acquireQueued(node, savedState) &amp;&amp; interruptMode != THROW_IE)</span><br><span class="line">    interruptMode = REINTERRUPT;</span><br></pre></td></tr></table></figure></div><p>由于 while 出来后，我们确定节点已经进入了阻塞队列，准备获取锁。</p><p>这里的 acquireQueued(node, savedState) 的第一个参数 node 之前已经经过 enq(node) 进入了队列，参数 savedState 是之前释放锁前的 state，这个方法返回的时候，代表当前线程获取了锁，而且 state == savedState了。</p><p>注意，前面我们说过，不管有没有发生中断，都会进入到阻塞队列，而 acquireQueued(node, savedState) 的返回值就是代表线程是否被中断。如果返回 true，说明被中断了，而且 interruptMode != THROW_IE，说明在 signal 之前就发生中断了，这里将 interruptMode 设置为 REINTERRUPT，用于待会重新中断。</p><p>继续往下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (node.nextWaiter != <span class="keyword">null</span>) <span class="comment">// clean up if cancelled</span></span><br><span class="line">    unlinkCancelledWaiters();</span><br><span class="line"><span class="keyword">if</span> (interruptMode != <span class="number">0</span>)</span><br><span class="line">    reportInterruptAfterWait(interruptMode);</span><br></pre></td></tr></table></figure></div><p>本着一丝不苟的精神，这边说说 <code>node.nextWaiter != null</code> 怎么满足。我前面也说了 signal 的时候会将节点转移到阻塞队列，有一步是 node.nextWaiter = null，将断开节点和条件队列的联系。</p><p>可是，<code>在判断发生中断的情况下，是 signal 之前还是之后发生的？</code> 这部分的时候，我也介绍了，如果 signal 之前就中断了，也需要将节点进行转移到阻塞队列，这部分转移的时候，是没有设置 node.nextWaiter = null 的。</p><p>之前我们说过，如果有节点取消，也会调用 unlinkCancelledWaiters 这个方法，就是这里了。</p><h3 id="7-处理中断状态"><a href="#7-处理中断状态" class="headerlink" title="7. 处理中断状态"></a>7. 处理中断状态</h3><p>到这里，我们终于可以好好说下这个 interruptMode 干嘛用了。</p><p>1、 0：什么都不做，没有被中断过；<br>2、 THROW_IE：await 方法抛出 InterruptedException 异常，因为它代表在 await() 期间发生了中断；<br>3、 REINTERRUPT：重新中断当前线程，因为它代表 await() 期间没有被中断，而是 signal() 以后发生的中断</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">reportInterruptAfterWait</span><span class="params">(<span class="keyword">int</span> interruptMode)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (interruptMode == THROW_IE)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (interruptMode == REINTERRUPT)</span><br><span class="line">        selfInterrupt();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>这个中断状态这部分内容，大家应该都理解了吧，不理解的话，多看几遍就是了。</p></blockquote><h3 id="8-带超时机制的-await"><a href="#8-带超时机制的-await" class="headerlink" title="8. 带超时机制的 await"></a>8. 带超时机制的 await</h3><p>经过前面的 7 步，整个 ConditionObject 类基本上都分析完了，接下来简单分析下带超时机制的 await 方法。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">long</span> <span class="title">awaitNanos</span><span class="params">(<span class="keyword">long</span> nanosTimeout)</span> </span></span><br><span class="line"><span class="function">  <span class="keyword">throws</span> InterruptedException</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">awaitUntil</span><span class="params">(Date deadline)</span></span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> InterruptedException</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">await</span><span class="params">(<span class="keyword">long</span> time, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">                <span class="keyword">throws</span> InterruptedException</span></span><br></pre></td></tr></table></figure></div><p>这三个方法都差不多，我们就挑一个出来看看吧：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">await</span><span class="params">(<span class="keyword">long</span> time, TimeUnit unit)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="comment">// 等待这么多纳秒</span></span><br><span class="line">    <span class="keyword">long</span> nanosTimeout = unit.toNanos(time);</span><br><span class="line">    <span class="keyword">if</span> (Thread.interrupted())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">    Node node = addConditionWaiter();</span><br><span class="line">    <span class="keyword">int</span> savedState = fullyRelease(node);</span><br><span class="line">    <span class="comment">// 当前时间 + 等待时长 = 过期时间</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">long</span> deadline = System.nanoTime() + nanosTimeout;</span><br><span class="line">    <span class="comment">// 用于返回 await 是否超时</span></span><br><span class="line">    <span class="keyword">boolean</span> timedout = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">int</span> interruptMode = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (!isOnSyncQueue(node)) &#123;</span><br><span class="line">        <span class="comment">// 时间到啦</span></span><br><span class="line">        <span class="keyword">if</span> (nanosTimeout &lt;= <span class="number">0L</span>) &#123;</span><br><span class="line">            <span class="comment">// 这里因为要 break 取消等待了。取消等待的话一定要调用 transferAfterCancelledWait(node) 这个方法</span></span><br><span class="line">            <span class="comment">// 如果这个方法返回 true，在这个方法内，将节点转移到阻塞队列成功</span></span><br><span class="line">            <span class="comment">// 返回 false 的话，说明 signal 已经发生，signal 方法将节点转移了。也就是说没有超时嘛</span></span><br><span class="line">            timedout = transferAfterCancelledWait(node);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// spinForTimeoutThreshold 的值是 1000 纳秒，也就是 1 毫秒</span></span><br><span class="line">        <span class="comment">// 也就是说，如果不到 1 毫秒了，那就不要选择 parkNanos 了，自旋的性能反而更好</span></span><br><span class="line">        <span class="keyword">if</span> (nanosTimeout &gt;= spinForTimeoutThreshold)</span><br><span class="line">            LockSupport.parkNanos(<span class="keyword">this</span>, nanosTimeout);</span><br><span class="line">        <span class="keyword">if</span> ((interruptMode = checkInterruptWhileWaiting(node)) != <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="comment">// 得到剩余时间</span></span><br><span class="line">        nanosTimeout = deadline - System.nanoTime();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (acquireQueued(node, savedState) &amp;&amp; interruptMode != THROW_IE)</span><br><span class="line">        interruptMode = REINTERRUPT;</span><br><span class="line">    <span class="keyword">if</span> (node.nextWaiter != <span class="keyword">null</span>)</span><br><span class="line">        unlinkCancelledWaiters();</span><br><span class="line">    <span class="keyword">if</span> (interruptMode != <span class="number">0</span>)</span><br><span class="line">        reportInterruptAfterWait(interruptMode);</span><br><span class="line">    <span class="keyword">return</span> !timedout;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>超时的思路还是很简单的，不带超时参数的 await 是 park，然后等待别人唤醒。而现在就是调用 parkNanos 方法来休眠指定的时间，醒来后判断是否 signal 调用了，调用了就是没有超时，否则就是超时了。超时的话，自己来进行转移到阻塞队列，然后抢锁。</p><h3 id="9-不抛出-InterruptedException-的-await"><a href="#9-不抛出-InterruptedException-的-await" class="headerlink" title="9. 不抛出 InterruptedException 的 await"></a>9. 不抛出 InterruptedException 的 await</h3><p>关于 Condition 最后一小节了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">awaitUninterruptibly</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Node node = addConditionWaiter();</span><br><span class="line">    <span class="keyword">int</span> savedState = fullyRelease(node);</span><br><span class="line">    <span class="keyword">boolean</span> interrupted = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (!isOnSyncQueue(node)) &#123;</span><br><span class="line">        LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (Thread.interrupted())</span><br><span class="line">            interrupted = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (acquireQueued(node, savedState) || interrupted)</span><br><span class="line">        selfInterrupt();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>很简单，贴一下代码大家就都懂了，我就不废话了。</p><h2 id="AbstractQueuedSynchronizer-独占锁的取消排队"><a href="#AbstractQueuedSynchronizer-独占锁的取消排队" class="headerlink" title="AbstractQueuedSynchronizer 独占锁的取消排队"></a>AbstractQueuedSynchronizer 独占锁的取消排队</h2><p>这篇文章说的是 AbstractQueuedSynchronizer，只不过好像 Condition 说太多了，赶紧把思路拉回来。</p><p>接下来，我想说说怎么取消对锁的竞争？</p><p>上篇文章提到过，最重要的方法是这个，我们要在这里面找答案：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">acquireQueued</span><span class="params">(<span class="keyword">final</span> Node node, <span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">boolean</span> interrupted = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">final</span> Node p = node.predecessor();</span><br><span class="line">            <span class="keyword">if</span> (p == head &amp;&amp; tryAcquire(arg)) &#123;</span><br><span class="line">                setHead(node);</span><br><span class="line">                p.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                failed = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">return</span> interrupted;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                parkAndCheckInterrupt())</span><br><span class="line">                interrupted = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (failed)</span><br><span class="line">            cancelAcquire(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>首先，到这个方法的时候，节点一定是入队成功的。</p><p>我把 parkAndCheckInterrupt() 代码贴过来：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">parkAndCheckInterrupt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">return</span> Thread.interrupted();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这两段代码联系起来看，是不是就清楚了。</p><p>如果我们要取消一个线程的排队，我们需要在另外一个线程中对其进行中断。比如某线程调用 lock() 老久不返回，我想中断它。一旦对其进行中断，此线程会从 <code>LockSupport.park(this);</code> 中唤醒，然后 <code>Thread.interrupted();</code> 返回 true。</p><p>我们发现一个问题，即使是中断唤醒了这个线程，也就只是设置了 <code>interrupted = true</code> 然后继续下一次循环。而且，由于 <code>Thread.interrupted();</code> 会清除中断状态，第二次进 parkAndCheckInterrupt 的时候，返回会是 false。</p><p>所以，我们要看到，在这个方法中，interrupted 只是用来记录是否发生了中断，然后用于方法返回值，其他没有做任何相关事情。</p><p>所以，我们看外层方法怎么处理 acquireQueued 返回 false 的情况。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!tryAcquire(arg) &amp;&amp;</span><br><span class="line">        acquireQueued(addWaiter(Node.EXCLUSIVE), arg))</span><br><span class="line">        selfInterrupt();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selfInterrupt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Thread.currentThread().interrupt();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>所以说，lock() 方法处理中断的方法就是，你中断归中断，我抢锁还是照样抢锁，几乎没关系，只是我抢到锁了以后，设置线程的中断状态而已，也不抛出任何异常出来。调用者获取锁后，可以去检查是否发生过中断，也可以不理会。</p><hr><p>来条分割线。有没有被骗的感觉，我说了一大堆，可是和取消没有任何关系啊。</p><p>我们来看 ReentrantLock 的另一个 lock 方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lockInterruptibly</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    sync.acquireInterruptibly(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>方法上多了个 <code>throws InterruptedException</code> ，经过前面那么多知识的铺垫，这里我就不再啰里啰嗦了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquireInterruptibly</span><span class="params">(<span class="keyword">int</span> arg)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Thread.interrupted())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">    <span class="keyword">if</span> (!tryAcquire(arg))</span><br><span class="line">        doAcquireInterruptibly(arg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>继续往里：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doAcquireInterruptibly</span><span class="params">(<span class="keyword">int</span> arg)</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Node node = addWaiter(Node.EXCLUSIVE);</span><br><span class="line">    <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            <span class="keyword">final</span> Node p = node.predecessor();</span><br><span class="line">            <span class="keyword">if</span> (p == head &amp;&amp; tryAcquire(arg)) &#123;</span><br><span class="line">                setHead(node);</span><br><span class="line">                p.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                failed = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                parkAndCheckInterrupt())</span><br><span class="line">                <span class="comment">// 就是这里了，一旦异常，马上结束这个方法，抛出异常。</span></span><br><span class="line">                <span class="comment">// 这里不再只是标记这个方法的返回值代表中断状态</span></span><br><span class="line">                <span class="comment">// 而是直接抛出异常，而且外层也不捕获，一直往外抛到 lockInterruptibly</span></span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 如果通过 InterruptedException 异常出去，那么 failed 就是 true 了</span></span><br><span class="line">        <span class="keyword">if</span> (failed)</span><br><span class="line">            cancelAcquire(node);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>既然到这里了，顺便说说 cancelAcquire 这个方法吧：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cancelAcquire</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Ignore if node doesn't exist</span></span><br><span class="line">    <span class="keyword">if</span> (node == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    node.thread = <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// Skip cancelled predecessors</span></span><br><span class="line">    <span class="comment">// 找一个合适的前驱。其实就是将它前面的队列中已经取消的节点都”请出去“</span></span><br><span class="line">    Node pred = node.prev;</span><br><span class="line">    <span class="keyword">while</span> (pred.waitStatus &gt; <span class="number">0</span>)</span><br><span class="line">        node.prev = pred = pred.prev;</span><br><span class="line">    <span class="comment">// predNext is the apparent node to unsplice. CASes below will</span></span><br><span class="line">    <span class="comment">// fail if not, in which case, we lost race vs another cancel</span></span><br><span class="line">    <span class="comment">// or signal, so no further action is necessary.</span></span><br><span class="line">    Node predNext = pred.next;</span><br><span class="line">    <span class="comment">// Can use unconditional write instead of CAS here.</span></span><br><span class="line">    <span class="comment">// After this atomic step, other Nodes can skip past us.</span></span><br><span class="line">    <span class="comment">// Before, we are free of interference from other threads.</span></span><br><span class="line">    node.waitStatus = Node.CANCELLED;</span><br><span class="line">    <span class="comment">// If we are the tail, remove ourselves.</span></span><br><span class="line">    <span class="keyword">if</span> (node == tail &amp;&amp; compareAndSetTail(node, pred)) &#123;</span><br><span class="line">        compareAndSetNext(pred, predNext, <span class="keyword">null</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// If successor needs signal, try to set pred's next-link</span></span><br><span class="line">        <span class="comment">// so it will get one. Otherwise wake it up to propagate.</span></span><br><span class="line">        <span class="keyword">int</span> ws;</span><br><span class="line">        <span class="keyword">if</span> (pred != head &amp;&amp;</span><br><span class="line">            ((ws = pred.waitStatus) == Node.SIGNAL ||</span><br><span class="line">             (ws &lt;= <span class="number">0</span> &amp;&amp; compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) &amp;&amp;</span><br><span class="line">            pred.thread != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Node next = node.next;</span><br><span class="line">            <span class="keyword">if</span> (next != <span class="keyword">null</span> &amp;&amp; next.waitStatus &lt;= <span class="number">0</span>)</span><br><span class="line">                compareAndSetNext(pred, predNext, next);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            unparkSuccessor(node);</span><br><span class="line">        &#125;</span><br><span class="line">        node.next = node; <span class="comment">// help GC</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>其实这个方法没什么好说的，一行行看下去就是了，节点取消，只要把 waitStatus 设置为 Node.CANCELLED，会有非常多的情况被从阻塞队列中请出去，主动或被动。</p><h2 id="再说-java-线程中断和-InterruptedException-异常"><a href="#再说-java-线程中断和-InterruptedException-异常" class="headerlink" title="再说 java 线程中断和 InterruptedException 异常"></a>再说 java 线程中断和 InterruptedException 异常</h2><p>在之前的文章中，我们接触了大量的中断，这边算是个总结吧。如果你完全熟悉中断了，没有必要再看这节，本节为新手而写。</p><h3 id="线程中断"><a href="#线程中断" class="headerlink" title="线程中断"></a>线程中断</h3><p>首先，我们要明白，中断不是类似 linux 里面的命令 kill -9 pid，不是说我们中断某个线程，这个线程就停止运行了。中断代表线程状态，每个线程都关联了一个中断状态，是一个 true 或 false 的 boolean 值，初始值为 false。</p><blockquote><p>Java 中的中断和操作系统的中断还不一样，这里就按照<strong>状态</strong>来理解吧，不要和操作系统的中断联系在一起</p></blockquote><p>关于中断状态，我们需要重点关注 Thread 类中的以下几个方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Thread 类中的实例方法，持有线程实例引用即可检测线程中断状态</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isInterrupted</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Thread 中的静态方法，检测调用这个方法的线程是否已经中断</span></span><br><span class="line"><span class="comment">// 注意：这个方法返回中断状态的同时，会将此线程的中断状态重置为 false</span></span><br><span class="line"><span class="comment">// 所以，如果我们连续调用两次这个方法的话，第二次的返回值肯定就是 false 了</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">interrupted</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Thread 类中的实例方法，用于设置一个线程的中断状态为 true</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">interrupt</span><span class="params">()</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure></div><p>我们说中断一个线程，其实就是设置了线程的 interrupted status 为 true，至于说被中断的线程怎么处理这个状态，那是那个线程自己的事。如以下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (!Thread.interrupted()) &#123;</span><br><span class="line">   doWork();</span><br><span class="line">   System.out.println(<span class="string">"我做完一件事了，准备做下一件，如果没有其他线程中断我的话"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><blockquote><p>这种代码就是会响应中断的，它会在干活的时候先判断下中断状态，不过，除了 JDK 源码外，其他用中断的场景还是比较少的，毕竟 JDK 源码非常讲究。</p></blockquote><p>当然，中断除了是线程状态外，还有其他含义，否则也不需要专门搞一个这个概念出来了。</p><p>如果线程处于以下三种情况，那么当线程被中断的时候，能自动感知到：</p><p>1、 来自 Object 类的 wait()、wait(long)、wait(long, int)，</p><p>来自 Thread 类的 join()、join(long)、join(long, int)、sleep(long)、sleep(long, int)</p><blockquote><p>这几个方法的相同之处是，方法上都有: throws InterruptedException</p><p>如果线程阻塞在这些方法上（我们知道，这些方法会让当前线程阻塞），这个时候如果其他线程对这个线程进行了中断，那么这个线程会从这些方法中立即返回，抛出 InterruptedException 异常，同时重置中断状态为 false。</p></blockquote><p>2、 实现了 InterruptibleChannel 接口的类中的一些 I/O 阻塞操作，如 DatagramChannel 中的 connect 方法和 receive 方法等</p><blockquote><p>如果线程阻塞在这里，中断线程会导致这些方法抛出 ClosedByInterruptException 并重置中断状态。</p></blockquote><p>3、 Selector 中的 select 方法，参考下我写的 NIO 的文章</p><blockquote><p>一旦中断，方法立即返回</p></blockquote><p>对于以上 3 种情况是最特殊的，因为他们能自动感知到中断（这里说自动，当然也是基于底层实现），<strong>并且在做出相应的操作后都会重置中断状态为 false</strong>。</p><p>那是不是只有以上 3 种方法能自动感知到中断呢？不是的，如果线程阻塞在 LockSupport.park(Object obj) 方法，也叫挂起，这个时候的中断也会导致线程唤醒，但是唤醒后不会重置中断状态，所以唤醒后去检测中断状态将是 true。</p><h3 id="InterruptedException-概述"><a href="#InterruptedException-概述" class="headerlink" title="InterruptedException 概述"></a>InterruptedException 概述</h3><p>它是一个特殊的异常，不是说 JVM 对其有特殊的处理，而是它的使用场景比较特殊。通常，我们可以看到，像 Object 中的 wait() 方法，ReentrantLock 中的 lockInterruptibly() 方法，Thread 中的 sleep() 方法等等，这些方法都带有 <code>throws InterruptedException</code>，我们通常称这些方法为阻塞方法（blocking method）。</p><p>阻塞方法一个很明显的特征是，它们需要花费比较长的时间（不是绝对的，只是说明时间不可控），还有它们的方法结束返回往往依赖于外部条件，如 wait 方法依赖于其他线程的 notify，lock 方法依赖于其他线程的 unlock等等。</p><p>当我们看到方法上带有 <code>throws InterruptedException</code> 时，我们就要知道，这个方法应该是阻塞方法，我们如果希望它能早点返回的话，我们往往可以通过中断来实现。</p><p>除了几个特殊类（如 Object，Thread等）外，感知中断并提前返回是通过轮询中断状态来实现的。我们自己需要写可中断的方法的时候，就是通过在合适的时机（通常在循环的开始处）去判断线程的中断状态，然后做相应的操作（通常是方法直接返回或者抛出异常）。当然，我们也要看到，如果我们一次循环花的时间比较长的话，那么就需要比较长的时间才能<strong>感知</strong>到线程中断了。</p><h3 id="处理中断"><a href="#处理中断" class="headerlink" title="处理中断"></a>处理中断</h3><p>一旦中断发生，我们接收到了这个信息，然后怎么去处理中断呢？本小节将简单分析这个问题。</p><p>我们经常会这么写代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    Thread.sleep(<span class="number">10000</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">    <span class="comment">// ignore</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// go on</span></span><br></pre></td></tr></table></figure></div><p>当 sleep 结束继续往下执行的时候，我们往往都不知道这块代码是真的 sleep 了 10 秒，还是只休眠了 1 秒就被中断了。这个代码的问题在于，我们将这个异常信息吞掉了。（对于 sleep 方法，我相信大部分情况下，我们都不在意是否是中断了，这里是举例）</p><p>AQS 的做法很值得我们借鉴，我们知道 ReentrantLock 有两种 lock 方法：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.lock();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lockInterruptibly</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    sync.acquireInterruptibly(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>前面我们提到过，lock() 方法不响应中断。如果 thread1 调用了 lock() 方法，过了很久还没抢到锁，这个时候 thread2 对其进行了中断，thread1 是不响应这个请求的，它会继续抢锁，当然它不会把“被中断”这个信息扔掉。我们可以看以下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!tryAcquire(arg) &amp;&amp;</span><br><span class="line">        acquireQueued(addWaiter(Node.EXCLUSIVE), arg))</span><br><span class="line">        <span class="comment">// 我们看到，这里也没做任何特殊处理，就是记录下来中断状态。</span></span><br><span class="line">        <span class="comment">// 这样，如果外层方法需要去检测的时候，至少我们没有把这个信息丢了</span></span><br><span class="line">        selfInterrupt();<span class="comment">// Thread.currentThread().interrupt();</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>而对于 lockInterruptibly() 方法，因为其方法上面有 <code>throws InterruptedException</code> ，这个信号告诉我们，如果我们要取消线程抢锁，直接中断这个线程即可，它会立即返回，抛出 InterruptedException 异常。</p><p>在并发包中，有非常多的这种处理中断的例子，提供两个方法，分别为响应中断和不响应中断，对于不响应中断的方法，记录中断而不是丢失这个信息。如 Condition 中的两个方法就是这样的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">awaitUninterruptibly</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></div><blockquote><p>通常，如果方法会抛出 InterruptedException 异常，往往方法体的第一句就是：</p></blockquote><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">await</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Thread.interrupted())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InterruptedException();</span><br><span class="line"> ...... </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>熟练使用中断，对于我们写出优雅的代码是有帮助的，也有助于我们分析别人的源码。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章的信息量真的很大，如果你花了时间，还是没有看懂，那是我的错了。</p><p>欢迎大家向我提问，我不一定能每次都及时出现，我出现也不一定能解决大家的问题，欢迎探讨。</p><div class="note success"><p>原文链接：<a href="https://javadoop.com/post/AbstractQueuedSynchronizer-2" target="_blank" rel="noopener">一行一行源码分析清楚 AbstractQueuedSynchronizer (二)</a></p></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> AbstractQueuedSynchronizer </tag>
            
            <tag> ReentrantLock </tag>
            
            <tag> 并发 </tag>
            
            <tag> ConditionObject </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一行一行源码分析清楚 AbstractQueuedSynchronizer</title>
      <link href="/posts/331601127.html"/>
      <url>/posts/331601127.html</url>
      
        <content type="html"><![CDATA[<p>在分析 Java 并发包 java.util.concurrent 源码的时候，少不了需要了解 AbstractQueuedSynchronizer（以下简写AQS）这个抽象类，因为它是 Java 并发包的基础工具类，是实现 ReentrantLock、CountDownLatch、Semaphore、FutureTask 等类的基础。Google 一下 AbstractQueuedSynchronizer，我们可以找到很多关于 AQS 的介绍，但是很多都没有介绍清楚，因为大部分文章没有把其中的一些关键的细节说清楚。本文将从 ReentrantLock 的公平锁源码出发，分析下 AbstractQueuedSynchronizer 这个类是怎么工作的，希望能给大家提供一些简单的帮助。</p><a id="more"></a><p>申明以下几点：</p><p>1、本文有点长，但还是挺简单，主要面向读者对象为并发编程的初学者，或者想要阅读 Java 并发包源码的开发者。对于新手来说，可能需要花好几个小时才能完全看懂，但是这时间肯定是值得的。<br>2、源码环境 JDK1.7（1.8没啥变化），看到不懂或有疑惑的部分，最好能自己打开源码看看。Doug Lea 大神的代码写得真心不错。<br>3、本文不分析共享模式，这样可以给读者减少很多负担，<a href="https://www.liaofuzhan.com/posts/1892723867.html">第三篇文章</a>对共享模式进行了分析。而且也不分析 condition 部分，所以应该说很容易就可以看懂了。<br>4、本文大量使用我们平时用得最多的 ReentrantLock 的概念，本质上来说是不正确的，读者应该清楚，AQS 不仅仅用来实现可重入锁，只是希望读者可以用锁来联想 AQS 的使用场景，降低阅读压力。<br>5、ReentrantLock 的公平锁和非公平锁只有一点点区别，<a href="https://www.liaofuzhan.com/posts/237210800.html">第二篇文章</a>做了介绍。<br>6、评论区有读者反馈本文直接用代码说不友好，应该多配点流程图，这篇文章确实有这个问题。但是作为过来人，我想告诉大家，对于 AQS 来说，形式真的不重要，重要的是把细节说清楚。</p><h2 id="AQS-结构"><a href="#AQS-结构" class="headerlink" title="AQS 结构"></a>AQS 结构</h2><p>先来看看 AQS 有哪些属性，搞清楚这些基本就知道 AQS 是什么套路了，毕竟可以猜嘛！</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 头结点，你直接把它当做 当前持有锁的线程 可能是最好理解的</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">volatile</span> Node head;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 阻塞的尾节点，每个新的节点进来，都插入到最后，也就形成了一个链表</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> <span class="keyword">volatile</span> Node tail;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个是最重要的，代表当前锁的状态，0代表没有被占用，大于 0 代表有线程持有当前锁</span></span><br><span class="line"><span class="comment">// 这个值可以大于 1，是因为锁可以重入，每次重入都加上 1</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">int</span> state;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 代表当前持有独占锁的线程，举个最重要的使用例子，因为锁可以重入</span></span><br><span class="line"><span class="comment">// reentrantLock.lock()可以嵌套调用多次，所以每次用这个来判断当前线程是否已经拥有了锁</span></span><br><span class="line"><span class="comment">// if (currentThread == getExclusiveOwnerThread()) &#123;state++&#125;</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> Thread exclusiveOwnerThread; <span class="comment">//继承自AbstractOwnableSynchronizer</span></span><br></pre></td></tr></table></figure></div><p>怎么样，看样子应该是很简单的吧，毕竟也就四个属性啊。AbstractQueuedSynchronizer 的等待队列示意如下所示，注意了，之后分析过程中所说的 queue，也就是阻塞队列 <strong>不包含 head，不包含 head，不包含 head</strong>。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/42/1.jpg" alt="aqs-0"></p><p>等待队列中每个线程被包装成一个 Node 实例，数据结构是链表，一起看看源码吧：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 标识节点当前在共享模式下</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Node SHARED = <span class="keyword">new</span> Node();</span><br><span class="line">    <span class="comment">// 标识节点当前在独占模式下</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Node EXCLUSIVE = <span class="keyword">null</span>;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// ======== 下面的几个int常量是给waitStatus用的 ===========</span></span><br><span class="line">    <span class="comment">/** waitStatus value to indicate thread has cancelled */</span></span><br><span class="line">    <span class="comment">// 代码此线程取消了争抢这个锁</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CANCELLED =  <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/** waitStatus value to indicate successor's thread needs unparking */</span></span><br><span class="line">    <span class="comment">// 官方的描述是，其表示当前node的后继节点对应的线程需要被唤醒</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SIGNAL    = -<span class="number">1</span>;</span><br><span class="line">    <span class="comment">/** waitStatus value to indicate thread is waiting on condition */</span></span><br><span class="line">    <span class="comment">// 本文不分析condition，所以略过吧，下一篇文章会介绍这个</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CONDITION = -<span class="number">2</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * waitStatus value to indicate the next acquireShared should</span></span><br><span class="line"><span class="comment">     * unconditionally propagate</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 同样的不分析，略过吧</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PROPAGATE = -<span class="number">3</span>;</span><br><span class="line">    <span class="comment">// =====================================================</span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 取值为上面的1、-1、-2、-3，或者0(以后会讲到)</span></span><br><span class="line">    <span class="comment">// 这么理解，暂时只需要知道如果这个值 大于0 代表此线程取消了等待，</span></span><br><span class="line">    <span class="comment">//    ps: 半天抢不到锁，不抢了，ReentrantLock是可以指定timeouot的。。。</span></span><br><span class="line">    <span class="keyword">volatile</span> <span class="keyword">int</span> waitStatus;</span><br><span class="line">    <span class="comment">// 前驱节点的引用</span></span><br><span class="line">    <span class="keyword">volatile</span> Node prev;</span><br><span class="line">    <span class="comment">// 后继节点的引用</span></span><br><span class="line">    <span class="keyword">volatile</span> Node next;</span><br><span class="line">    <span class="comment">// 这个就是线程本尊</span></span><br><span class="line">    <span class="keyword">volatile</span> Thread thread;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>Node 的数据结构其实也挺简单的，就是 thread + waitStatus + pre + next 四个属性而已，大家先要有这个概念在心里。</p><p>上面的是基础知识，后面会多次用到，心里要时刻记着它们，心里想着这个结构图就可以了。下面，我们开始说 ReentrantLock 的公平锁。再次强调，我说的阻塞队列不包含 head 节点。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/42/2.jpg" alt="aqs-0"></p><p>首先，我们先看下 ReentrantLock 的使用方式。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 我用个web开发中的service概念吧</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderService</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 使用static，这样每个线程拿到的是同一把锁，当然，spring mvc中service默认就是单例，别纠结这个</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ReentrantLock reentrantLock = <span class="keyword">new</span> ReentrantLock(<span class="keyword">true</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 比如我们同一时间，只允许一个线程创建订单</span></span><br><span class="line">        reentrantLock.lock();</span><br><span class="line">        <span class="comment">// 通常，lock 之后紧跟着 try 语句</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 这块代码同一时间只能有一个线程进来(获取到锁的线程)，</span></span><br><span class="line">            <span class="comment">// 其他的线程在lock()方法上阻塞，等待获取到锁，再进来</span></span><br><span class="line">            <span class="comment">// 执行代码...</span></span><br><span class="line">            <span class="comment">// 执行代码...</span></span><br><span class="line">            <span class="comment">// 执行代码...</span></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 释放锁</span></span><br><span class="line">            reentrantLock.unlock();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>ReentrantLock 在内部用了内部类 Sync 来管理锁，所以真正的获取锁和释放锁是由 Sync 的实现类来控制的。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Sync</span> <span class="keyword">extends</span> <span class="title">AbstractQueuedSynchronizer</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>Sync 有两个实现，分别为 NonfairSync（非公平锁）和 FairSync（公平锁），我们看 FairSync 部分。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ReentrantLock</span><span class="params">(<span class="keyword">boolean</span> fair)</span> </span>&#123;</span><br><span class="line">    sync = fair ? <span class="keyword">new</span> FairSync() : <span class="keyword">new</span> NonfairSync();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h2 id="线程抢锁"><a href="#线程抢锁" class="headerlink" title="线程抢锁"></a>线程抢锁</h2><p>很多人肯定开始嫌弃上面废话太多了，下面跟着代码走，我就不废话了。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">FairSync</span> <span class="keyword">extends</span> <span class="title">Sync</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = -<span class="number">3000897897090466540L</span>;</span><br><span class="line">  <span class="comment">// 争锁</span></span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        acquire(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">// 来自父类AQS，我直接贴过来这边，下面分析的时候同样会这样做，不会给读者带来阅读压力</span></span><br><span class="line">    <span class="comment">// 我们看到，这个方法，如果tryAcquire(arg) 返回true, 也就结束了。</span></span><br><span class="line">    <span class="comment">// 否则，acquireQueued方法会将线程压到队列中</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">acquire</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123; <span class="comment">// 此时 arg == 1</span></span><br><span class="line">        <span class="comment">// 首先调用tryAcquire(1)一下，名字上就知道，这个只是试一试</span></span><br><span class="line">        <span class="comment">// 因为有可能直接就成功了呢，也就不需要进队列排队了，</span></span><br><span class="line">        <span class="comment">// 对于公平锁的语义就是：本来就没人持有锁，根本没必要进队列等待(又是挂起，又是等待被唤醒的)</span></span><br><span class="line">        <span class="keyword">if</span> (!tryAcquire(arg) &amp;&amp;</span><br><span class="line">            <span class="comment">// tryAcquire(arg)没有成功，这个时候需要把当前线程挂起，放到阻塞队列中。</span></span><br><span class="line">            acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) &#123;</span><br><span class="line">              selfInterrupt();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Fair version of tryAcquire.  Don't grant access unless</span></span><br><span class="line"><span class="comment">     * recursive call or no waiters or is first.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 尝试直接获取锁，返回值是boolean，代表是否获取到锁</span></span><br><span class="line">    <span class="comment">// 返回true：1.没有线程在等待锁；2.重入锁，线程本来就持有锁，也就可以理所当然可以直接获取</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryAcquire</span><span class="params">(<span class="keyword">int</span> acquires)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Thread current = Thread.currentThread();</span><br><span class="line">        <span class="keyword">int</span> c = getState();</span><br><span class="line">        <span class="comment">// state == 0 此时此刻没有线程持有锁</span></span><br><span class="line">        <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 虽然此时此刻锁是可以用的，但是这是公平锁，既然是公平，就得讲究先来后到，</span></span><br><span class="line">            <span class="comment">// 看看有没有别人在队列中等了半天了</span></span><br><span class="line">            <span class="keyword">if</span> (!hasQueuedPredecessors() &amp;&amp;</span><br><span class="line">                <span class="comment">// 如果没有线程在等待，那就用CAS尝试一下，成功了就获取到锁了，</span></span><br><span class="line">                <span class="comment">// 不成功的话，只能说明一个问题，就在刚刚几乎同一时刻有个线程抢先了 =_=</span></span><br><span class="line">                <span class="comment">// 因为刚刚还没人的，我判断过了</span></span><br><span class="line">                compareAndSetState(<span class="number">0</span>, acquires)) &#123;</span><br><span class="line">              </span><br><span class="line">                <span class="comment">// 到这里就是获取到锁了，标记一下，告诉大家，现在是我占用了锁</span></span><br><span class="line">                setExclusiveOwnerThread(current);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      <span class="comment">// 会进入这个else if分支，说明是重入了，需要操作：state=state+1</span></span><br><span class="line">        <span class="comment">// 这里不存在并发问题</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (current == getExclusiveOwnerThread()) &#123;</span><br><span class="line">            <span class="keyword">int</span> nextc = c + acquires;</span><br><span class="line">            <span class="keyword">if</span> (nextc &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">"Maximum lock count exceeded"</span>);</span><br><span class="line">            setState(nextc);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果到这里，说明前面的if和else if都没有返回true，说明没有获取到锁</span></span><br><span class="line">        <span class="comment">// 回到上面一个外层调用方法继续看:</span></span><br><span class="line">        <span class="comment">// if (!tryAcquire(arg) </span></span><br><span class="line">        <span class="comment">//        &amp;&amp; acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) </span></span><br><span class="line">        <span class="comment">//     selfInterrupt();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 假设tryAcquire(arg) 返回false，那么代码将执行：</span></span><br><span class="line">  <span class="comment">//acquireQueued(addWaiter(Node.EXCLUSIVE), arg)，</span></span><br><span class="line">    <span class="comment">// 这个方法，首先需要执行：addWaiter(Node.EXCLUSIVE)</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Creates and enqueues node for current thread and given mode.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mode Node.EXCLUSIVE for exclusive, Node.SHARED for shared</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new node</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 此方法的作用是把线程包装成node，同时进入到队列中</span></span><br><span class="line">    <span class="comment">// 参数mode此时是Node.EXCLUSIVE，代表独占模式</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">addWaiter</span><span class="params">(Node mode)</span> </span>&#123;</span><br><span class="line">        Node node = <span class="keyword">new</span> Node(Thread.currentThread(), mode);</span><br><span class="line">        <span class="comment">// Try the fast path of enq; backup to full enq on failure</span></span><br><span class="line">        <span class="comment">// 以下几行代码想把当前node加到链表的最后面去，也就是进到阻塞队列的最后</span></span><br><span class="line">        Node pred = tail;</span><br><span class="line">      </span><br><span class="line">        <span class="comment">// tail!=null =&gt; 队列不为空(tail==head的时候，其实队列是空的，不过不管这个吧)</span></span><br><span class="line">        <span class="keyword">if</span> (pred != <span class="keyword">null</span>) &#123; </span><br><span class="line">            <span class="comment">// 将当前的队尾节点，设置为自己的前驱 </span></span><br><span class="line">            node.prev = pred; </span><br><span class="line">            <span class="comment">// 用CAS把自己设置为队尾, 如果成功后，tail == node 了，这个节点成为阻塞队列新的尾巴</span></span><br><span class="line">            <span class="keyword">if</span> (compareAndSetTail(pred, node)) &#123; </span><br><span class="line">                <span class="comment">// 进到这里说明设置成功，当前node==tail, 将自己与之前的队尾相连，</span></span><br><span class="line">                <span class="comment">// 上面已经有 node.prev = pred，加上下面这句，也就实现了和之前的尾节点双向连接了</span></span><br><span class="line">                pred.next = node;</span><br><span class="line">                <span class="comment">// 线程入队了，可以返回了</span></span><br><span class="line">                <span class="keyword">return</span> node;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 仔细看看上面的代码，如果会到这里，</span></span><br><span class="line">        <span class="comment">// 说明 pred==null(队列是空的) 或者 CAS失败(有线程在竞争入队)</span></span><br><span class="line">        <span class="comment">// 读者一定要跟上思路，如果没有跟上，建议先不要往下读了，往回仔细看，否则会浪费时间的</span></span><br><span class="line">        enq(node);</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Inserts node into queue, initializing if necessary. See picture above.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> node the node to insert</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> node's predecessor</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 采用自旋的方式入队</span></span><br><span class="line">    <span class="comment">// 之前说过，到这个方法只有两种可能：等待队列为空，或者有线程竞争入队，</span></span><br><span class="line">    <span class="comment">// 自旋在这边的语义是：CAS设置tail过程中，竞争一次竞争不到，我就多次竞争，总会排到的</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">enq</span><span class="params">(<span class="keyword">final</span> Node node)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">            Node t = tail;</span><br><span class="line">            <span class="comment">// 之前说过，队列为空也会进来这里</span></span><br><span class="line">            <span class="keyword">if</span> (t == <span class="keyword">null</span>) &#123; <span class="comment">// Must initialize</span></span><br><span class="line">                <span class="comment">// 初始化head节点</span></span><br><span class="line">                <span class="comment">// 细心的读者会知道原来 head 和 tail 初始化的时候都是 null 的</span></span><br><span class="line">                <span class="comment">// 还是一步CAS，你懂的，现在可能是很多线程同时进来呢</span></span><br><span class="line">                <span class="keyword">if</span> (compareAndSetHead(<span class="keyword">new</span> Node()))</span><br><span class="line">                    <span class="comment">// 给后面用：这个时候head节点的waitStatus==0, 看new Node()构造方法就知道了</span></span><br><span class="line">                  </span><br><span class="line">                    <span class="comment">// 这个时候有了head，但是tail还是null，设置一下，</span></span><br><span class="line">                    <span class="comment">// 把tail指向head，放心，马上就有线程要来了，到时候tail就要被抢了</span></span><br><span class="line">                    <span class="comment">// 注意：这里只是设置了tail=head，这里可没return哦，没有return，没有return</span></span><br><span class="line">                    <span class="comment">// 所以，设置完了以后，继续for循环，下次就到下面的else分支了</span></span><br><span class="line">                    tail = head;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 下面几行，和上一个方法 addWaiter 是一样的，</span></span><br><span class="line">                <span class="comment">// 只是这个套在无限循环里，反正就是将当前线程排到队尾，有线程竞争的话排不上重复排</span></span><br><span class="line">                node.prev = t;</span><br><span class="line">                <span class="keyword">if</span> (compareAndSetTail(t, node)) &#123;</span><br><span class="line">                    t.next = node;</span><br><span class="line">                    <span class="keyword">return</span> t;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 现在，又回到这段代码了</span></span><br><span class="line">    <span class="comment">// if (!tryAcquire(arg) </span></span><br><span class="line">    <span class="comment">//        &amp;&amp; acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) </span></span><br><span class="line">    <span class="comment">//     selfInterrupt();</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 下面这个方法，参数node，经过addWaiter(Node.EXCLUSIVE)，此时已经进入阻塞队列</span></span><br><span class="line">    <span class="comment">// 注意一下：如果acquireQueued(addWaiter(Node.EXCLUSIVE), arg))返回true的话，</span></span><br><span class="line">    <span class="comment">// 意味着上面这段代码将进入selfInterrupt()，所以正常情况下，下面应该返回false</span></span><br><span class="line">    <span class="comment">// 这个方法非常重要，应该说真正的线程挂起，然后被唤醒后去获取锁，都在这个方法里了</span></span><br><span class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">acquireQueued</span><span class="params">(<span class="keyword">final</span> Node node, <span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> failed = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">boolean</span> interrupted = <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">                <span class="keyword">final</span> Node p = node.predecessor();</span><br><span class="line">                <span class="comment">// p == head 说明当前节点虽然进到了阻塞队列，但是是阻塞队列的第一个，因为它的前驱是head</span></span><br><span class="line">                <span class="comment">// 注意，阻塞队列不包含head节点，head一般指的是占有锁的线程，head后面的才称为阻塞队列</span></span><br><span class="line">                <span class="comment">// 所以当前节点可以去试抢一下锁</span></span><br><span class="line">                <span class="comment">// 这里我们说一下，为什么可以去试试：</span></span><br><span class="line">                <span class="comment">// 首先，它是队头，这个是第一个条件，其次，当前的head有可能是刚刚初始化的node，</span></span><br><span class="line">                <span class="comment">// enq(node) 方法里面有提到，head是延时初始化的，而且new Node()的时候没有设置任何线程</span></span><br><span class="line">                <span class="comment">// 也就是说，当前的head不属于任何一个线程，所以作为队头，可以去试一试，</span></span><br><span class="line">                <span class="comment">// tryAcquire已经分析过了, 忘记了请往前看一下，就是简单用CAS试操作一下state</span></span><br><span class="line">                <span class="keyword">if</span> (p == head &amp;&amp; tryAcquire(arg)) &#123;</span><br><span class="line">                    setHead(node);</span><br><span class="line">                    p.next = <span class="keyword">null</span>; <span class="comment">// help GC</span></span><br><span class="line">                    failed = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="keyword">return</span> interrupted;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 到这里，说明上面的if分支没有成功，要么当前node本来就不是队头，</span></span><br><span class="line">                <span class="comment">// 要么就是tryAcquire(arg)没有抢赢别人，继续往下看</span></span><br><span class="line">                <span class="keyword">if</span> (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span><br><span class="line">                    parkAndCheckInterrupt())</span><br><span class="line">                    interrupted = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 什么时候 failed 会为 true???</span></span><br><span class="line">            <span class="comment">// tryAcquire() 方法抛异常的情况</span></span><br><span class="line">            <span class="keyword">if</span> (failed)</span><br><span class="line">                cancelAcquire(node);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Checks and updates status for a node that failed to acquire.</span></span><br><span class="line"><span class="comment">     * Returns true if thread should block. This is the main signal</span></span><br><span class="line"><span class="comment">     * control in all acquire loops.  Requires that pred == node.prev</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pred node's predecessor holding status</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> node the node</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@code</span> true&#125; if thread should block</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 刚刚说过，会到这里就是没有抢到锁呗，这个方法说的是："当前线程没有抢到锁，是否需要挂起当前线程？"</span></span><br><span class="line">    <span class="comment">// 第一个参数是前驱节点，第二个参数才是代表当前线程的节点</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">shouldParkAfterFailedAcquire</span><span class="params">(Node pred, Node node)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ws = pred.waitStatus;</span><br><span class="line">        <span class="comment">// 前驱节点的 waitStatus == -1 ，说明前驱节点状态正常，当前线程需要挂起，直接可以返回true</span></span><br><span class="line">        <span class="keyword">if</span> (ws == Node.SIGNAL)</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * This node has already set status asking a release</span></span><br><span class="line"><span class="comment">             * to signal it, so it can safely park.</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 前驱节点 waitStatus大于0 ，之前说过，大于0 说明前驱节点取消了排队。</span></span><br><span class="line">        <span class="comment">// 这里需要知道这点：进入阻塞队列排队的线程会被挂起，而唤醒的操作是由前驱节点完成的。</span></span><br><span class="line">        <span class="comment">// 所以下面这块代码说的是将当前节点的prev指向waitStatus&lt;=0的节点，</span></span><br><span class="line">        <span class="comment">// 简单说，就是为了找个好爹，因为你还得依赖它来唤醒呢，如果前驱节点取消了排队，</span></span><br><span class="line">        <span class="comment">// 找前驱节点的前驱节点做爹，往前遍历总能找到一个好爹的</span></span><br><span class="line">        <span class="keyword">if</span> (ws &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * Predecessor was cancelled. Skip over predecessors and</span></span><br><span class="line"><span class="comment">             * indicate retry.</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                node.prev = pred = pred.prev;</span><br><span class="line">            &#125; <span class="keyword">while</span> (pred.waitStatus &gt; <span class="number">0</span>);</span><br><span class="line">            pred.next = node;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">             * waitStatus must be 0 or PROPAGATE.  Indicate that we</span></span><br><span class="line"><span class="comment">             * need a signal, but don't park yet.  Caller will need to</span></span><br><span class="line"><span class="comment">             * retry to make sure it cannot acquire before parking.</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="comment">// 仔细想想，如果进入到这个分支意味着什么</span></span><br><span class="line">            <span class="comment">// 前驱节点的waitStatus不等于-1和1，那也就是只可能是0，-2，-3</span></span><br><span class="line">            <span class="comment">// 在我们前面的源码中，都没有看到有设置waitStatus的，所以每个新的node入队时，waitStatu都是0</span></span><br><span class="line">            <span class="comment">// 正常情况下，前驱节点是之前的 tail，那么它的 waitStatus 应该是 0</span></span><br><span class="line">            <span class="comment">// 用CAS将前驱节点的waitStatus设置为Node.SIGNAL(也就是-1)</span></span><br><span class="line">            compareAndSetWaitStatus(pred, ws, Node.SIGNAL);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 这个方法返回 false，那么会再走一次 for 循序，</span></span><br><span class="line">        <span class="comment">//     然后再次进来此方法，此时会从第一个分支返回 true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// private static boolean shouldParkAfterFailedAcquire(Node pred, Node node)</span></span><br><span class="line">    <span class="comment">// 这个方法结束根据返回值我们简单分析下：</span></span><br><span class="line">    <span class="comment">// 如果返回true, 说明前驱节点的waitStatus==-1，是正常情况，那么当前线程需要被挂起，等待以后被唤醒</span></span><br><span class="line">    <span class="comment">//我们也说过，以后是被前驱节点唤醒，就等着前驱节点拿到锁，然后释放锁的时候叫你好了</span></span><br><span class="line">    <span class="comment">// 如果返回false, 说明当前不需要被挂起，为什么呢？往后看</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 跳回到前面是这个方法</span></span><br><span class="line">    <span class="comment">// if (shouldParkAfterFailedAcquire(p, node) &amp;&amp;</span></span><br><span class="line">    <span class="comment">//                parkAndCheckInterrupt())</span></span><br><span class="line">    <span class="comment">//                interrupted = true;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 1. 如果shouldParkAfterFailedAcquire(p, node)返回true，</span></span><br><span class="line">    <span class="comment">// 那么需要执行parkAndCheckInterrupt():</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 这个方法很简单，因为前面返回true，所以需要挂起线程，这个方法就是负责挂起线程的</span></span><br><span class="line">    <span class="comment">// 这里用了LockSupport.park(this)来挂起线程，然后就停在这里了，等待被唤醒=======</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">parkAndCheckInterrupt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        LockSupport.park(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">return</span> Thread.interrupted();</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 2. 接下来说说如果shouldParkAfterFailedAcquire(p, node)返回false的情况</span></span><br><span class="line">  </span><br><span class="line">   <span class="comment">// 仔细看shouldParkAfterFailedAcquire(p, node)，我们可以发现，其实第一次进来的时候，一般都不会返回true的，原因很简单，前驱节点的waitStatus=-1是依赖于后继节点设置的。也就是说，我都还没给前驱设置-1呢，怎么可能是true呢，但是要看到，这个方法是套在循环里的，所以第二次进来的时候状态就是-1了。</span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">// 解释下为什么shouldParkAfterFailedAcquire(p, node)返回false的时候不直接挂起线程：</span></span><br><span class="line">    <span class="comment">// =&gt; 是为了应对在经过这个方法后，node已经是head的直接后继节点了。剩下的读者自己想想吧。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>说到这里，也就明白了，多看几遍 <code>final boolean acquireQueued(final Node node, int arg)</code> 这个方法吧。自己推演下各个分支怎么走，哪种情况下会发生什么，走到哪里。</p><h2 id="解锁操作"><a href="#解锁操作" class="headerlink" title="解锁操作"></a>解锁操作</h2><p>最后，就是还需要介绍下唤醒的动作了。我们知道，正常情况下，如果线程没获取到锁，线程会被 <code>LockSupport.park(this);</code> 挂起停止，等待被唤醒。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 唤醒的代码还是比较简单的，你如果上面加锁的都看懂了，下面都不需要看就知道怎么回事了</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    sync.release(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">release</span><span class="params">(<span class="keyword">int</span> arg)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 往后看吧</span></span><br><span class="line">    <span class="keyword">if</span> (tryRelease(arg)) &#123;</span><br><span class="line">        Node h = head;</span><br><span class="line">        <span class="keyword">if</span> (h != <span class="keyword">null</span> &amp;&amp; h.waitStatus != <span class="number">0</span>)</span><br><span class="line">            unparkSuccessor(h);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 回到ReentrantLock看tryRelease方法</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">tryRelease</span><span class="params">(<span class="keyword">int</span> releases)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c = getState() - releases;</span><br><span class="line">    <span class="keyword">if</span> (Thread.currentThread() != getExclusiveOwnerThread())</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalMonitorStateException();</span><br><span class="line">    <span class="comment">// 是否完全释放锁</span></span><br><span class="line">    <span class="keyword">boolean</span> free = <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">// 其实就是重入的问题，如果c==0，也就是说没有嵌套锁了，可以释放了，否则还不能释放掉</span></span><br><span class="line">    <span class="keyword">if</span> (c == <span class="number">0</span>) &#123;</span><br><span class="line">        free = <span class="keyword">true</span>;</span><br><span class="line">        setExclusiveOwnerThread(<span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    setState(c);</span><br><span class="line">    <span class="keyword">return</span> free;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Wakes up node's successor, if one exists.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> node the node</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 唤醒后继节点</span></span><br><span class="line"><span class="comment">// 从上面调用处知道，参数node是head头结点</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">unparkSuccessor</span><span class="params">(Node node)</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * If status is negative (i.e., possibly needing signal) try</span></span><br><span class="line"><span class="comment">     * to clear in anticipation of signalling.  It is OK if this</span></span><br><span class="line"><span class="comment">     * fails or if status is changed by waiting thread.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">int</span> ws = node.waitStatus;</span><br><span class="line">    <span class="comment">// 如果head节点当前waitStatus&lt;0, 将其修改为0</span></span><br><span class="line">    <span class="keyword">if</span> (ws &lt; <span class="number">0</span>)</span><br><span class="line">        compareAndSetWaitStatus(node, ws, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * Thread to unpark is held in successor, which is normally</span></span><br><span class="line"><span class="comment">     * just the next node.  But if cancelled or apparently null,</span></span><br><span class="line"><span class="comment">     * traverse backwards from tail to find the actual</span></span><br><span class="line"><span class="comment">     * non-cancelled successor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 下面的代码就是唤醒后继节点，但是有可能后继节点取消了等待（waitStatus==1）</span></span><br><span class="line">    <span class="comment">// 从队尾往前找，找到waitStatus&lt;=0的所有节点中排在最前面的</span></span><br><span class="line">    Node s = node.next;</span><br><span class="line">    <span class="keyword">if</span> (s == <span class="keyword">null</span> || s.waitStatus &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        s = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 从后往前找，仔细看代码，不必担心中间有节点取消(waitStatus==1)的情况</span></span><br><span class="line">        <span class="keyword">for</span> (Node t = tail; t != <span class="keyword">null</span> &amp;&amp; t != node; t = t.prev)</span><br><span class="line">            <span class="keyword">if</span> (t.waitStatus &lt;= <span class="number">0</span>)</span><br><span class="line">                s = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (s != <span class="keyword">null</span>)</span><br><span class="line">        <span class="comment">// 唤醒线程</span></span><br><span class="line">        LockSupport.unpark(s.thread);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>唤醒线程以后，被唤醒的线程将从以下代码中继续往前走：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">parkAndCheckInterrupt</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    LockSupport.park(<span class="keyword">this</span>); <span class="comment">// 刚刚线程被挂起在这里了</span></span><br><span class="line">    <span class="keyword">return</span> Thread.interrupted();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 又回到这个方法了：acquireQueued(final Node node, int arg)，这个时候，node的前驱是head了</span></span><br></pre></td></tr></table></figure></div><p>好了，后面就不分析源码了，剩下的还有问题自己去仔细看看代码吧。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总结一下吧。</p><p>在并发环境下，加锁和解锁需要以下三个部件的协调：</p><p>1、 锁状态。我们要知道锁是不是被别的线程占有了，这个就是 state 的作用，它为 0 的时候代表没有线程占有锁，可以去争抢这个锁，用 CAS 将 state 设为 1，如果 CAS 成功，说明抢到了锁，这样其他线程就抢不到了，如果锁重入的话，state进行 +1 就可以，解锁就是减 1，直到 state 又变为 0，代表释放锁，所以 lock() 和 unlock() 必须要配对啊。然后唤醒等待队列中的第一个线程，让其来占有锁。<br>2、 线程的阻塞和解除阻塞。AQS 中采用了 LockSupport.park(thread) 来挂起线程，用 unpark 来唤醒线程。<br>3、 阻塞队列。因为争抢锁的线程可能很多，但是只能有一个线程拿到锁，其他的线程都必须等待，这个时候就需要一个 queue 来管理这些线程，AQS 用的是一个 FIFO 的队列，就是一个链表，每个 node 都持有后继节点的引用。AQS 采用了 CLH 锁的变体来实现，感兴趣的读者可以参考这篇文章<a href="http://coderbee.net/index.php/concurrent/20131115/577" target="_blank" rel="noopener">关于CLH的介绍</a>，写得简单明了。</p><h2 id="示例图解析"><a href="#示例图解析" class="headerlink" title="示例图解析"></a>示例图解析</h2><p>下面属于回顾环节，用简单的示例来说一遍，如果上面的有些东西没看懂，这里还有一次帮助你理解的机会。</p><p>首先，第一个线程调用 reentrantLock.lock()，翻到最前面可以发现，tryAcquire(1) 直接就返回 true 了，结束。只是设置了 state=1，连 head 都没有初始化，更谈不上什么阻塞队列了。要是线程 1 调用 unlock() 了，才有线程 2 来，那世界就太太太平了，完全没有交集嘛，那我还要 AQS 干嘛。</p><p>如果线程 1 没有调用 unlock() 之前，线程 2 调用了 lock(), 想想会发生什么？</p><p>线程 2 会初始化 head【new Node()】，同时线程 2 也会插入到阻塞队列并挂起 (注意看这里是一个 for 循环，而且设置 head 和 tail 的部分是不 return 的，只有入队成功才会跳出循环)</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">enq</span><span class="params">(<span class="keyword">final</span> Node node)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">        Node t = tail;</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="keyword">null</span>) &#123; <span class="comment">// Must initialize</span></span><br><span class="line">            <span class="keyword">if</span> (compareAndSetHead(<span class="keyword">new</span> Node()))</span><br><span class="line">                tail = head;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            node.prev = t;</span><br><span class="line">            <span class="keyword">if</span> (compareAndSetTail(t, node)) &#123;</span><br><span class="line">                t.next = node;</span><br><span class="line">                <span class="keyword">return</span> t;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>首先，是线程 2 初始化 head 节点，此时 head==tail, waitStatus==0</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/42/3.jpg" alt="aqs-0"></p><p>然后线程 2 入队：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/42/4.jpg" alt="aqs-0"></p><p>同时我们也要看此时节点的 waitStatus，我们知道 head 节点是线程 2 初始化的，此时的 waitStatus 没有设置， java 默认会设置为 0，但是到 shouldParkAfterFailedAcquire 这个方法的时候，线程 2 会把前驱节点，也就是 head 的waitStatus设置为 -1。</p><p>那线程 2 节点此时的 waitStatus 是多少呢，由于没有设置，所以是 0；</p><p>如果线程 3 此时再进来，直接插到线程 2 的后面就可以了，此时线程 3 的 waitStatus 是 0，到 shouldParkAfterFailedAcquire 方法的时候把前驱节点线程 2 的 waitStatus 设置为 -1。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/42/5.jpg" alt="aqs-0"></p><p>这里可以简单说下 waitStatus 中 SIGNAL(-1) 状态的意思，Doug Lea 注释的是：代表后继节点需要被唤醒。也就是说这个 waitStatus 其实代表的不是自己的状态，而是后继节点的状态，我们知道，每个 node 在入队的时候，都会把前驱节点的状态改为 SIGNAL，然后阻塞，等待被前驱唤醒。这里涉及的是两个问题：有线程取消了排队、唤醒操作。其实本质是一样的，读者也可以顺着 “waitStatus代表后继节点的状态” 这种思路去看一遍源码。</p><p>（全文完）</p><div class="note success"><p>原文链接：<a href="https://javadoop.com/post/AbstractQueuedSynchronizer" target="_blank" rel="noopener">一行一行源码分析清楚AbstractQueuedSynchronizer</a></p></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> AbstractQueuedSynchronizer </tag>
            
            <tag> ReentrantLock </tag>
            
            <tag> 并发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot 使用 @Transactional 无效</title>
      <link href="/posts/1059904857.html"/>
      <url>/posts/1059904857.html</url>
      
        <content type="html"><![CDATA[<p>在 Spring Boot 引入的依赖 spring-boot-starter、spring-boot-starter-web 中都已经包含了对于 spring-boot-starter-jdbc 或 spring-boot-starter-data-jpa 的依赖，框架会自动默认分别注入 DataSourceTransactionManager 或 JpaTransactionManager。我们不需要任何额外配置就可以用 @Transactional 注解进行事务的使用。</p><a id="more"></a><h3 id="Spring-事物分类"><a href="#Spring-事物分类" class="headerlink" title="Spring 事物分类"></a>Spring 事物分类</h3><h4 id="编程式事物"><a href="#编程式事物" class="headerlink" title="编程式事物"></a>编程式事物</h4><p>通过使用 TransactionTemplate 手动管理事务，实际应用中很少使用。</p><h4 id="声明式事物（代码侵入少）"><a href="#声明式事物（代码侵入少）" class="headerlink" title="声明式事物（代码侵入少）"></a>声明式事物（代码侵入少）</h4><p>分为两种情况：一是通过传统 xml 方式配置，二是使用 @Transaction 注解方式，Spring 的声明式事务是通过 AOP 实现的。</p><h3 id="Spring-事务失效场景"><a href="#Spring-事务失效场景" class="headerlink" title="Spring 事务失效场景"></a>Spring 事务失效场景</h3><h4 id="数据库引擎不支持"><a href="#数据库引擎不支持" class="headerlink" title="数据库引擎不支持"></a>数据库引擎不支持</h4><p>数据库引擎要支持事务，如果是 MySQL，表要使用支持事务的引擎比如 InnoDB，如果是 MyISAM, 事务是不起作用的</p><h4 id="Sping-包扫描的问题"><a href="#Sping-包扫描的问题" class="headerlink" title="Sping 包扫描的问题"></a>Sping 包扫描的问题</h4><p>检查 Spring 是否扫描到了需要开启事务的 类 / 方法所在包路径</p><h4 id="Transaction-注解在非-public-方法上"><a href="#Transaction-注解在非-public-方法上" class="headerlink" title="@Transaction 注解在非 public 方法上"></a>@Transaction 注解在非 public 方法上</h4><p>@Transactional 注解只能应用到 public 可见度的方法上，可以被应用于接口定义和接口方法，方法会覆盖类上面声明的事务。</p><h4 id="Service-类内部方法调用"><a href="#Service-类内部方法调用" class="headerlink" title="Service 类内部方法调用"></a>Service 类内部方法调用</h4><p>Service 中方法 A 内部调用方法 B， 方法 A 没有事务管理，方法 B 采用了声明式事务。在方法 A 中调用方法 B，实际上是通过 <code>this</code> 的引用，也就是直接调用了目标类的方法，而非通过 Spring 上下文获得的代理类，所以事务不生效。</p><h4 id="遇到检查异常，事务不回滚"><a href="#遇到检查异常，事务不回滚" class="headerlink" title="遇到检查异常，事务不回滚"></a>遇到检查异常，事务不回滚</h4><p>遇到检查异常时，事务开启，也无法回滚。例如下面这段代码，用户依旧增加成功，并没有因为后面遇到检查异常而回滚</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> rows = insertUser(user);</span><br><span class="line">    insertUserRole(user);</span><br><span class="line">    <span class="comment">// 模拟抛出 SQLException 异常</span></span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123; </span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> SQLException(<span class="string">"发生异常了.."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rows;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>原因：Spring 默认的事务规则是遇到运行异常 <code>RuntimeException</code> 和程序错误 <code>Error</code> 才会回滚。如果想针对检查异常进行事务回滚，可以在 @Transactional 注解里使用 <code>rollbackFor</code> 属性明确指定异常</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span>(rollbackFor = Exception<span class="class">.<span class="keyword">class</span>)</span></span><br></pre></td></tr></table></figure></div><h4 id="业务层捕捉异常，事务不生效"><a href="#业务层捕捉异常，事务不生效" class="headerlink" title="业务层捕捉异常，事务不生效"></a>业务层捕捉异常，事务不生效</h4><p>在业务层手工捕捉并处理了异常（try…catch），Spring 自然不知道这里有错，更不会主动去回滚数据</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">insert</span><span class="params">(User user)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> rows = insertUser(user);</span><br><span class="line">    insertUserRole(user);</span><br><span class="line">    <span class="comment">// 模拟抛出 SQLException 异常</span></span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 谨慎：尽量不要在业务层捕捉异常并处理</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> SQLException(<span class="string">"发生异常了.."</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rows;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>推荐做法：在业务层统一抛出异常，然后在控制层统一处理。</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><h4 id="Transactional-注解的常用属性表"><a href="#Transactional-注解的常用属性表" class="headerlink" title="Transactional 注解的常用属性表"></a>Transactional 注解的常用属性表</h4><table><thead><tr><th align="center">属性</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">propagation</td><td align="center">事务的传播行为，默认值为 REQUIRED</td></tr><tr><td align="center">isolation</td><td align="center">事务的隔离度，默认值采用 DEFAULT</td></tr><tr><td align="center">timeout</td><td align="center">事务的超时时间，默认值为-1，不超时。如果设置了超时时间(单位秒)，那么如果超过该时间限制了但事务还没有完成，则自动回滚事务</td></tr><tr><td align="center">read-only</td><td align="center">指定事务是否为只读事务，默认值为 false；为了忽略那些不需要事务的方法，比如读取数据，可以设置 read-only 为 true</td></tr><tr><td align="center">rollbackFor</td><td align="center">用于指定能够触发事务回滚的异常类型，如果有多个异常类型需要指定，各类型之间可以通过逗号分隔。{xxx1.class, xxx2.class,……}</td></tr><tr><td align="center">noRollbackFor</td><td align="center">抛出 no-rollback-for 指定的异常类型，不回滚事务。{xxx1.class, xxx2.class,……}</td></tr><tr><td align="center">….</td><td align="center"></td></tr></tbody></table><div class="note info"><p>事务的传播机制是指如果在开始当前事务之前，一个事务上下文已经存在，此时有若干选项可以指定一个事务性方法的执行行为。 即:在执行一个 @Transactinal 注解标注的方法时，开启了事务；当该方法还在执行中时，另一个人也触发了该方法；那么此时怎么算事务呢，这时就可以通过事务的传播机制来指定处理方式。</p></div><h4 id="TransactionDefinition-传播行为的常量"><a href="#TransactionDefinition-传播行为的常量" class="headerlink" title="TransactionDefinition 传播行为的常量"></a>TransactionDefinition 传播行为的常量</h4><table><thead><tr><th align="center">常量</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">TransactionDefinition.PROPAGATION_REQUIRED</td><td align="center">如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。这是默认值</td></tr><tr><td align="center">TransactionDefinition.PROPAGATION_REQUIRES_NEW</td><td align="center">创建一个新的事务，如果当前存在事务，则把当前事务挂起</td></tr><tr><td align="center">TransactionDefinition.PROPAGATION_SUPPORTS</td><td align="center">如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行</td></tr><tr><td align="center">TransactionDefinition.PROPAGATION_NOT_SUPPORTED</td><td align="center">以非事务方式运行，如果当前存在事务，则把当前事务挂起</td></tr><tr><td align="center">TransactionDefinition.PROPAGATION_NEVER</td><td align="center">以非事务方式运行，如果当前存在事务，则抛出异常</td></tr><tr><td align="center">TransactionDefinition.PROPAGATION_MANDATORY</td><td align="center">如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常</td></tr><tr><td align="center">TransactionDefinition.PROPAGATION_NESTED</td><td align="center">如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于TransactionDefinition.PROPAGATION_REQUIRED</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 事务 </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Certbot 申请免费的 SSL 证书</title>
      <link href="/posts/712036057.html"/>
      <url>/posts/712036057.html</url>
      
        <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width:100%"><img class="index_img_class" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/41/1.jpg"></div></div><div class="group-picture-row"></div></div></div><a id="more"></a><p>SSL(Secure Sockets Layer 安全套接字协议),及其继任者传输层安全（Transport Layer Security，TLS）是为网络通信提供安全及数据完整性的一种安全协议。TLS 与 SSL 在传输层与应用层之间对网络连接进行加密，确保数据发送到正确的客户机和服务器，防止数据中途被窃取，维护数据的完整性，确保数据在传输过程中不被改变… —摘自《百度百科》</p><p><a href="https://baike.baidu.com/item/ssl/320778" class="LinkCard" target="_blank" rel="noopener">百度百科</a></p><p><a href="https://letsencrypt.org/" target="_blank" rel="noopener">Let’s Encrypt</a> 是一个自动签发 HTTPS 证书的免费项目，<a href="https://certbot.eff.org/" target="_blank" rel="noopener">Certbot</a> 是 Let’s Encrypt 官方推荐的证书生成客户端工具。</p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>将要签发证书的域名(如 you.domain.com) 解析到外网服务器，以 CentOS 8、Nginx 为例：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/41/2.jpg" alt="Certbot.jpg"></p><p>①、操作步骤概览</p><p>②、单个域名、泛域名证书</p><p>单个域名的证书生成还是比较简单的，参考官方文档即可，下面主要介绍泛域名证书的生成步骤。</p><p><a href="https://certbot.eff.org/lets-encrypt/centosrhel8-nginx" class="LinkCard" target="_blank" rel="noopener">Certbot Nginx SSL</a></p><p>因为泛域名证书需要 DNS 验证，而 Certbot 提供的 DNS 插件都是基于国外 DNS 厂商的，如 Cloudflare、Google 等，阿里云、腾讯云的 DNS 插件可以在 GitHub 上找到</p><p><a href="https://github.com/tengattack/certbot-dns-aliyun" class="LinkCard" target="_blank" rel="noopener">certbot-dns-aliyun</a></p><p><a href="https://github.com/Frefreak/certbot-dns-tencentcloud" class="LinkCard" target="_blank" rel="noopener">certbot-dns-tencentcloud</a></p><p>在使用 <code>certbot-dns-aliyun</code> 遇到证书一直生成失败：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Certbot</span> <span class="string">failed</span> <span class="string">to</span> <span class="string">authenticate</span> <span class="string">some</span> <span class="string">domains</span> <span class="string">(authenticator:</span> <span class="string">certbot-dns-aliyun:dns-aliyun).</span> <span class="attr">The Certificate Authority reported these problems:</span></span><br><span class="line">  <span class="attr">Domain:</span> <span class="string">liaofuzhan.com</span></span><br><span class="line">  <span class="attr">Type:</span>   <span class="string">dns</span></span><br><span class="line">  <span class="attr">Detail: DNS problem:</span> <span class="string">SERVFAIL</span> <span class="string">looking</span> <span class="string">up</span> <span class="string">TXT</span> <span class="string">for</span> <span class="string">_acme-challenge.liaofuzhan.com</span> <span class="bullet">-</span> <span class="string">the</span> <span class="string">domain's</span> <span class="string">nameservers</span> <span class="string">may</span> <span class="string">be</span> <span class="string">malfunctioning</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">Domain:</span> <span class="string">liaofuzhan.com</span></span><br><span class="line">  <span class="attr">Type:</span>   <span class="string">dns</span></span><br><span class="line">  <span class="attr">Detail: DNS problem:</span> <span class="string">SERVFAIL</span> <span class="string">looking</span> <span class="string">up</span> <span class="string">TXT</span> <span class="string">for</span> <span class="string">_acme-challenge.liaofuzhan.com</span> <span class="bullet">-</span> <span class="string">the</span> <span class="string">domain's</span> <span class="string">nameservers</span> <span class="string">may</span> <span class="string">be</span> <span class="string">malfunctioning</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Hint:</span> <span class="string">The</span> <span class="string">Certificate</span> <span class="string">Authority</span> <span class="string">failed</span> <span class="string">to</span> <span class="string">verify</span> <span class="string">the</span> <span class="string">DNS</span> <span class="string">TXT</span> <span class="string">records</span> <span class="string">created</span> <span class="string">by</span> <span class="string">--certbot-dns-aliyun:dns-aliyun.</span> <span class="string">Ensure</span> <span class="string">the</span> <span class="string">above</span> <span class="string">domains</span> <span class="string">are</span> <span class="string">hosted</span> <span class="string">by</span> <span class="string">this</span> <span class="string">DNS</span> <span class="string">provider,</span> <span class="string">or</span> <span class="string">try</span> <span class="string">increasing</span> <span class="string">--certbot-dns-aliyun:dns-aliyun-propagation-seconds</span> <span class="string">(currently</span> <span class="number">30</span> <span class="string">seconds).</span></span><br></pre></td></tr></table></figure></div><p><strong>解决方案</strong>：在阿里云域名管理 - DNSSEC 设置中，去掉列表下的 DS 记录。</p><div class="note info"><p>域名系统安全扩展（DNSSEC）是添加到域名的DNS域名系统确定源域名的可靠性数字签名，并有助于防止恶意活动缓存中毒、域欺骗和拦截中的攻击。</p></div><p>因为这 DNS 插件需要 <code>AliyunDNSFullAccess</code> 权限，还需要获取 AccessKey、AccessKeySecret，因担心安全问题所以还是按照官方的来吧。</p><h3 id="安装-Snapd"><a href="#安装-Snapd" class="headerlink" title="安装 Snapd"></a>安装 Snapd</h3><p>以具有 <code>sudo</code> 权限的用户身份 SSH 连接到运行 HTTP 网站的服务器，选择对应的操作系统，如 CenOS：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">yum</span> <span class="string">install</span> <span class="string">snapd</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">systemctl</span> <span class="string">enable</span> <span class="string">--now</span> <span class="string">snapd.socket</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">ln</span> <span class="string">-s</span> <span class="string">/var/lib/snapd/snap</span> <span class="string">/snap</span></span><br></pre></td></tr></table></figure></div><p>确保 Snapd 是最新版本：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">snap</span> <span class="string">install</span> <span class="string">core;</span> <span class="string">sudo</span> <span class="string">snap</span> <span class="string">refresh</span> <span class="string">core</span></span><br></pre></td></tr></table></figure></div><h3 id="安装-Certbot"><a href="#安装-Certbot" class="headerlink" title="安装 Certbot"></a>安装 Certbot</h3><h4 id="删除-Certbot-Auto-和任何-Certbot-OS-软件包"><a href="#删除-Certbot-Auto-和任何-Certbot-OS-软件包" class="headerlink" title="删除 Certbot Auto 和任何 Certbot OS 软件包"></a>删除 Certbot Auto 和任何 Certbot OS 软件包</h4><p>如果使用操作系统软件包管理器（如 apt、dnf 或 yum ）安装了任何 Certbot 软件包，则应在安装 Certbot snap 之前将其删除，以确保在运行命令 Certbot 时使用的是 Certbot Snap，而不是操作系统软件包管理器自带的，命令如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">apt-get</span> <span class="string">remove</span> <span class="string">certbot</span> <span class="string">或</span> <span class="string">sudo</span> <span class="string">dnf</span> <span class="string">remove</span> <span class="string">certbot</span> <span class="string">或</span> <span class="string">sudo</span> <span class="string">yum</span> <span class="string">remove</span> <span class="string">certbot</span></span><br></pre></td></tr></table></figure></div><h4 id="安装-Certbot-1"><a href="#安装-Certbot-1" class="headerlink" title="安装 Certbot"></a>安装 Certbot</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">snap</span> <span class="string">install</span> <span class="string">--classic</span> <span class="string">certbot</span></span><br></pre></td></tr></table></figure></div><h4 id="创建软连接"><a href="#创建软连接" class="headerlink" title="创建软连接"></a>创建软连接</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">ln</span> <span class="string">-s</span> <span class="string">/snap/bin/certbot</span> <span class="string">/usr/bin/certbot</span></span><br></pre></td></tr></table></figure></div><h4 id="确认插件包含级别"><a href="#确认插件包含级别" class="headerlink" title="确认插件包含级别"></a>确认插件包含级别</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">snap</span> <span class="string">set</span> <span class="string">certbot</span> <span class="string">trust-plugin-with-root=ok</span></span><br></pre></td></tr></table></figure></div><p>因为不使用 DNS 插件模式，所以安装 DNS 插件的步骤跳过</p><div class="note info"><p>除了 Manual、DNS Plugins，其它模式还有 Webroot、Standalone 等，详情请参考官方文档</p></div><p>下面使用 Manual 模式，执行命令</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">certbot</span> <span class="string">certonly</span> <span class="string">--manual</span> <span class="string">--preferred-challenges</span> <span class="string">dns</span> <span class="string">-d</span> <span class="string">*.liaofuzhan.com</span></span><br></pre></td></tr></table></figure></div><p>或者</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">certbot</span> <span class="string">certonly</span> <span class="string">--manual</span> <span class="string">--preferred-challenges</span> <span class="string">dns</span> <span class="string">-d</span> <span class="string">*.liaofuzhan.com</span> <span class="string">--server</span> <span class="string">https://acme-v02.api.letsencrypt.org/directory</span></span><br></pre></td></tr></table></figure></div><p>根据提示，在域名解析设置里分别添加两条以 <code>_acme-challenge</code> 开头的 <code>TXT</code> 记录，期间可以间隔一段时间，以期 TXT 记录生效，可以使用如下命令进行验证：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">dig</span> <span class="string">liaofuzhan.com</span> <span class="string">TXT</span></span><br></pre></td></tr></table></figure></div><p>或者</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">nslookup</span> <span class="string">-type=TXT</span> <span class="string">liaofuzhan.com</span></span><br></pre></td></tr></table></figure></div><h4 id="证书自动续期"><a href="#证书自动续期" class="headerlink" title="证书自动续期"></a>证书自动续期</h4><p>Let’s Encrypt 颁发的免费 SSL 证书有效期是 90 天，基于 Manual 模式的不支持自动续期：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Certificates</span> <span class="string">created</span> <span class="string">using</span> <span class="string">--manual</span> <span class="string">do</span> <span class="string">not</span> <span class="string">support</span> <span class="string">automatic</span> <span class="string">renewal</span> <span class="string">unless</span> <span class="string">combined</span> <span class="string">with</span> <span class="string">an</span> <span class="string">authentication</span> <span class="string">hook</span> <span class="string">script</span> <span class="string">via</span> <span class="string">--manual-auth-hook</span> <span class="string">to</span> <span class="string">automatically</span> <span class="string">set</span> <span class="string">up</span> <span class="string">the</span> <span class="string">required</span> <span class="string">HTTP</span> <span class="string">and/or</span> <span class="string">TXT</span> <span class="string">challenges.</span></span><br><span class="line"></span><br><span class="line"><span class="string">If</span> <span class="string">you</span> <span class="string">can</span> <span class="string">use</span> <span class="string">one</span> <span class="string">of</span> <span class="string">the</span> <span class="string">other</span> <span class="string">plugins</span> <span class="string">which</span> <span class="string">support</span> <span class="string">autorenewal</span> <span class="string">to</span> <span class="string">create</span> <span class="string">your</span> <span class="string">certificate,</span> <span class="string">doing</span> <span class="string">so</span> <span class="string">is</span> <span class="string">highly</span> <span class="string">recommended.</span></span><br><span class="line"></span><br><span class="line"><span class="string">To</span> <span class="string">manually</span> <span class="string">renew</span> <span class="string">a</span> <span class="string">certificate</span> <span class="string">using</span> <span class="string">--manual</span> <span class="string">without</span> <span class="string">hooks,</span> <span class="string">repeat</span> <span class="string">the</span> <span class="string">same</span> <span class="string">certbot</span> <span class="string">--manual</span> <span class="string">command</span> <span class="string">you</span> <span class="string">used</span> <span class="string">to</span> <span class="string">create</span> <span class="string">the</span> <span class="string">certificate</span> <span class="string">originally.</span> <span class="string">As</span> <span class="string">this</span> <span class="string">will</span> <span class="string">require</span> <span class="string">you</span> <span class="string">to</span> <span class="string">copy</span> <span class="string">and</span> <span class="string">paste</span> <span class="string">new</span> <span class="string">HTTP</span> <span class="string">files</span> <span class="string">or</span> <span class="string">DNS</span> <span class="string">TXT</span> <span class="string">records,</span> <span class="string">the</span> <span class="string">command</span> <span class="string">cannot</span> <span class="string">be</span> <span class="string">automated</span> <span class="string">with</span> <span class="string">a</span> <span class="string">cron</span> <span class="string">job.</span></span><br></pre></td></tr></table></figure></div><p>其它方式颁发的会自动续期：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">The</span> <span class="string">Certbot</span> <span class="string">packages</span> <span class="string">on</span> <span class="string">your</span> <span class="string">system</span> <span class="string">come</span> <span class="string">with</span> <span class="string">a</span> <span class="string">cron</span> <span class="string">job</span> <span class="string">or</span> <span class="string">systemd</span> <span class="string">timer</span> <span class="string">that</span> <span class="string">will</span> <span class="string">renew</span> <span class="string">your</span> <span class="string">certificates</span> <span class="string">automatically</span> <span class="string">before</span> <span class="string">they</span> <span class="string">expire.</span> <span class="string">You</span> <span class="string">will</span> <span class="string">not</span> <span class="string">need</span> <span class="string">to</span> <span class="string">run</span> <span class="string">Certbot</span> <span class="string">again,</span> <span class="string">unless</span> <span class="string">you</span> <span class="string">change</span> <span class="string">your</span> <span class="string">configuration.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">You can test automatic renewal for your certificates by running this command:</span></span><br></pre></td></tr></table></figure></div><p>续期方案：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 手动测试，查看证书过期时间</span></span><br><span class="line"><span class="string">$</span> <span class="string">certbot</span> <span class="string">renew</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略证书过期时间，直接重置证书时间</span></span><br><span class="line"><span class="string">$</span> <span class="string">certbot</span> <span class="string">renew</span> <span class="string">--force-renewal</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定时任务</span></span><br><span class="line"><span class="string">$</span> <span class="string">crontab</span> <span class="string">-e</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑内容</span></span><br><span class="line"><span class="string">$</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="string">*</span> <span class="string">*</span> <span class="string">/usr/bin/certbot</span> <span class="string">renew</span> <span class="string">--force-renewal</span></span><br></pre></td></tr></table></figure></div><p>定时每天检查，如果要过期则自动延期，也可参考官方的续期方案</p><p><a href="https://certbot.eff.org/docs/using.html?highlight=nginx#renewing-certificates" class="LinkCard" target="_blank" rel="noopener">Renewing certificates</a><br><a href="https://certbot.eff.org/docs/using.html?highlight=nginx#automated-renewals" class="LinkCard" target="_blank" rel="noopener">Automated Renewals</a></p><h4 id="测试自动续期"><a href="#测试自动续期" class="headerlink" title="测试自动续期"></a>测试自动续期</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">sudo</span> <span class="string">certbot</span> <span class="string">renew</span> <span class="string">--dry-run</span></span><br></pre></td></tr></table></figure></div><p>如果该命令完成且没有错误，那么证书将在后台自动续订。</p><h3 id="查看证书"><a href="#查看证书" class="headerlink" title="查看证书"></a>查看证书</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">certbot</span> <span class="string">certificates</span></span><br></pre></td></tr></table></figure></div><h3 id="使用-HTTPS-证书"><a href="#使用-HTTPS-证书" class="headerlink" title="使用 HTTPS 证书"></a>使用 HTTPS 证书</h3><p>以 Nginx 为例：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server</span> <span class="string">&#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">listen</span> <span class="number">80</span><span class="string">;</span></span><br><span class="line">    <span class="string">listen</span> <span class="number">443</span> <span class="string">ssl;</span></span><br><span class="line">    <span class="string">server_name</span> <span class="string">you.domain.com;</span></span><br><span class="line">    <span class="string">ssl_certificate</span> <span class="string">/etc/letsencrypt/live/you.domain.com/fullchain.pem;</span></span><br><span class="line">    <span class="string">ssl_certificate_key</span> <span class="string">/etc/letsencrypt/live/you.domain.com/privkey.pem;</span> </span><br><span class="line"></span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></div><p>注意：一定要开放 <code>443</code> 端口，在阿里云服务器 - ECS 安全组，添加访问规则，如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">授权策略</span>      <span class="string">优先级</span>        <span class="string">协议类型</span>         <span class="string">端口范围</span>             <span class="string">授权对象</span></span><br><span class="line"></span><br><span class="line"> <span class="string">允许</span>        <span class="number">1</span>   <span class="string">自定义</span> <span class="string">TCP</span>  <span class="string">目的:</span> <span class="number">443</span><span class="string">/443</span>       <span class="string">源:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">/0</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSL </tag>
            
            <tag> Certbot </tag>
            
            <tag> Let&#39;s Encrypt </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Kafka 批量消费</title>
      <link href="/posts/2865062686.html"/>
      <url>/posts/2865062686.html</url>
      
        <content type="html"><![CDATA[<p>Kafka 作为一个分布式发布订阅的消息系统，是目前最流行的消息队列之一，批量消费在现实业务场景中可以提高 kafka 消费吞吐量。Spring 框架可以使用 <code>@KafkaListener</code> 注解来实现消费端批量消费的功能。</p><a id="more"></a><p><a href="https://docs.spring.io/spring-kafka/docs/2.3.14.RELEASE/reference/html/#kafka-listener-annotation" class="LinkCard" target="_blank" rel="noopener">Spring for Apache Kafka</a></p><div class="note info"><p>以下 Demo 基于 SpringBoot 2.1.1，spring-kafka-2.3</p></div><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.kafka&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-kafka&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;2.3.0.RELEASE&lt;/version&gt;</span><br><span class="line">&lt; /dependency&gt;</span><br></pre></td></tr></table></figure></div><h3 id="配置-yml-文件"><a href="#配置-yml-文件" class="headerlink" title="配置 yml 文件"></a>配置 yml 文件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YAML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">kafka:</span></span><br><span class="line">    <span class="attr">bootstrap-servers:</span> <span class="number">192.168</span><span class="number">.10</span><span class="number">.1</span><span class="string">:9093,192.168.10.2:9093</span></span><br><span class="line">    <span class="attr">consumer:</span></span><br><span class="line">      <span class="attr">enable-auto-commit:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">max-poll-records:</span> <span class="number">500</span></span><br><span class="line">      <span class="attr">auto-offset-reset:</span> <span class="string">latest</span></span><br><span class="line">      <span class="attr">group-id:</span> <span class="string">group-dev</span></span><br><span class="line">    <span class="attr">listener:</span></span><br><span class="line">      <span class="attr">concurrency:</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kafka:</span></span><br><span class="line">  <span class="attr">leaface:</span></span><br><span class="line">    <span class="attr">topic:</span> <span class="string">test-topic</span></span><br></pre></td></tr></table></figure></div><h3 id="Kafka-配置类"><a href="#Kafka-配置类" class="headerlink" title="Kafka 配置类"></a>Kafka 配置类</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.leaface.test.kafka.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.consumer.ConsumerConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.clients.producer.ProducerConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.kafka.common.serialization.StringDeserializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.annotation.EnableKafka;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.config.KafkaListenerContainerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.core.ConsumerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.core.DefaultKafkaConsumerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.listener.ConcurrentMessageListenerContainer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.listener.ContainerProperties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * kafka 消费端配置</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> leaface</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableKafka</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaConsumerConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 以逗号分隔的主机：端口对列表，用于建立与Kafka群集的初始连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.kafka.bootstrap-servers&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String servers;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一次调用poll()操作时返回的最大记录数，默认值为500</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.kafka.consumer.max-poll-records&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> maxPollRecords;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听器容器中运行的线程数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.kafka.listener.concurrency&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> concurrency;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Consumer.poll() 超时时间, 默认5000</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="comment">//    @Value("$&#123;spring.kafka.listener.poll-timeout&#125;")</span></span><br><span class="line"><span class="comment">//    private int pollTimeout;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果为true，则消费者的偏移量将在后台定期提交，默认值为true</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.kafka.consumer.enable-auto-commit&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> enableAutoCommit;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 心跳与消费者协调员之间的预期时间（以毫秒为单位），默认值为3000</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="comment">//    @Value("$&#123;spring.kafka.consumer.auto-commit-interval&#125;")</span></span><br><span class="line"><span class="comment">//    private String autoCommitInterval;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当Kafka中没有初始偏移量或者服务器上不再存在当前偏移量时该怎么办，默认值为latest，表示自动将偏移重置为最新的偏移量 可选的值为latest, earliest, none, exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.kafka.consumer.auto-offset-reset&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String autoOffsetReset;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于标识此使用者所属的使用者组的唯一字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.kafka.consumer.group-id&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String groupId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消费者批量工厂</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> KafkaListenerContainerFactory&lt;ConcurrentMessageListenerContainer&lt;Integer, String&gt;&gt; kafkaListenerContainerFactory() &#123;</span><br><span class="line">        ConcurrentKafkaListenerContainerFactory&lt;Integer, String&gt; factory = <span class="keyword">new</span> ConcurrentKafkaListenerContainerFactory&lt;&gt;();</span><br><span class="line">        factory.setConsumerFactory(consumerFactory());</span><br><span class="line">        <span class="comment">// 并发创建的消费者数量</span></span><br><span class="line">        factory.setConcurrency(concurrency);</span><br><span class="line">        <span class="comment">// 设置为批量消费，每个批次数量在Kafka配置参数中设置 ConsumerConfig.MAX_POLL_RECORDS_CONFIG</span></span><br><span class="line">        factory.setBatchListener(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// factory.getContainerProperties().setPollTimeout(pollTimeout);</span></span><br><span class="line">        <span class="comment">// 手动提交ackMode</span></span><br><span class="line">        factory.getContainerProperties().setAckMode(ContainerProperties.AckMode.MANUAL_IMMEDIATE);</span><br><span class="line">        <span class="comment">// factory.getContainerProperties().setSyncCommits(false);</span></span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ConsumerFactory&lt;Integer, String&gt; <span class="title">consumerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> DefaultKafkaConsumerFactory&lt;&gt;(consumerConfigs());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消费者配置信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title">consumerConfigs</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String, Object&gt; props = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        props.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, servers);</span><br><span class="line">        props.put(ConsumerConfig.MAX_POLL_RECORDS_CONFIG, maxPollRecords);</span><br><span class="line">        props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, StringDeserializer<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, StringDeserializer<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        props.put(ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG, enableAutoCommit);</span><br><span class="line">        props.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, autoOffsetReset);</span><br><span class="line">        props.put(ConsumerConfig.GROUP_ID_CONFIG, groupId);</span><br><span class="line">        <span class="comment">// props.put(ConsumerConfig.AUTO_COMMIT_INTERVAL_MS_CONFIG, autoCommitInterval);</span></span><br><span class="line">        <span class="comment">// props.put(ConsumerConfig.FETCH_MAX_BYTES_CONFIG, 10485760);</span></span><br><span class="line">        <span class="comment">// props.put(ConsumerConfig.RECEIVE_BUFFER_CONFIG, 10485760);</span></span><br><span class="line">        <span class="keyword">return</span> props;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="Consumer-端"><a href="#Consumer-端" class="headerlink" title="Consumer 端"></a>Consumer 端</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 单条消费</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// @KafkaListener(topics = "#&#123;'$&#123;kafka.leaface.topic&#125;'.split(',')&#125;")</span></span><br><span class="line"><span class="comment">// @KafkaListener(topics = "#&#123;'$&#123;kafka.leaface.topic&#125;'&#125;", groupId = "id")</span></span><br><span class="line"><span class="comment">// @KafkaListener(topicPartitions = &#123;@TopicPartition(topic = "#&#123;'$&#123;kafka.leaface.topic&#125;'&#125;", partitionOffsets = @PartitionOffset(partition = "0", initialOffset = "0", relativeToCurrent = "true"))&#125;)</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(@Payload ConsumerRecord&lt;String, String&gt; record)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="comment">//  processMsg(record);</span></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.error(<span class="string">"process msg error！"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量消费</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@KafkaListener</span>(topics = <span class="string">"#&#123;'$&#123;kafka.leaface.topic&#125;'&#125;"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(@Payload List&lt;ConsumerRecord&lt;String, String&gt;&gt; recordList, Acknowledgment ack)</span> </span>&#123;</span><br><span class="line">    processMsg(recordList, ack);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">processMsg</span><span class="params">(List&lt;ConsumerRecord&lt;String, String&gt;&gt; records, Acknowledgment ack)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (ConsumerRecord&lt;String, String&gt; record : records) &#123;</span><br><span class="line">           <span class="comment">// do something</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        log.error(<span class="string">"process msg error!"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 手动提交(默认同步提交)</span></span><br><span class="line">        ack.acknowledge();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kafka </tag>
            
            <tag> Spring Boot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Retry 重试机制</title>
      <link href="/posts/2355788036.html"/>
      <url>/posts/2355788036.html</url>
      
        <content type="html"><![CDATA[<p>在调用外部服务进行查询时，常常因为网络抖动、服务方限流等不可预知的一些因素造成查询失败。为了克服这些问题，引入了重试机制 Spring Retry.</p><a id="more"></a><div class="note info"><p>以下 Demo 基于 SpringBoot 2.1.1</p></div><h3 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- https:<span class="comment">//mvnrepository.com/artifact/org.springframework.retry/spring-retry --&gt;</span></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.retry&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-retry&lt;/artifactId&gt;</span><br><span class="line">&lt; /dependency&gt;</span><br></pre></td></tr></table></figure></div><p>Spring Retry 的 jar 包 pom 文件中已依赖 aspectj，这里无需引入。</p><h3 id="添加-EnableRetry-注解"><a href="#添加-EnableRetry-注解" class="headerlink" title="添加 @EnableRetry 注解"></a>添加 @EnableRetry 注解</h3><p>在主类上加上 <code>@EnableRetry</code> 注解，表示启用重试机制</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableRetry</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LeafaceApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(LeafaceApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="编写测试案例"><a href="#编写测试案例" class="headerlink" title="编写测试案例"></a>编写测试案例</h3><h4 id="Controller-层"><a href="#Controller-层" class="headerlink" title="Controller 层"></a>Controller 层</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestSpringRetryController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TestRetryService retryService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/retry"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(@RequestParam(required = <span class="keyword">false</span>)</span> Integer num) </span>&#123;</span><br><span class="line">        retryService.testRetry(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="service-层"><a href="#service-层" class="headerlink" title="service 层"></a>service 层</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestRetryService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Retryable</span>(value = Exception<span class="class">.<span class="keyword">class</span>, <span class="title">maxAttempts</span> </span>= <span class="number">3</span>, backoff = <span class="meta">@Backoff</span>(delay = <span class="number">3000</span>, multiplier = <span class="number">1.5</span>))</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRetry</span><span class="params">(Integer num)</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"testRetry() ===&gt;&gt;&gt; "</span>);</span><br><span class="line">        <span class="keyword">if</span> (num &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"num &lt; 0"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Recover</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testRecover</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        log.info(<span class="string">"testRecover() ===&gt;&gt;&gt; "</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="执行测试"><a href="#执行测试" class="headerlink" title="执行测试"></a>执行测试</h4><p>请求 <code>http://localhost:8080/test/retry?num=-1</code>，控制台打印：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2021</span>-<span class="number">09</span>-<span class="number">11</span> <span class="number">17</span>:<span class="number">45</span>:<span class="number">11.877</span>  INFO --- [nio-<span class="number">8080</span>-exec-<span class="number">1</span>] c.s.g.m.service.TestRetryService   : testRetry() ===&gt;&gt;&gt; </span><br><span class="line"><span class="number">2021</span>-<span class="number">09</span>-<span class="number">11</span> <span class="number">17</span>:<span class="number">45</span>:<span class="number">14.884</span>  INFO --- [nio-<span class="number">8080</span>-exec-<span class="number">1</span>] c.s.g.m.service.TestRetryService   : testRetry() ===&gt;&gt;&gt; </span><br><span class="line"><span class="number">2021</span>-<span class="number">09</span>-<span class="number">11</span> <span class="number">17</span>:<span class="number">45</span>:<span class="number">19.389</span>  INFO --- [nio-<span class="number">8080</span>-exec-<span class="number">1</span>] c.s.g.m.service.TestRetryService   : testRetry() ===&gt;&gt;&gt; </span><br><span class="line"><span class="number">2021</span>-<span class="number">09</span>-<span class="number">11</span> <span class="number">17</span>:<span class="number">45</span>:<span class="number">19.390</span>  INFO --- [nio-<span class="number">8080</span>-exec-<span class="number">1</span>] c.s.g.m.service.TestRetryService   : testRecover() ===&gt;&gt;&gt;</span><br></pre></td></tr></table></figure></div><div class="note info"><p>@Retryable 注解中的参数说明：<br>value：抛出指定异常才会重试<br>maxAttempts：最大重试次数，默认为3（包括第一次调用）<br>include：默认为空，当 exclude 也为空时，所有异常都重试<br>exclude：指定不处理的异常，默认空，当 include 也为空时，所有异常都重试<br>backoff：重试等待策略，默认使用 @Backoff</p></div><div class="note info"><p>@Backoff 注解中的参数说明：<br>value 默认为 1000L<br>delay 表示重试的延迟时间，默认为 0L<br>multiplier 表示延迟倍数（上一次延时时间是这一次的倍数），默认为 0.0D</p></div>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring Boot </tag>
            
            <tag> Spring Retry </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 显示隐藏系统文件</title>
      <link href="/posts/3025236955.html"/>
      <url>/posts/3025236955.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/40/apple.jpg" alt="mac"></p><a id="more"></a><h3 id="显示"><a href="#显示" class="headerlink" title="显示"></a>显示</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool true</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KillAll Finder</span><br></pre></td></tr></table></figure></div><h3 id="隐藏"><a href="#隐藏" class="headerlink" title="隐藏"></a>隐藏</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool false</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KillAll Finder</span><br></pre></td></tr></table></figure></div><p>待续…</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PJAX加速站点访问</title>
      <link href="/posts/2913572160.html"/>
      <url>/posts/2913572160.html</url>
      
        <content type="html"><![CDATA[<p>说起 PJAX，已是由来已久，在很多网站上经常会遇到。它通过 PushState + Ajax 技术，实现 HTML 页面局部刷新等功能，提供了一种极速的浏览体验。避免每次载入过多的重复资源，耗费额外加载时间，提升了网站的整体访问速度。最直观的体验就是音乐能全局播放了！</p><a id="more"></a><blockquote><p>Tips：本站集成的 PJAX 功能会随着 <a href="https://github.com/leafjame/hexo-theme-next5-leaf" target="_blank" rel="noopener">v2.2</a> 版本一起发布！</p></blockquote><p>在 Github 上，PJAX 用的最多的主要是这两版：<a href="https://github.com/defunkt/jquery-pjax" target="_blank" rel="noopener">defunkt/jquery-pjax</a> 和 <a href="https://github.com/MoOx/pjax" target="_blank" rel="noopener">MoOx/pjax</a></p><h3 id="defunkt-jquery-pjax"><a href="#defunkt-jquery-pjax" class="headerlink" title="defunkt/jquery-pjax"></a>defunkt/jquery-pjax</h3><p>依赖 JQuery，最近更新停留在三年前，文档介绍有服务端配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="RUBY"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Server-side configuration</span></span><br><span class="line"><span class="comment"># Ideally, your server should detect pjax requests by looking at the special X-PJAX HTTP header, and render only the HTML meant to replace the contents of the container element (#pjax-container in our example) without the rest of the page layout. Here is an example of how this might be done in Ruby on Rails:</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span></span></span><br><span class="line">  <span class="keyword">if</span> request.headers[<span class="string">'X-PJAX'</span>]</span><br><span class="line">    render <span class="symbol">:layout</span> =&gt; <span class="literal">false</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure></div><p>不过按操作配置完后，在我的网站效果不是很好，网上也没找到解决办法，没提到服务端配置啥的，多次尝试无果后，我也就放弃了。感兴趣的朋友可以试一下，这里贴上几篇参考文章</p><p><a href="https://learnku.com/articles/3330/pjax-site-acceleration-wing" class="LinkCard" target="_blank" rel="noopener">PJAX站点加速之翼</a></p><p><a href="https://www.fanhaobai.com/2017/07/pjax.html" class="LinkCard" target="_blank" rel="noopener">PJAX原理和使用</a></p><p><a href="https://www.ihewro.com/archives/354/comment-page-3" class="LinkCard" target="_blank" rel="noopener">typecho实现pjax</a></p><p><a href="https://lmih.cn/pjax_jiaocheng.html" class="LinkCard" target="_blank" rel="noopener">整合PJAX网页无刷新，支持评论和搜索…</a></p><h3 id="MoOx-pjax-（重点介绍）"><a href="#MoOx-pjax-（重点介绍）" class="headerlink" title="MoOx/pjax （重点介绍）"></a>MoOx/pjax （重点介绍）</h3><p>去除了 JQuery 依赖，其它功能和上一个类似。网上教程不是很多，<a href="https://sunhang.top/2019/12/20/pjax/" target="_blank" rel="noopener">这篇</a> 倒是可以参考下。高版本 <a href="https://theme-next.org/docs/third-party-services/external-libraries.html" target="_blank" rel="noopener">NEXT</a> 集成的 PJAX 也是这个。</p><div class="note danger"><p>本站 HEXO：v3.9，NEXT：v5.1.4，升级可不是件容易的事，想想还是自己折腾吧！</p></div><ol><li>首先，参照官方，在主题 _config.yml 文件中配置</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/MoOx/pjax</span></span><br><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><ol start="2"><li>在 next/layout/_custom/ 新建 pjax.swig，内容如下</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pjax_loading"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"pjax_loader"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://github.com/MoOx/pjax --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/pjax@0.2.8/pjax.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> pjax = <span class="keyword">new</span> Pjax(&#123;</span></span><br><span class="line"><span class="actionscript">      elements: <span class="string">'a'</span>,</span></span><br><span class="line">      selectors: [</span><br><span class="line"><span class="actionscript">        <span class="string">'title'</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">'.content-wrap'</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">'.sidebar-inner'</span></span></span><br><span class="line">      ],</span><br><span class="line"><span class="actionscript">      analytics: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">      cacheBust: <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">      debug: <span class="literal">false</span>,</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).on(<span class="string">'pjax:send'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        loadingBefore(); <span class="comment">// 加载动画</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="javascript">    $(<span class="built_in">document</span>).on(<span class="string">'pjax:success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">        loadingAfter(); <span class="comment">// 加载动画</span></span></span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">loadingBefore</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#main"</span>).fadeOut(<span class="number">100</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".pjax_loading"</span>).css(<span class="string">"display"</span>, <span class="string">"block"</span>);</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">loadingAfter</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> styl = <span class="string">'&#123;&#123;theme.pjax.style&#125;&#125;'</span>;</span></span><br><span class="line"><span class="javascript">        $(<span class="string">"#main"</span>).fadeIn(<span class="number">100</span>);</span></span><br><span class="line"><span class="javascript">        $(<span class="string">".pjax_loading"</span>).css(<span class="string">"display"</span>, <span class="string">"none"</span>);</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><ol start="3"><li>在 next/layout/_custom/custom.swig 或者 next/layout/_layout.swig 中引入 pjax.swig</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.pjax.enable %&#125;</span><br><span class="line">   &#123;% include &apos;pjax.swig&apos; %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><p>这样配置后，网站已经初步具备 PJAX 功能了，那么接下来，就是要处理一大堆兼容的事情！</p><h3 id="灵感来源"><a href="#灵感来源" class="headerlink" title="灵感来源"></a>灵感来源</h3><p>刚开始想着按照 NEXT 高版本 PJAX 的代码来就行了，可后来发现版本间变动太大，要找起这个功能来还真不容易。后来发现也有 NEXT 5 版的主题整合了 PJAX 功能，如 <a href="https://github.com/DIYgod/hexo-theme-sagiri/commit/df8cc74ea2e134af0606e20b6470ae6e6fa53afc" target="_blank" rel="noopener">Sagiri pjax</a>、<a href="https://ilxx.gitee.io/hexo_yi_pjax.html" target="_blank" rel="noopener">Leesin’s Blog</a> 给了我一定启发。前一位将部分依赖整成 NodeJS 的 node_modules 进行引用</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">require(&apos;./utils&apos;);</span><br><span class="line">require(&apos;./motion&apos;);</span><br><span class="line">require(&apos;./affix&apos;);</span><br><span class="line">require(&apos;./pisces&apos;)();</span><br><span class="line">require(&apos;./scrollspy&apos;);</span><br><span class="line">require(&apos;./post-details&apos;)();</span><br><span class="line">require(&apos;./bootstrap&apos;);</span><br><span class="line">require(&apos;./evanyou&apos;);</span><br><span class="line">require(&apos;./leancloud&apos;)();</span><br><span class="line">require(&apos;./share&apos;)();</span><br><span class="line">require(&apos;./scroll&apos;);</span><br><span class="line">require(&apos;./since&apos;);</span><br><span class="line">require(&apos;./title&apos;);</span><br><span class="line">require(&apos;./type&apos;);</span><br><span class="line">require(&apos;./kanban&apos;);</span><br><span class="line">require(&apos;./mix&apos;);</span><br><span class="line">require(&apos;./clipboard&apos;);</span><br><span class="line">require(&apos;./pjax&apos;);</span><br><span class="line">require(&apos;./online&apos;);</span><br><span class="line">require(&apos;./search&apos;);</span><br></pre></td></tr></table></figure></div><p>不会 NodeJS 还真看不明白，后一位则将 JS 代码重新复制了一份，耦合性太高了，虽然后期改用 RequireJS。不过吧，文章整体逻辑太乱，看着真的很懵，还是自己想办法吧！</p><h3 id="柳暗花明"><a href="#柳暗花明" class="headerlink" title="柳暗花明"></a>柳暗花明</h3><p>一篇 NEXT 作者的 <a href="https://notes.iissnan.com/2015/something-about-next/" target="_blank" rel="noopener">文章</a> 引起了我的注意，看来很多主题都是类 EJS，代码相似度都挺高。多次调试代码后，终于对其渲染逻辑有了一定了解，一周多的折腾总算告一段落，再整都 HEXO 底层了。(⊙﹏⊙)b</p><p>进入网站首页，会加载很多 JS/CSS 等等，其它页面无需再次加载，直接引用即可，这就是 PJAX 要做的事情了。然而 NEXT 很多 JS 都是使用 <code>$(document).ready(function(){...})</code> 这种写法（DOM 树加载完执行），所以我们需要将这些方法提取出来，使其在别的地方能被调用到，以 next/source/js/src/schemes/pisces.js 这个 JS 为例</p><p>修改前：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> sidebarInner = $(<span class="string">'.sidebar-inner'</span>);</span><br><span class="line"></span><br><span class="line">  initAffix();</span><br><span class="line">  resizeListener();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">initAffix</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> headerOffset = getHeaderOffset(),</span><br><span class="line">        footerOffset = getFooterOffset(),</span><br><span class="line">        sidebarHeight = $(<span class="string">'#sidebar'</span>).height() + NexT.utils.getSidebarb2tHeight(),</span><br><span class="line">        contentHeight = $(<span class="string">'#content'</span>).height();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Not affix if sidebar taller then content (to prevent bottom jumping).</span></span><br><span class="line">    <span class="keyword">if</span> (headerOffset + sidebarHeight &lt; contentHeight) &#123;</span><br><span class="line">      sidebarInner.affix(&#123;</span><br><span class="line">        offset: &#123;</span><br><span class="line">          top: headerOffset - CONFIG.sidebar.offset,</span><br><span class="line">          bottom: footerOffset</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    setSidebarMarginTop(headerOffset).css(&#123; <span class="string">'margin-left'</span>: <span class="string">'initial'</span> &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">resizeListener</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> mql = <span class="built_in">window</span>.matchMedia(<span class="string">'(min-width: 991px)'</span>);</span><br><span class="line">    mql.addListener(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(e.matches)&#123;</span><br><span class="line">        recalculateAffixPosition();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getHeaderOffset</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $(<span class="string">'.header-inner'</span>).height() + CONFIG.sidebar.offset;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">getFooterOffset</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> footerInner = $(<span class="string">'.footer-inner'</span>),</span><br><span class="line">        footerMargin = footerInner.outerHeight(<span class="literal">true</span>) - footerInner.outerHeight(),</span><br><span class="line">        footerOffset = footerInner.outerHeight(<span class="literal">true</span>) + footerMargin;</span><br><span class="line">    <span class="keyword">return</span> footerOffset;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">setSidebarMarginTop</span> (<span class="params">headerOffset</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $(<span class="string">'#sidebar'</span>).css(&#123; <span class="string">'margin-top'</span>: headerOffset &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">recalculateAffixPosition</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="built_in">window</span>).off(<span class="string">'.affix'</span>);</span><br><span class="line">    sidebarInner.removeData(<span class="string">'bs.affix'</span>).removeClass(<span class="string">'affix affix-top affix-bottom'</span>);</span><br><span class="line">    initAffix();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>修改后：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  piscesJs();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">piscesJs</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  initAffix();</span><br><span class="line">  resizeListener();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initAffix</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sidebarInner = $(<span class="string">'.sidebar-inner'</span>);</span><br><span class="line">  <span class="keyword">var</span> headerOffset = getHeaderOffset(),</span><br><span class="line">      footerOffset = getFooterOffset(),</span><br><span class="line">      sidebarHeight = $(<span class="string">'#sidebar'</span>).height() + NexT.utils.getSidebarb2tHeight(),</span><br><span class="line">      contentHeight = $(<span class="string">'#content'</span>).height();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Not affix if sidebar taller then content (to prevent bottom jumping).</span></span><br><span class="line">  <span class="keyword">if</span> (headerOffset + sidebarHeight &lt; contentHeight) &#123;</span><br><span class="line">    sidebarInner.affix(&#123;</span><br><span class="line">      offset: &#123;</span><br><span class="line">        top: headerOffset - CONFIG.sidebar.offset,</span><br><span class="line">        bottom: footerOffset</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  setSidebarMarginTop(headerOffset).css(&#123; <span class="string">'margin-left'</span>: <span class="string">'initial'</span> &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">resizeListener</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> mql = <span class="built_in">window</span>.matchMedia(<span class="string">'(min-width: 991px)'</span>);</span><br><span class="line">  mql.addListener(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(e.matches)&#123;</span><br><span class="line">      recalculateAffixPosition();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getHeaderOffset</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> $(<span class="string">'.header-inner'</span>).height() + CONFIG.sidebar.offset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFooterOffset</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> footerInner = $(<span class="string">'.footer-inner'</span>),</span><br><span class="line">      footerMargin = footerInner.outerHeight(<span class="literal">true</span>) - footerInner.outerHeight(),</span><br><span class="line">      footerOffset = footerInner.outerHeight(<span class="literal">true</span>) + footerMargin;</span><br><span class="line">  <span class="keyword">return</span> footerOffset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setSidebarMarginTop</span> (<span class="params">headerOffset</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> $(<span class="string">'#sidebar'</span>).css(&#123; <span class="string">'margin-top'</span>: headerOffset &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">recalculateAffixPosition</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  $(<span class="built_in">window</span>).off(<span class="string">'.affix'</span>);</span><br><span class="line">  <span class="keyword">var</span> sidebarInner = $(<span class="string">'.sidebar-inner'</span>);</span><br><span class="line">  sidebarInner.removeData(<span class="string">'bs.affix'</span>).removeClass(<span class="string">'affix affix-top affix-bottom'</span>);</span><br><span class="line">  initAffix();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>提取出 piscesJs() 这个能外部调用的方法。其它需要修改的如 bootstrap.js、motion.js、post-details.js、scroll-cookie.js、utils.js 等，做法都类似，这里就不一一列举了。</p><div class="note info"><p>不明白？浏览器审查元素参考一下</p></div><p>在 pjax.swig 中引用抽取出来的方法，重新渲染</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">'pjax:send'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     loadingBefore();</span><br><span class="line">     motionJs();</span><br><span class="line">  <span class="comment">// piscesJs();</span></span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line"> $(<span class="built_in">document</span>).on(<span class="string">'pjax:success'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">     bootstrapJs();</span><br><span class="line">     postDetailsJs();</span><br><span class="line">     initAffix(<span class="string">'473'</span>, <span class="string">'164'</span>); <span class="comment">// sidebar(scrollspy)</span></span><br><span class="line">     initCarousel();</span><br><span class="line">     initReadMore();</span><br><span class="line">     initIndexPostVisitor();</span><br><span class="line">     initValineAdmin();</span><br><span class="line">     linkCardFunc();</span><br><span class="line">     macPanelMan();</span><br><span class="line">     loadingAfter();</span><br><span class="line">     socialShare(<span class="string">'.social-share'</span>);</span><br><span class="line">     initRating();</span><br><span class="line">     initCodeCopy();</span><br><span class="line">     initBusuanzi();</span><br><span class="line"> <span class="comment">//  initSidebarDimension();</span></span><br><span class="line"> <span class="comment">//  baiduAnalytics();</span></span><br><span class="line"> <span class="comment">//  baiduPush();</span></span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure></div><p>这里的 initBusuanzi()，直接是又请求了一遍</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">initBusuanzi</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.getScript(<span class="string">"https://busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>后期使用 <a href="https://www.revolvermaps.com/?target=gallery" target="_blank" rel="noopener">revolvermaps</a> 替换不蒜子，参考枫糖的 <a href="https://blog.maplesugar.space/hexo/next-theme-add-revolvermaps-statistics/" target="_blank" rel="noopener">这篇文章</a></p><h3 id="一些问题"><a href="#一些问题" class="headerlink" title="一些问题"></a>一些问题</h3><h4 id="“…”-lazyload-is-not-a-function"><a href="#“…”-lazyload-is-not-a-function" class="headerlink" title="$(“…”).lazyload is not a function"></a>$(“…”).lazyload is not a function</h4><p>此错误一般是重复引入 JQuery 引起的冲突，仔细核查下引入 JQuery 的地方</p><h4 id="FancyBox-2-Ajax-跨域"><a href="#FancyBox-2-Ajax-跨域" class="headerlink" title="FancyBox 2 Ajax 跨域"></a>FancyBox 2 Ajax 跨域</h4><p>NEXT 5 集成的图片灯箱效果是 <a href="http://fancyapps.com/fancybox/" target="_blank" rel="noopener">FancyBox 2</a>，文档中也有 Ajax 渲染的方式</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".open_ajax"</span>).fancybox(&#123;<span class="attr">type</span>: <span class="string">'ajax'</span>&#125;);</span><br></pre></td></tr></table></figure></div><p>不过在 PJAX 后总提示跨域，首次点击图片预览时有 Bug，尝试了多种方法仍是无果，官方有说</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Note, ajax requests are subject to the same origin policy. If fancyBox will not be able to get content type, it will try to guess based on 'href' and will quit silently if would not succeed (this is different from previous versions where 'ajax' was used as default type or an error message was displayed).</span><br></pre></td></tr></table></figure></div><p>最后没办法，升级到 <a href="https://fancyapps.com/fancybox/3/" target="_blank" rel="noopener">FancyBox 3</a> 问题解决。utils.js 中的 <code>wrapImageWithFancyBox</code> 方法需要修改，用 <code>data-fancybox</code> 属性来渲染。下边的对比，可以看出 FancyBox 版本间变动还是挺大的，新版加了很多个性化功能。</p><p>FancyBox 2 预览：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/39/1.jpg" alt="FancyBox 2"></p><p>FancyBox 3 预览：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/39/2.jpg" alt="FancyBox 3"></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>集成 PJAX 后，网站访问速度有了很大提升，请求数也少了很多，虽然还附带着这么多花里胡哨的东西，Who Care 呢。托管在 Github 上，没有个人服务器，这效果也算可以了。对于其它类 EJS 主题，这里只是抛砖引玉，大家可作个参考。</p><p>其它优化相关的文章：</p><p><a href="https://www.liaofuzhan.com/posts/1599400735.html" class="LinkCard">hexo 优化与加速</a></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 加速 </tag>
            
            <tag> Pjax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cloudflare几款实用的APP</title>
      <link href="/posts/1344151861.html"/>
      <url>/posts/1344151861.html</url>
      
        <content type="html"><![CDATA[<p>本站使用 Cloudflare 提供的 DNS 和 CDN 服务，Cloudflare 是美帝跨国企业，实力强悍，针对个人网站推出了一定的 <a href="https://www.cloudflare.com/zh-cn/plans/" target="_blank" rel="noopener">免费计划</a>，注册完账号，添加受保护站点后即可使用，还提供了十分友好的统计和分析界面。文档很详细，使用起来基本没啥问题，接下来主要介绍 Cloudflare 几款实用的应用。</p><a id="more"></a><p>Cloudflare App 是指可以在 Cloudflare 托管的网站中安装的软件，详细文档可参考 <a href="https://www.cloudflare.com/apps/developer/docs/getting-started" target="_blank" rel="noopener">这里</a>。点击下图红色箭头处 Apps 按钮</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/2/1.jpg" alt="3QdK9e.jpg"></p><p>下方将分类列出各式 APP，包括社交、性能监控等，可通过 Filter Apps 下拉框进行筛选，简单说下本站在用的几个</p><h3 id="Flashcard"><a href="#Flashcard" class="headerlink" title="Flashcard"></a>Flashcard</h3><p>在网站下方显示一些自定义的信息，如网站更新、重要通知。进入这个 APP 的详情页面，点击右上方 Preview on your site 按钮</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/2/2.jpg" alt="3QsStx.jpg"></p><p>左侧设置完毕后，可点击右侧的 Go 或者 Preview in a separate window 进行效果预览，Message 栏支持 MarkDown 语法，左上角 Edit this app on All pages 栏，还可以设置 APP 可出现的页面，点击左下角保存按钮后 APP 即安装完成。</p><h3 id="Tweet-This"><a href="#Tweet-This" class="headerlink" title="Tweet This"></a>Tweet This</h3><p>找到 Tweet This! 这个 APP，设置很简单，主要功能是复制网站文字时出现分享至 Twitter 的按钮</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/2/3.jpg" alt="3lgf4s.jpg"></p><h3 id="Welcome-Bar"><a href="#Welcome-Bar" class="headerlink" title="Welcome Bar"></a>Welcome Bar</h3><p>位于网站头部，条幅背景、文字、按钮颜色均可自定义，设置后效果如下红色箭头处所示</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/2/4.jpg" alt="3lRgYj.jpg"></p><p>其它的 APP 比如分享、在线聊天，效果还是不错的，喜欢的朋友可以尝试一下。</p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>被遗忘的SQL</title>
      <link href="/posts/3973006348.html"/>
      <url>/posts/3973006348.html</url>
      
        <content type="html"><![CDATA[<p>公司平台有个系统公告模块，展示的是管理员发布的通知和公告，数据库有公告和公告阅读记录这两张表，后者存有公告 ID 和用户 ID。现在前端需要两个接口：1、当前登录用户未读公告；2、当前登录用户下所有公告，并返回已读、未读标识。需求很简单，在此记录一下。</p><a id="more"></a><h3 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h3><p>两表结构分别如下</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`sys_notice`</span> (</span><br><span class="line">  <span class="string">`notice_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'公告ID'</span>,</span><br><span class="line">  <span class="string">`notice_title`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'公告标题'</span>,</span><br><span class="line">  <span class="string">`notice_type`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'公告类型（1通知 2公告）'</span>,</span><br><span class="line">  <span class="string">`notice_content`</span> longtext <span class="keyword">COMMENT</span> <span class="string">'通知公告内容'</span>,</span><br><span class="line">  <span class="string">`status`</span> <span class="built_in">char</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'公告状态（0正常 1关闭）'</span>,</span><br><span class="line">  <span class="string">`create_by`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'创建者'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`update_by`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'更新者'</span>,</span><br><span class="line">  <span class="string">`update_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  <span class="string">`remark`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'备注'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`notice_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">132</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 ROW_FORMAT=DYNAMIC <span class="keyword">COMMENT</span>=<span class="string">'通知公告表'</span>;</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`sys_notice_read`</span> (</span><br><span class="line">  <span class="string">`read_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'自增主键'</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户ID'</span>,</span><br><span class="line">  <span class="string">`notice_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'公告ID'</span>,</span><br><span class="line">  <span class="string">`create_by`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建者'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`update_by`</span> <span class="built_in">varchar</span>(<span class="number">64</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新人'</span>,</span><br><span class="line">  <span class="string">`update_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`read_id`</span>) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`read_id`</span> (<span class="string">`read_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">248</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure></div><p>刚开始想的很简单，两表数据都查出来，然后 for 循环遍历判断：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 公告列表</span></span><br><span class="line">List&lt;SysNoticeDto&gt; noticeList = noticeService.getAllNoticeList();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 公告阅读列表</span></span><br><span class="line">List&lt;SysNoticeRead&gt; noticeReadList = noticeReadService.getReadNoticeByUserId(userId);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(SysNoticeDto noticeDto : noticeList)&#123;</span><br><span class="line">  <span class="keyword">for</span>(SysNoticeRead noticeRead : noticeReadList)&#123;</span><br><span class="line"><span class="keyword">if</span>(noticeDto.getNoticeId.equals(noticeRead.getNoticeId))&#123;</span><br><span class="line">  noticeDto.setIsRead(<span class="keyword">true</span>); <span class="comment">// 已读</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  noticeDto.setIsRead(<span class="keyword">false</span>); <span class="comment">// 未读</span></span><br><span class="line">&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure></div><p>双重循环，代码不太优雅，遂捣鼓着用 SQL 来实现</p><h3 id="接口一"><a href="#接口一" class="headerlink" title="接口一"></a>接口一</h3><p>查询当前登录用户未读公告：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">notice_id,</span><br><span class="line">notice_title,</span><br><span class="line">notice_content,</span><br><span class="line">remark </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">sys_notice n </span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">NOT</span> <span class="keyword">EXISTS</span> ( <span class="keyword">SELECT</span> r.notice_id <span class="keyword">FROM</span> sys_notice_read r <span class="keyword">WHERE</span> r.notice_id = n.notice_id <span class="keyword">AND</span> r.user_id = <span class="comment">#&#123;userId&#125; )</span></span><br></pre></td></tr></table></figure></div><p>使用 NOT EXISTS，并在子查询中用 userId 过滤</p><h3 id="接口二"><a href="#接口二" class="headerlink" title="接口二"></a>接口二</h3><p>当前登录用户所有公告，并标记已读、未读的状态</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">n.notice_id,</span><br><span class="line">n.notice_title,</span><br><span class="line">n.notice_content,</span><br><span class="line">n.remark,</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> r.notice_id <span class="keyword">IS</span> <span class="literal">NULL</span> </span><br><span class="line"><span class="keyword">THEN</span> <span class="string">'false'</span> <span class="keyword">ELSE</span> <span class="string">'true'</span> </span><br><span class="line"><span class="keyword">END</span> <span class="keyword">AS</span> isRead </span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">sys_notice n</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> ( <span class="keyword">SELECT</span> notice_id <span class="keyword">FROM</span> sys_notice_read <span class="keyword">WHERE</span> user_id = <span class="comment">#&#123;userId&#125; ) r ON n.notice_id = r.notice_id</span></span><br></pre></td></tr></table></figure></div><p>先在子查询中用 userId 过滤已读公告，再用公告表 LEFT JOIN，然后 CASE WHEN 得到 isRead 标识字段。最终得到的记录数应该与公告表的记录数一致，写 SQL 时切记不要少了数据！</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>这样写完后 Controller 代码瞬间简洁多了，直接返回查询结果。再不写写 SQL，自己都快忘了，要求高的话还可以把这 SQL 优化一下，不过目前的版本先这样了。年前几天，公司同事陆续回家了，我买的是 1 月 20 号晚 9 点的票，北京西，20 小时，硬座。。这应该是猪年发的最后一篇文章了，提前祝大家鼠年快乐！！！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/3/1.gif" alt></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Happy New Year</title>
      <link href="/posts/712036056.html"/>
      <url>/posts/712036056.html</url>
      
        <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width:100%"><img class="index_img_class" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/4/1.jpg"></div></div><div class="group-picture-row"></div></div></div><a id="more"></a><p>公司年前办的跨年盛典和员工生日 Party，送了下图的鼠年吉祥物，董事长发表了讲话，慷慨激昂，不愧是成功人士，同时也是很棒的演说家！董事长很注重企业文化，每次讲话都挂在嘴边，上一次的新员工培训，我就坐在他的旁边，虽说是鸡汤占大部分，不过听者很受用，收获良多！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/4/2.jpg" alt="鼠年吉祥物"></p><p>公司的办公环境目前看来有点挤，主要是近期大幅扩员了，百十来号人挤在一个不大的会议室里，开始了跨年活动。首先是全体起立，<strong>唱！国！歌！</strong> 事发有点突然，一下没反应过来，后排的同事们声音参差不齐，场面有点尴尬。之前见过公司的销售人员开早会，也是唱国歌喊口号什么的，真当置身其中时，还是有点不适应。</p><p>公司还特地录制了司歌，男主唱听说是董事长儿子，一个非常帅气的小伙子，一脸的明星范，歌曲朗朗上口，调调还不错</p><iframe src="http://open.iqiyi.com/developer/player_js/coopPlayerIndex.html?vid=f207e75264ad3065d8fa301aff443215&tvId=37552774709&accessToken=2.f22860a2479ad60d8da7697274de9346&appKey=3955c3425820435e86d0f4cdfe56f5e7&appId=1368&height=100%&width=100%" frameborder="0" allowfullscreen width="100%" height="350"></iframe><p>元旦只放了一天假，还正好赶上二货的生日，腊八节的前一天。同事推荐了一个小程序上的蛋糕店，说是很好吃，不过可惜元旦当天不配送，所以只能在天猫上订了一个，速度也很快，四点下单，五点多就送到了。对于我这种不抽烟的人来说，没打火机咋点蜡烛啊，吸取了去年的教训，果断在家里备了好几个打火机，还有火柴，不然就尴尬了。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/4/3.jpg" alt></p><p>过去的 2019 而立之年，真的是经历了太多太多，职业危机、金融危机…家庭、爱情、事业等方面，面临着严峻的考验，总之是一言难尽。。。11 月入职新公司，又干回了财税老本行，缘分吧，虽然某些方面与自己预期有点差距，不过也很是不错啦，特别感恩，要努力工作了，去实现自己的梦想。</p><p>2019 年 8 月 7 日七夕佳节，上线了第一个私人专属网站，值得庆贺一下。期间各种魔改，也分享了自己的小小成果，收获了一些好评。同时也接触到了各行各业大佬，不断刷新了自己的认知，收获很大，知识是无穷尽的，要每时每刻 <strong>Stay Hungry Stay Foolish</strong>！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/4/4.jpg" alt="lDlZPP.jpg"></p><p>上图是自 10 月 27 日接入 Google Analytics ，至 12 月 31 日的数据，每天的访客维持在 50 左右，本站的文章主题虽然说可以是多方面的，不过前期还是集中在了建站方面，希望以后能多加入其它方面的主题，小站不易，砥砺前行！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/4/5.jpg" alt="lD8ZP1.jpg"></p><p>之前很少逛 github，更别说分享什么项目啦，自从去年开始分享了魔改的主题后，收获了一些 star ，发现分享也是一件很快乐的事情，大家相互学习，共同成长！自己在这方面还得加强，希望能多分享一些原创、有意义的东西。</p><p><a href="https://github.com/leafjame" class="LinkCard" target="_blank" rel="noopener">我的 github</a></p><p>二维码中的公众号是 19 年申请的，希望自己能做的更好，不断总结和进步！每一个昨天都是旧，每一个明天都是新，往事不可追，但未来有可期，做正确的事，永远不嫌晚。2019 已成为过去，把所有未完成的心愿，都在 2020 年实现吧，Come On ！</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2020 </tag>
            
            <tag> Birthday </tag>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于Lombok使用的一些问题</title>
      <link href="/posts/4067495121.html"/>
      <url>/posts/4067495121.html</url>
      
        <content type="html"><![CDATA[<p>Lombok 是一款非常实用的工具，通过注解能消除冗长的 Java 代码，工程中需要导入 lombok.jar，相应 IDE 的安装方式可参考 <a href="https://projectlombok.org/" target="_blank" rel="noopener">官网</a>。项目中使用到的注解主要是 @Data 和 @Builder，前一个注解用在类上，相当于同时使用了 @ToString、@EqualsAndHashCode、@Getter、@Setter 和 @RequiredArgsConstrutor；后一个主要用在类、构造器、方法上，能非常方便的实现建造者模式、链式编程，相关文档可参考 <a href="https://projectlombok.org/features/all" target="_blank" rel="noopener">这里</a>。</p><a id="more"></a><h3 id="Builder-注解"><a href="#Builder-注解" class="headerlink" title="@Builder 注解"></a>@Builder 注解</h3><p>在有继承（Inheritance）关系的实体类中使用 @Builder 时，遇到子类的 Builder 对象无法使用到父类的属性，以下方例子来说明</p><div class="note danger"><p>如果是使用 <code>Parent p = new Parent(); p.setParentAge(123);...</code> 方式赋值，那么以下内容可忽略！</p></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="comment">//@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String parentName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> parentAge;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String childName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>在使用 <code>Child.builder().parentAge(18).parentName(&quot;zhangsan&quot;)</code> 时编译失败，查看 Child 对应的 class 文件如下</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String childName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line"></span><br><span class="line">    Child(String childName, <span class="keyword">int</span> childAge) &#123;</span><br><span class="line">        <span class="keyword">this</span>.childName = childName;</span><br><span class="line">        <span class="keyword">this</span>.childAge = childAge;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Child.<span class="function">ChildBuilder <span class="title">builder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Child.ChildBuilder();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ChildBuilder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String childName;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line"></span><br><span class="line">        ChildBuilder() &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">childName</span><span class="params">(String childName)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.childName = childName;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">childAge</span><span class="params">(<span class="keyword">int</span> childAge)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.childAge = childAge;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Child <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Child(<span class="keyword">this</span>.childName, <span class="keyword">this</span>.childAge);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Child.ChildBuilder(childName="</span> + <span class="keyword">this</span>.childName + <span class="string">", childAge="</span> + <span class="keyword">this</span>.childAge + <span class="string">")"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>并未发现有父类的属性存在。若是在父类中加 @Builder 注解而子类不加，则会报如下错误</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Error:(<span class="number">14</span>, <span class="number">8</span>) java: 无法将类 com.leaface.Parent中的构造器 Paren t应用到给定类型;</span><br><span class="line">  需要: java.lang.String,<span class="keyword">int</span></span><br><span class="line">  找到: 没有参数</span><br><span class="line">  原因: 实际参数列表和形式参数列表长度不同</span><br></pre></td></tr></table></figure></div><p>之后参考了有关文档，将代码改成</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String parentName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> parentAge;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String childName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> childAge;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Builder</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Child</span><span class="params">(String parentName, <span class="keyword">int</span> parentAge, String childName, <span class="keyword">int</span> childAge)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(parentName, parentAge);</span><br><span class="line">        <span class="keyword">this</span>.childName = childName;</span><br><span class="line">        <span class="keyword">this</span>.childAge = childAge;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="note info"><p>PS：父类中的 @NoArgsConstructor 是在使用了 @Data 注解后，为解决子类出现 <code>Lombok needs a default constructor in the base class</code> 这个错误而加的</p></div><p>这样配置后，子类就能设置父类的属性了，<font color="yellow;">注意</font>：此时父类是<strong>没有</strong>加 @Builder 的，而我们项目中又需要这个注解，若是都加上 @Builder，子类编译报错</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error:(<span class="number">17</span>, <span class="number">5</span>) java: com.leaface.Child 中的 builder() 无法隐藏 com.leaface.Parent 中的 builder()</span><br><span class="line">  返回类型com.leaface.Child.ChildBuilder与com.leaface.Parent.ParentBuilder不兼容</span><br></pre></td></tr></table></figure></div><p>以下是 @Builder 注解源码</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Target</span>(&#123;ElementType.TYPE, ElementType.METHOD, ElementType.CONSTRUCTOR&#125;)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.SOURCE)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Builder &#123;</span><br><span class="line">    <span class="function">String <span class="title">builderMethodName</span><span class="params">()</span> <span class="keyword">default</span> "builder"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">buildMethodName</span><span class="params">()</span> <span class="keyword">default</span> "build"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function">String <span class="title">builderClassName</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">toBuilder</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Target</span>(&#123;ElementType.FIELD&#125;)</span><br><span class="line">    <span class="meta">@Retention</span>(RetentionPolicy.SOURCE)</span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@interface</span> Default &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Target</span>(&#123;ElementType.FIELD, ElementType.PARAMETER&#125;)</span><br><span class="line">    <span class="meta">@Retention</span>(RetentionPolicy.SOURCE)</span><br><span class="line">    <span class="keyword">public</span> <span class="meta">@interface</span> ObtainVia &#123;</span><br><span class="line">        <span class="function">String <span class="title">field</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function">String <span class="title">method</span><span class="params">()</span> <span class="keyword">default</span> ""</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">boolean</span> <span class="title">isStatic</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">false</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>其中的 builderMethodName 默认为 builder，子类试图公开和父类具有相同名称的构建器，所以报错。</p><div class="note success"><p><strong>解决方案</strong>：为父类和子类分别指定不同名称的构建器！！！</p></div><p>例如在子类中加 <code>builderMethodName = &quot;leafChildBuilder&quot;</code>，修改后代码如下</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String childName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Builder</span>(builderMethodName = <span class="string">"leafChildBuilder"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Child</span><span class="params">(String parentName, <span class="keyword">int</span> parentAge, String childName, <span class="keyword">int</span> childAge)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(parentName, parentAge);</span><br><span class="line">        <span class="keyword">this</span>.childName = childName;</span><br><span class="line">        <span class="keyword">this</span>.childAge = childAge;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>查看子类的 class 文件，发现已生成其对应的构建器 leafChildBuilder() 和父类的属性</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Child.<span class="function">ChildBuilder <span class="title">leafChildBuilder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Child.ChildBuilder();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Child</span><span class="params">(String parentName, <span class="keyword">int</span> parentAge, String childName, <span class="keyword">int</span> childAge)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(parentName, parentAge);</span><br><span class="line">    <span class="keyword">this</span>.childName = childName;</span><br><span class="line">    <span class="keyword">this</span>.childAge = childAge;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ChildBuilder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String parentName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> parentAge;</span><br><span class="line">    <span class="keyword">private</span> String childName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line"></span><br><span class="line">    ChildBuilder() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">parentName</span><span class="params">(String parentName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.parentName = parentName;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">parentAge</span><span class="params">(<span class="keyword">int</span> parentAge)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.parentAge = parentAge;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">childName</span><span class="params">(String childName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.childName = childName;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">childAge</span><span class="params">(<span class="keyword">int</span> childAge)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.childAge = childAge;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Child <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Child(<span class="keyword">this</span>.parentName, <span class="keyword">this</span>.parentAge, <span class="keyword">this</span>.childName, <span class="keyword">this</span>.childAge);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这里没有改父类的构建器名称，所以还是默认的 builder()，两者已不存在冲突</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Parent.<span class="function">ParentBuilder <span class="title">builder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> Parent.ParentBuilder();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>使用时，子类直接调 leafChildBuilder() 即可，父类还是使用默认的 builder()</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Child child = Child.leafChildBuilder().parentAge(<span class="number">88</span>).childAge(<span class="number">18</span>).childName(<span class="string">"zhangsan"</span>).build();</span><br><span class="line"></span><br><span class="line">Parent parent = Parent.builder().parentName(<span class="string">"admin"</span>).parentAge(<span class="number">99</span>).build();</span><br></pre></td></tr></table></figure></div><h3 id="SuperBuilder-注解（推荐）"><a href="#SuperBuilder-注解（推荐）" class="headerlink" title="@SuperBuilder 注解（推荐）"></a>@SuperBuilder 注解（推荐）</h3><p><a href="https://projectlombok.org/features/experimental/SuperBuilder" target="_blank" rel="noopener">Lombok v1.18.2</a> 推出了 @SuperBuilder 注解，这样就不用再定义特殊的构建器了，比如这样</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@SuperBuilder</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String parentName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> parentAge;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@SuperBuilder</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String childName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>使用默认的 builder() 调用即可</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Child child = Child.builder().parentAge(<span class="number">88</span>).childAge(<span class="number">18</span>).childName(<span class="string">"zhangsan"</span>).build();</span><br><span class="line"></span><br><span class="line">Parent parent = Parent.builder().parentName(<span class="string">"admin"</span>).parentAge(<span class="number">99</span>).build();</span><br></pre></td></tr></table></figure></div><p>以上两种方式，赋值后均能通过 @Data 提供的 get 方法取到值。</p><div class="note danger"><p>@SuperBuilder 和 @Builder 不能在同一继承体系中混用，否则会编译失败。多层级继承中这两者的使用方式同上！</p></div><p>至此，Lombok @Builder 继承问题解决！</p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p>最后分别附上使用了 @Builder 和 @SuperBuilder 后的父类、子类 class 文件（省略了 @Data 注解）</p><h4 id="Builder-class"><a href="#Builder-class" class="headerlink" title="@Builder class"></a>@Builder class</h4><p>Parent.class ======&gt;&gt;&gt;</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String parentName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> parentAge;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Parent.<span class="function">ParentBuilder <span class="title">builder</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">new</span> Parent.ParentBuilder();&#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Parent</span><span class="params">(String parentName, <span class="keyword">int</span> parentAge)</span> </span>&#123; <span class="keyword">this</span>.parentName = parentName; <span class="keyword">this</span>.parentAge = parentAge;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ParentBuilder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String parentName;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> parentAge;</span><br><span class="line"></span><br><span class="line">        ParentBuilder() &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Parent.<span class="function">ParentBuilder <span class="title">parentName</span><span class="params">(String parentName)</span> </span>&#123; <span class="keyword">this</span>.parentName = parentName; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Parent.<span class="function">ParentBuilder <span class="title">parentAge</span><span class="params">(<span class="keyword">int</span> parentAge)</span> </span>&#123; <span class="keyword">this</span>.parentAge = parentAge; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Parent <span class="title">build</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">new</span> Parent(<span class="keyword">this</span>.parentName, <span class="keyword">this</span>.parentAge); &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Parent.ParentBuilder(parentName="</span> + <span class="keyword">this</span>.parentName + <span class="string">", parentAge="</span> + <span class="keyword">this</span>.parentAge + <span class="string">")"</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>Child.class ======&gt;&gt;&gt;</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String childName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Child</span><span class="params">(String parentName, <span class="keyword">int</span> parentAge, String childName, <span class="keyword">int</span> childAge)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(parentName, parentAge);</span><br><span class="line">        <span class="keyword">this</span>.childName = childName;</span><br><span class="line">        <span class="keyword">this</span>.childAge = childAge;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Child.<span class="function">ChildBuilder <span class="title">leafChildBuilder</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">new</span> Child.ChildBuilder(); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ChildBuilder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String parentName;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> parentAge;</span><br><span class="line">        <span class="keyword">private</span> String childName;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line"></span><br><span class="line">        ChildBuilder() &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">parentName</span><span class="params">(String parentName)</span> </span>&#123; <span class="keyword">this</span>.parentName = parentName; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">parentAge</span><span class="params">(<span class="keyword">int</span> parentAge)</span> </span>&#123; <span class="keyword">this</span>.parentAge = parentAge; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">childName</span><span class="params">(String childName)</span> </span>&#123; <span class="keyword">this</span>.childName = childName; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> Child.<span class="function">ChildBuilder <span class="title">childAge</span><span class="params">(<span class="keyword">int</span> childAge)</span> </span>&#123; <span class="keyword">this</span>.childAge = childAge; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Child <span class="title">build</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">new</span> Child(<span class="keyword">this</span>.parentName, <span class="keyword">this</span>.parentAge, <span class="keyword">this</span>.childName, <span class="keyword">this</span>.childAge); &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Child.ChildBuilder(parentName="</span> + <span class="keyword">this</span>.parentName + <span class="string">", parentAge="</span> + <span class="keyword">this</span>.parentAge + <span class="string">", childName="</span> + <span class="keyword">this</span>.childName + <span class="string">", childAge="</span> + <span class="keyword">this</span>.childAge + <span class="string">")"</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="SuperBuilder-class"><a href="#SuperBuilder-class" class="headerlink" title="@SuperBuilder class"></a>@SuperBuilder class</h4><p>Parent.class ======&gt;&gt;&gt;</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String parentName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> parentAge;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Parent</span><span class="params">(Parent.ParentBuilder&lt;?, ?&gt; b)</span> </span>&#123; <span class="keyword">this</span>.parentName = b.parentName; <span class="keyword">this</span>.parentAge = b.parentAge; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Parent.ParentBuilder&lt;?, ?&gt; builder() &#123; <span class="keyword">return</span> <span class="keyword">new</span> Parent.ParentBuilderImpl(); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ParentBuilderImpl</span> <span class="keyword">extends</span> <span class="title">Parent</span>.<span class="title">ParentBuilder</span>&lt;<span class="title">Parent</span>, <span class="title">Parent</span>.<span class="title">ParentBuilderImpl</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">ParentBuilderImpl</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">protected</span> Parent.<span class="function">ParentBuilderImpl <span class="title">self</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Parent <span class="title">build</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">new</span> Parent(<span class="keyword">this</span>); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ParentBuilder</span>&lt;<span class="title">C</span> <span class="keyword">extends</span> <span class="title">Parent</span>, <span class="title">B</span> <span class="keyword">extends</span> <span class="title">Parent</span>.<span class="title">ParentBuilder</span>&lt;<span class="title">C</span>, <span class="title">B</span>&gt;&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String parentName;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> parentAge;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ParentBuilder</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> B <span class="title">self</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> C <span class="title">build</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> B <span class="title">parentName</span><span class="params">(String parentName)</span> </span>&#123; <span class="keyword">this</span>.parentName = parentName; <span class="keyword">return</span> <span class="keyword">this</span>.self(); &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> B <span class="title">parentAge</span><span class="params">(<span class="keyword">int</span> parentAge)</span> </span>&#123; <span class="keyword">this</span>.parentAge = parentAge; <span class="keyword">return</span> <span class="keyword">this</span>.self(); &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Parent.ParentBuilder(parentName="</span> + <span class="keyword">this</span>.parentName + <span class="string">", parentAge="</span> + <span class="keyword">this</span>.parentAge + <span class="string">")"</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>Child.class ======&gt;&gt;&gt;</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String childName;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">Child</span><span class="params">(Child.ChildBuilder&lt;?, ?&gt; b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(b);</span><br><span class="line">        <span class="keyword">this</span>.childName = b.childName;</span><br><span class="line">        <span class="keyword">this</span>.childAge = b.childAge; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Child.ChildBuilder&lt;?, ?&gt; builder() &#123; <span class="keyword">return</span> <span class="keyword">new</span> Child.ChildBuilderImpl(); &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ChildBuilderImpl</span> <span class="keyword">extends</span> <span class="title">Child</span>.<span class="title">ChildBuilder</span>&lt;<span class="title">Child</span>, <span class="title">Child</span>.<span class="title">ChildBuilderImpl</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">ChildBuilderImpl</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">protected</span> Child.<span class="function">ChildBuilderImpl <span class="title">self</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">this</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Child <span class="title">build</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> <span class="keyword">new</span> Child(<span class="keyword">this</span>); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ChildBuilder</span>&lt;<span class="title">C</span> <span class="keyword">extends</span> <span class="title">Child</span>, <span class="title">B</span> <span class="keyword">extends</span> <span class="title">Child</span>.<span class="title">ChildBuilder</span>&lt;<span class="title">C</span>, <span class="title">B</span>&gt;&gt; <span class="keyword">extends</span> <span class="title">ParentBuilder</span>&lt;<span class="title">C</span>, <span class="title">B</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> String childName;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> childAge;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ChildBuilder</span><span class="params">()</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> B <span class="title">self</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> C <span class="title">build</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> B <span class="title">childName</span><span class="params">(String childName)</span> </span>&#123; <span class="keyword">this</span>.childName = childName; <span class="keyword">return</span> <span class="keyword">this</span>.self(); &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> B <span class="title">childAge</span><span class="params">(<span class="keyword">int</span> childAge)</span> </span>&#123; <span class="keyword">this</span>.childAge = childAge; <span class="keyword">return</span> <span class="keyword">this</span>.self(); &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"Child.ChildBuilder(super="</span> + <span class="keyword">super</span>.toString() + <span class="string">", childName="</span> + <span class="keyword">this</span>.childName + <span class="string">", childAge="</span> + <span class="keyword">this</span>.childAge + <span class="string">")"</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><strong>参考资料</strong></p><p><a href="https://projectlombok.org/features/Builder" target="_blank" rel="noopener">Lombok @Builder</a><br><a href="https://projectlombok.org/features/experimental/SuperBuilder" target="_blank" rel="noopener">Lombok @SuperBuilder</a><br><a href="https://github.com/eugenp/tutorials/tree/master/lombok" target="_blank" rel="noopener">Project Lombok</a><br><a href="https://www.baeldung.com/lombok-builder-inheritance" target="_blank" rel="noopener">Lombok @Builder with Inheritance</a></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Lombok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分享几款不错的浪漫素材</title>
      <link href="/posts/3564551888.html"/>
      <url>/posts/3564551888.html</url>
      
        <content type="html"><![CDATA[<p>双旦将至，快找个暖冬又暖心的 TA 一起跨年吧！如果你还是一枚单身汪，那么再过几天的时间，又到了别人狂欢你孤单的圣诞之夜！再再再过几天时间，又双叒叕到了别人狂欢你孤单的跨年之夜！落单的人往往最怕过节，更何况双旦佳节的连环暴击，别人疯狂撒着狗粮，而你只能接受着来自情侣们的亿万点伤害，SO，与其不甘寂寞，何不为爱情放纵一次？撩个对象一起过双旦吧，2019 年最后一个脱单的机会，为你呈现 ！</p><a id="more"></a><div class="note success"><p>感谢 <a href="https://github.com/leafjame/Surprise" target="_blank" rel="noopener">leafjame</a> 和 <a href="https://github.com/enfangzhong/loveSource" target="_blank" rel="noopener">EnfangZhong</a> 提供的素材！</p></div><p>本站只集成了以下四种，其它效果可下载源码后查看</p><p><a href="https://www.liaofuzhan.com/love/" class="LinkCard">表白专场</a></p><h3 id="hexo-跳过渲染"><a href="#hexo-跳过渲染" class="headerlink" title="hexo 跳过渲染"></a>hexo 跳过渲染</h3><p>Hexo 默认会对根目录 <code>/source/</code> 下所有页面应用主题模板渲染，但有一些前端作品或 demo 页我们不希望经过渲染，而是能保持完全自定义的样子，那该怎么用 Hexo 添加自定义的 web 页面呢？下面介绍两种方法</p><h4 id="skip-render"><a href="#skip-render" class="headerlink" title="skip_render"></a>skip_render</h4><p>使用 Hexo 提供的跳过渲染配置。在站点 _config.yml 中找到 skip_render，这项是用来配置 /source/ 下需要跳过渲染的文件或目录，例如希望跳过 /source/love/ 里的所有文件，可以配置为</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">love/**</span></span><br></pre></td></tr></table></figure></div><p>如果有多项，可以这样配置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">README.md</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">love/**</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">test1/*.html</span></span><br></pre></td></tr></table></figure></div><p>或者</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">[README.md,</span> <span class="string">love/**,</span> <span class="string">test1/*.html]</span></span><br></pre></td></tr></table></figure></div><p>可参考</p><p><a href="https://github.com/hexojs/hexo/issues/1146" class="LinkCard" target="_blank" rel="noopener">如何不处理 source 目录下某个子目录的所有文件</a></p><h4 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h4><p>使用 layout 给单个文件添加不应用模板的标记。适用于个别需特殊处理的文件，可在文件头部添加</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="literal">false</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></div><p>这个文件就不会经过模板渲染，最终发布到 /public/ 里的文件就是去掉标记后的文件的样子。本站使用的是第一种配置方式，源码目录截图如下</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/5/1.jpg" alt="QxWNwT.jpg"></p><p>访问域名 + 文件目录名即可出现效果，Enjoy ！</p><p><a href="https://www.liaofuzhan.com/love/" class="LinkCard">表白专场</a></p>]]></content>
      
      
      <categories>
          
          <category> 神器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浪漫 </tag>
            
            <tag> 特效 </tag>
            
            <tag> 过节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区块链项目环境搭建</title>
      <link href="/posts/2435254904.html"/>
      <url>/posts/2435254904.html</url>
      
        <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width:100%"><img class="index_img_class" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/6/1.jpg"></div></div><div class="group-picture-row"></div></div></div><a id="more"></a><p>最近在做区块链项目，经团队几位大佬研究，终于把本地环境搭建起来了，在此记录一下。</p><div class="note info"><p>以下操作基于 CentOS 7.7</p></div><h3 id="基础环境准备"><a href="#基础环境准备" class="headerlink" title="基础环境准备"></a>基础环境准备</h3><h4 id="安装-Docker-CE"><a href="#安装-Docker-CE" class="headerlink" title="安装 Docker CE"></a>安装 Docker CE</h4><p>卸载 docker 程序及相关依赖（可选）</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum remove docker*</span><br></pre></td></tr></table></figure></div><p>使用 Docker 仓库进行安装</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure></div><p>设置仓库</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache fast</span><br></pre></td></tr></table></figure></div><p>安装 Docker-ce，安装完默认未启动，已经创建好 docker 用户组，但该组下没有用户。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure></div><p>查看 Docker 版本并确认安装成功</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure></div><p>测试验证 Docker</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure></div><h4 id="安装-Docker-compose"><a href="#安装-Docker-compose" class="headerlink" title="安装 Docker-compose"></a>安装 Docker-compose</h4><p>下载对应的 Docker-compose 版本</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/bin</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/docker/compose/releases/tag/1.25.0-rc4</span><br></pre></td></tr></table></figure></div><p>将 docker-compose-Linux-x86_64 改名 docker-compose</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv docker-compose-Linux-x86_64 docker-compose</span><br></pre></td></tr></table></figure></div><p>设置可执行权限</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></div><p>查看 Docker-compose 版本</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure></div><h4 id="安装-Go"><a href="#安装-Go" class="headerlink" title="安装 Go"></a>安装 Go</h4><p>从官网下载对应的Go版本包</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/soft/</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/go/go1.10.3.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></div><p>将源码包解压至 /usr/local/ 目录</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -C /usr/local -zxvf  go1.10.3.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure></div><p>修改环境变量 /etc/profile 文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure></div><p>在环境变量末尾添加</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export GOROOT=/usr/local/go # export PATH=$PATH:$GOROOT/bin</span><br></pre></td></tr></table></figure></div><p>使修改后的环境变量生效</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></div><p>查看版本号</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go version</span><br></pre></td></tr></table></figure></div><h4 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h4><p>安装 git 依赖</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-ExtUtils-MakeMaker</span><br></pre></td></tr></table></figure></div><p>下载 git 软件包</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/soft/ &amp;&amp; wget https://github.com/git/git/archive/v2.22.0.tar.gz</span><br></pre></td></tr></table></figure></div><p>将软件包解压至 /usr/local/git/ 目录</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /usr/local/git &amp;&amp; tar -C /usr/local/git/ zxvf /opt/soft/v2.22.0.tar.gz</span><br></pre></td></tr></table></figure></div><p>进入源码目录，安装 git</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd git-2.22.0/</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make prefix=/usr/local/git all &amp;&amp; make prefix=/usr/local/git install</span><br></pre></td></tr></table></figure></div><p>配置环境变量，在 /etc/profile 尾部添加</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/usr/local/git/bin:$PATH</span><br></pre></td></tr></table></figure></div><p>使环境变量生效</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></div><p>查看是否安装成功</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure></div><h3 id="Fabric-相关"><a href="#Fabric-相关" class="headerlink" title="Fabric 相关"></a>Fabric 相关</h3><h4 id="fabric-代码"><a href="#fabric-代码" class="headerlink" title="fabric 代码"></a>fabric 代码</h4><p>将 fabric-samples 下载到 $GOPATH/src/github.com/hyperledger/ 目录</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $GOPATH/src/github.com/hyperledger</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd $GOPATH/src/github.com/hyperledger</span><br></pre></td></tr></table></figure></div><p>克隆 fabric-samples 项目并切换到 v1.4 tag</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/hyperledger/fabric-samples.git</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd fabric-samples</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b sample v1.4.0</span><br></pre></td></tr></table></figure></div><p>安装 Fabric Binaries 和 Fabric 相关的 Docker 镜像，将指定版本的 Hyperledger Fabric 特定于平台的二进制文件和配置文件安装到 fabric-samples 的 bin 和 config 目录中</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/linux-amd64-1.4.0/hyperledger-fabric-linux-amd64-1.4.0.tar.gz</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric-ca/hyperledger-fabric-ca/linux-amd64-1.4.0/hyperledger-fabric-ca-linux-amd64-1.4.0.tar.gz</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf hyperledger-fabric-linux-amd64-1.4.0.tar.gz -C $GOPATH/src/github.com/hyperledger/fabric-samples/</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar xzvf hyperledger-fabric-ca-linux-amd64-1.4.0.tar.gz -C $GOPATH/src/github.com/hyperledger/fabric-samples/</span><br></pre></td></tr></table></figure></div><p>向 /etc/profile 中写入环境变量</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo echo 'export PATH=$GOPATH/src/github.com/hyperledger/fabric-samples/bin:$PATH' &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure></div><p>使环境变量生效</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure></div><h4 id="fabric-镜像"><a href="#fabric-镜像" class="headerlink" title="fabric 镜像"></a>fabric 镜像</h4><p>下载 Fabric 相关镜像</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hyperledger/fabric-peer:1.4.0</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hyperledger/fabric-peer:1.4.0 hyperledger/fabric-peer:latest</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hyperledger/fabric-orderer:1.4.0</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hyperledger/fabric-orderer:1.4.0 hyperledger/fabric-orderer:latest</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hyperledger/fabric-ccenv:1.4.0</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hyperledger/fabric-ccenv:1.4.0 hyperledger/fabric-ccenv:latest</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hyperledger/fabric-tools</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hyperledger/fabric-tools hyperledger/fabric-tools:latest</span><br></pre></td></tr></table></figure></div><p>下载 Fabric 第三方镜像</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hyperledger/fabric-couchdb:0.4.14</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hyperledger/fabric-couchdb:0.4.14 hyperledger/fabric-couchdb:latest</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hyperledger/fabric-kafka:0.4.14</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hyperledger/fabric-kafka:0.4.14 hyperledger/fabric-kafka:latest</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hyperledger/fabric-zookeeper:0.4.14</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hyperledger/fabric-zookeeper:0.4.14 hyperledger/fabric-zookeeper:latest</span><br></pre></td></tr></table></figure></div><p>下载 Fabric CA 镜像</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hyperledger/fabric-ca:1.4.0</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag hyperledger/fabric-ca:1.4.0 hyperledger/fabric-ca:latest</span><br></pre></td></tr></table></figure></div><p>启动</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd $GOPATH/src/github.com/hyperledger/fabric-samples/first-network</span><br></pre></td></tr></table></figure></div><p>编译通过 Golang 开发的 chainCode 并启动相关的容器\</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./byfn.sh up</span><br></pre></td></tr></table></figure></div><h3 id="证书和签名"><a href="#证书和签名" class="headerlink" title="证书和签名"></a>证书和签名</h3><p>生成证书</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd org3-artifacts</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">../../bin/cryptogen generate --config=./org3-crypto.yaml</span><br></pre></td></tr></table></figure></div><p>生成 org3 的 json 字符串</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export FABRIC_CFG_PATH=$PWD &amp;&amp; ../../bin/configtxgen -printOrg Org3MSP &gt; ../channel-artifacts/org3.json</span><br></pre></td></tr></table></figure></div><p>拷贝 order 证书到 org3 目录下</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ../</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r crypto-config/ordererOrganizations org3-artifacts/crypto-config/</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it cli bash</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem  &amp;&amp; export CHANNEL_NAME=mychannel</span><br></pre></td></tr></table></figure></div><p>获取 mychannel 的配置区块</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peer channel fetch config config_block.pb -o orderer.example.com:7050 -c $CHANNEL_NAME --tls --cafile $ORDERER_CA</span><br></pre></td></tr></table></figure></div><p>转为 json</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configtxlator proto_decode --input config_block.pb --type common.Block | jq .data.data[0].payload.data.config &gt; config.json</span><br></pre></td></tr></table></figure></div><p>将 org3 加入到此 json 中</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jq -s '.[0] * &#123;"channel_group":&#123;"groups":&#123;"Application":&#123;"groups": &#123;"Org3MSP":.[1]&#125;&#125;&#125;&#125;&#125;' config.json ./channel-artifacts/org3.json &gt; modified_config.json</span><br></pre></td></tr></table></figure></div><p>转为 pb</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configtxlator proto_encode --input config.json --type common.Config --output config.pb</span><br></pre></td></tr></table></figure></div><p>转为 pb</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configtxlator proto_encode --input modified_config.json --type common.Config --output modified_config.pb</span><br></pre></td></tr></table></figure></div><p>计算 pb 之间的增量</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configtxlator compute_update --channel_id $CHANNEL_NAME --original config.pb --updated modified_config.pb --output org3_update.pb</span><br></pre></td></tr></table></figure></div><p>转为 json</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configtxlator proto_decode --input org3_update.pb --type common.ConfigUpdate | jq . &gt; org3_update.json</span><br></pre></td></tr></table></figure></div><p>加入 header 信息</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo '&#123;"payload":&#123;"header":&#123;"channel_header":&#123;"channel_id":"mychannel", "type":2&#125;&#125;,"data":&#123;"config_update":'$(cat org3_update.json)'&#125;&#125;&#125;' | jq . &gt; org3_update_in_envelope.json</span><br></pre></td></tr></table></figure></div><p>转为 pb</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">configtxlator proto_encode --input org3_update_in_envelope.json --type common.Envelope --output org3_update_in_envelope.pb</span><br></pre></td></tr></table></figure></div><p>org1 签名</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peer channel signconfigtx -f org3_update_in_envelope.pb</span><br></pre></td></tr></table></figure></div><p>切换到 org2 签名</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CORE_PEER_LOCALMSPID="Org2MSP"</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/msp</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CORE_PEER_ADDRESS=peer0.org2.example.com:7051</span><br></pre></td></tr></table></figure></div><p>上传新配置</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peer channel update -f org3_update_in_envelope.pb -c $CHANNEL_NAME -o orderer.example.com:7050 --tls --cafile $ORDERER_CA</span><br></pre></td></tr></table></figure></div><p>编写 docker-compose 文件</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose -f docker-compose-org3.yaml up -d</span><br></pre></td></tr></table></figure></div><h3 id="测试验证"><a href="#测试验证" class="headerlink" title="测试验证"></a>测试验证</h3><p>进入容器</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it Org3cli bash</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ORDERER_CA=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem &amp;&amp; export CHANNEL_NAME=mychannel</span><br></pre></td></tr></table></figure></div><p>获取第 0 个区块</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peer channel fetch 0 mychannel.block -o orderer.example.com:7050 -c $CHANNEL_NAME --tls --cafile $ORDERER_CA</span><br></pre></td></tr></table></figure></div><p>打印信息如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2019-12-13 17:55:08.137 UTC [channelCmd] InitCmdFactory -&gt; INFO 001 Endorser and orderer connections initialized</span><br><span class="line">2019-12-13 17:55:08.149 UTC [cli.common] readBlock -&gt; INFO 002 Received block: 0</span><br></pre></td></tr></table></figure></div><p>加入到 channel 里边</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peer channel join -b mychannel.block</span><br></pre></td></tr></table></figure></div><p>切换到另一个 peer</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org3.example.com/peers/peer1.org3.example.com/tls/ca.crt &amp;&amp; export CORE_PEER_ADDRESS=peer1.org3.example.com:7051</span><br></pre></td></tr></table></figure></div><p>加入到 channel 里边</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">peer channel join -b mychannel.block</span><br></pre></td></tr></table></figure></div><p>至此，初步环境搭建完成，未完待续……</p><p><strong>参考资料</strong></p><p><a href="https://www.hyperledger.org/" target="_blank" rel="noopener">hyperledger</a><br><a href="https://book.douban.com/subject/27663259/" target="_blank" rel="noopener">白话区块链</a><br><a href="https://www.jianshu.com/p/e16345cc2cde" target="_blank" rel="noopener">用 Hyperledger Fabric开发一个Demo</a></p>]]></content>
      
      
      <categories>
          
          <category> 区块链 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
            <tag> Fabric </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人域名企业邮箱</title>
      <link href="/posts/3598618716.html"/>
      <url>/posts/3598618716.html</url>
      
        <content type="html"><![CDATA[<p>自本站开启了邮件订阅后，基于 Mailchimp 实现的代发功能很容易被其它邮件服务器标为垃圾邮件，一定程度上影响了订阅邮件的正常投递，主要是没有验证独立域名、设置 Mailchimp 提供的 DKIM / SPF 的 DNS 记录的缘故。这需要你拥有自己独立域名的邮箱，比如我近期申请的 ZOHO 企邮，后缀就是自己的域名。</p><a id="more"></a><p>国外的邮箱平台，知名度比较高的有： Gmail 企业邮箱 Gsite、ZohoMail、YandexMail 等等。</p><ol><li>YandexMail ：俄罗斯的产品，支持 1000 个自定义用户，每个用户 10G 空间，支持 POP3/IMAP/SMTP 协议。国内访问有点慢，部分页面还是俄文，图形验证码太诡异。</li><li>ZohoMail ：支持中文，免费用户只能绑一个域名，最多添加 5 个用户，每个用户 5GB 空间，25MB 附件限制，不能用 POP/IMAP 功能，不过可以下载其 Zoho Mail 应用来收发邮件。</li><li>Gmail 企业邮箱 Gsite ：目前已不提供免费版，只有 14 天免费试用期。</li></ol><p>国内的企业邮箱：腾讯、网易、阿里，需要实名或者备案什么的，使用有限制，操作上并无太大差别，看个人选择，下边说一下我使用的 ZOHO</p><p>打开 <a href="https://www.zoho.com/mail/" target="_blank" rel="noopener">ZOHO 企邮</a>，选择 Business Email ，点击 Sign Up for Free</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/7/1.jpg" alt="QYsPkF.jpg"></p><div class="note danger"><p>注意图片上方箭头，zoho.com 是国际版，zoho.com.cn 是国内版，国内版使用有限制且还需各种认证</p></div><p>页面下滑会看到有免费计划</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/7/2.jpg" alt="QYsfNF.jpg"></p><p>添加自己的域名，填写信息完成注册，之后会跳转到域名的设置页面，首先验证域名，选择你的 DNS，比如我使用的 <a href="https://www.cloudflare.com/" target="_blank" rel="noopener">Cloudflare</a> 并不在其中，所以选择其它</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/7/3.jpg" alt="QYcxCF.png"></p><p>验证方法分为 CNAME 方法、TXT 方法、HTML 方法，可参考官方文档</p><p><a href="https://www.zoho.com.cn/mail/help/adminconsole/domain-verification.html" class="LinkCard" target="_blank" rel="noopener">Zoho 中的域验证</a></p><p>然后根据上图所示的左侧列表依次设置，参考着文档操作，一般没多久就能通过验证，以下是我 Cloudflare 中的 DNS 配置</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/7/4.jpg" alt="QYIgDe.jpg"></p><p>在 Zoho 的企业邮箱页面，可以像平时一样收发信件，控制面板可以在右上角的个人头像处找到</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/7/5.jpg" alt="QY4E5t.jpg"></p><p>网上有一款不错的 <a href="www.mail-tester.com">邮箱检测神器</a> ，可以给你的邮箱评分，让你了解自己的邮箱是否容易被判定为垃圾邮件，明了你的发信 IP 是否在黑名单中等等一切详细的信息，可根据这些提示去改进你的邮箱</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/7/6.jpg" alt="QY5fpV.jpg"></p><p>用你要测试的邮箱发送一封邮件到这个测试邮箱地址，然后点击查看得分</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/7/7.jpg" alt="QYIp0H.jpg"></p><p>橘色栏列出有待改进的地方，绿色栏代表非常完美了，具体的可点击进行查看。至此，个人自定义域名的邮箱已完成配置，去 Mailchimp 验证吧️</p><p><a href="https://www.liaofuzhan.com/posts/4068965437.html" class="LinkCard">基于 Mailchimp 实现邮件订阅功能</a></p><p><strong>参考文章</strong></p><p><a href="https://www.zoho.com.cn/mail/help/adminconsole/email-hosting-setup.html" target="_blank" rel="noopener">Zoho 中的邮件托管设置</a><br><a href="https://wzfou.com/zoho-mail/" target="_blank" rel="noopener">Zoho企业(域名)邮箱申请使用教程</a><br><a href="https://www.cooltechdoll.com/zoho-mail/" target="_blank" rel="noopener">Zoho Mail-外贸创业必不可少的免费企业邮箱</a></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mailchimp </tag>
            
            <tag> 订阅 </tag>
            
            <tag> 企业邮箱 </tag>
            
            <tag> ZOHO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>年冬初雪</title>
      <link href="/posts/3058510804.html"/>
      <url>/posts/3058510804.html</url>
      
        <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width:100%"><img class="index_img_class" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/8/1.jpg"></div></div><div class="group-picture-row"></div></div></div><a id="more"></a><p>11 月 29，北京迎来 2019 年冬首场降雪，这两天朋友圈已刷屏，一下雪，北京变成了北平，故宫变成了“动物园”。喜欢看雪，景山是绝佳的观赏点，自己每每错过，就在小区周边随拍了几张</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/8/2.jpg" alt="QZJhGT.jpg"></p><p>一晚上的时间，堆了挺厚，周围都是在玩雪的人</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/8/3.jpg" alt="QZaa36.jpg"></p><p>中午买菜回来，打开电脑发现 <a href="https://www.namesilo.com/pricing" target="_blank" rel="noopener">NameSilo</a> 的 <code>.com</code> 新注价从 8.99 降到 6.99，其它的也有一定降幅</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/8/4.jpg" alt="QewG8I.jpg"></p><p>Google 了一张优惠券，5.99 刀果断入手</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/8/5.jpg" alt="Qeiran.jpg"></p><p>NameSilo 有默认的 DNS 服务，不过我改成了 <a href="https://www.cloudflare.com/zh-cn/dns/" target="_blank" rel="noopener">Cloudflare</a> 的，功能挺强大而且有 <a href="https://www.cloudflare.com/zh-cn/plans/" target="_blank" rel="noopener">免费计划</a></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/8/6.jpg" alt="QeAlb4.jpg"></p><p>其实 Cloudflare 不提供 <a href="https://www.cloudflare.com/zh-cn/network/china/" target="_blank" rel="noopener">中文版服务</a>，只是和 <a href="http://su.baidu.com/" target="_blank" rel="noopener">百度云加速</a> 有合作，如果你的域名未备案，那么只能从境外最近的 Cloudflare 数据中心获得服务</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/8/7.jpg" alt="Qe3mT0.jpg"></p><p>配置完这一切后，基于不蒜子的统计清零了，这是域名生效前的截图，至此，私人专属域名上线，enjoy！</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 北京 </tag>
            
            <tag> 雪 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Mailchimp实现邮件订阅功能</title>
      <link href="/posts/4068965437.html"/>
      <url>/posts/4068965437.html</url>
      
        <content type="html"><![CDATA[<p>前段时间，给自己的小站添加的订阅功能，主要是通过 Mailchimp 提供的 Signup forms 和 Landing page 做的。MailChimp 是一款提供邮件营销服务的老牌产品了，很多大企业都在用，普通用户每月可享受 10000 封免费邮件发送服务，可增加用户总数为 2000 个，具体的免费额度可在个人中心 –&gt; Account 下进行查看。这里整理了部分有关于 Mailchimp 邮件订阅这方面的个人 Demo，供大家参考，<a href="https://mailchi.mp/e92415d27722/leaf" target="_blank" rel="noopener">点此</a> 可体验本站订阅功能。</p><a id="more"></a><p>网站的话一般是 RSS 订阅，我们可以将 RSS 内容通过 Mailchimp 以邮件的形式发送给订阅者，hexo 可使用 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 来实现 RSS（很早前就给网站加了 RSS 功能，却不知道干嘛用，捣鼓完 MailChimp 总算是明白了，尴尬 -.-!）。</p><p>使用 Mailchimp 前的 <a href="https://mailchimp.com/" target="_blank" rel="noopener">注册</a> 步骤，这里略过，其中可能会涉及到 Google reCAPTCHA 人机认证，推荐使用 Chrome 操作，以下是我目前正在使用的订阅界面和邮件模板。</p><h3 id="订阅界面"><a href="#订阅界面" class="headerlink" title="订阅界面"></a>订阅界面</h3><p>目前使用的两种订阅方式分别为 Signup forms 和 Landing page。</p><h4 id="Signup-forms"><a href="#Signup-forms" class="headerlink" title="Signup forms"></a>Signup forms</h4><p>注册完成后，点击上方横栏 Audience（受众），以前叫 List，所以看没图的老博文会有点懵…按下图步骤找到 Signup forms</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/1.jpg" alt="MKgpOf.jpg"></p><p>点击后出现 4 种选择</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/2.jpg" alt="MnZHtf.png"></p><p>我主要使用的是第一种，做好订阅表单后，直接复制 Signup form URL，然后在网站里跳转到这个地址即可进行订阅。第二、三种也捣鼓过，不过需要在网站中嵌入部分代码，所以没细整。最后一种整合了第三方的平台：Wufoo、Squarespace，都没咋听说，就不整那么复杂了，这里主要介绍第一种 Form builder 的使用。</p><p><font color="yellow;">注意：</font> Form builder 有不大好的一个地方，就是 Google reCAPTCHA 人机认证是必须的，不能去掉。PC 端通过 Chrome 之外的其它浏览器可能不能正常的完成订阅，移动端就更不能了。而 Embedded forms 和 Subscriber pop-up 的人机认证可以选择性去掉，在右上角的 help 搜索 reCAPTCHA 即可找到对应的文档。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/3.jpg" alt="MKuh26.jpg"></p><ul><li>Forms and response emails：可下拉设置订阅、取消订阅等信息</li><li>Build it：添加/删除表单的输入框、单选框等页面布局</li><li>Design it：设计背景色、间距、字体等样式</li><li>Translate it：翻译相关，自动翻译（可修改译文）不是很准确，建议不要开启</li><li>Add a field / Field settings：添加输入框、按钮等操作</li></ul><p>修改后，具体的变动在下方会实时显示、自动保存，也可以访问 Signup form URL 中的链接查看效果，例如 <a href="http://eepurl.com/gG66Rj" target="_blank" rel="noopener">这里</a>，最终的效果修改到自己满意为止。邮件的发件人、主题等信息可以在 Audience –&gt; Settings –&gt; Audience name and campaign defaults 下进行设置。其它的如联系信息、网站地址，可以在同级别的 Required email footer content 下进行设置。</p><h4 id="Landing-page（推荐）"><a href="#Landing-page（推荐）" class="headerlink" title="Landing page（推荐）"></a>Landing page（推荐）</h4><p>点击页面最上方横栏 Create –&gt; Landing page，输入名称，选择 audience 后点击 begin，进入模板选择界面</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/4.jpg" alt="MKGWjI.jpg"></p><p>Mailchimp 提供了多款 Landing page ，点击红框中的按钮可以进行预览，选择自己喜欢的一款即可，比如我选择的是 Lead Generation（Wild Country），之后进入页面设计</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/5.jpg" alt="MKUKeI.jpg"></p><p>右侧有多种 Content 可选择，向左拖拽即可，右侧的 Design 可以设置对应的 page 、header 等布局和样式效果，操作与 Signup forms 类似</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/6.jpg" alt="MKdUI0.jpg"></p><p>点击左侧的元素，右侧即弹出相应的设置界面，比如我现在选择的是视频。Caption 下是富文本操作，style 页签也可设置字体大小、颜色等。Save &amp; Close 后，可以点击右上角的 Preview 预览；点击右下角的 Save &amp; Publish 即可发布这个 Landing page，访问其发布 URL 地址即可进行邮件订阅了，比如：<a href="https://mailchi.mp/e92415d27722/leaf" target="_blank" rel="noopener">这里</a></p><p>已保存的所有 audiences 信息，可点击横栏的 Campaigns 查看。有关 Landing page 的人机认证，可通过其关联的 audience 来设置关闭（ Audience –&gt; Settings –&gt; Audience name and defaults ），不勾选 Enable reCAPTCHA 即可</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/7.jpg" alt="MKcwJs.jpg"></p><h3 id="邮件模板"><a href="#邮件模板" class="headerlink" title="邮件模板"></a>邮件模板</h3><p>下边将讲述基于 Mailchimp 的 Automate（自动化）来实现自动发邮件功能，包括通过 Landing page 订阅后的欢迎邮件和网站 RSS 更新邮件。</p><h4 id="欢迎邮件"><a href="#欢迎邮件" class="headerlink" title="欢迎邮件"></a>欢迎邮件</h4><p>前文的 Signup forms 在订阅成功后，订阅者也会收到一封欢迎邮件，具体的在 Form builder 的 Forms and response emails 下可以查看。这里说一下用 Automate 在订阅后自动发送欢迎邮件的功能，点击横栏 Automate –&gt; Email，在弹出的页面选择 Welcome new subscribers，这里还有我们下面要用到的网站 RSS 更新邮件：Share blog updates</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/8.jpg" alt="MKfPvn.jpg"></p><p>填写 Campaign Name 和选择 audience，接下来就可以设置邮件主题、发件人等信息了，下方的 Send a Test Email 可以发测试邮件，不过数量是有限制的</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/9.jpg" alt="MKh2TK.jpg"></p><p>点击 Edit design 又来到了熟悉的界面，下面是我做的一个简易模板</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/10.jpg" alt="Ml0rk9.jpg"></p><p>关于里边的一些标签 <code>*|IF:FNAME|*</code>，可以在 help 里搜索查看具体的文档介绍。点右上角的 Preview and Test 可以预览和发测试邮件，点击右下角的 Save and Continue 跳转后，需要再点击右上角的 Start Sending 才是正式启用这个服务，具体的状态可以在 Campaigns 页面查看。</p><h4 id="RSS-更新邮件"><a href="#RSS-更新邮件" class="headerlink" title="RSS 更新邮件"></a>RSS 更新邮件</h4><p>终于来到本文的重点了，基于 RSS 实现邮件订阅功能（前文也说过了，你的网站必须先实现 RSS 功能，这是前提）。点击横栏 Automate –&gt; Email，在弹出的页面选择 Share blog updates，输入名称并选择 audience 之后进入 RSS feed 设置页</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/11.jpg" alt="MQwwkR.jpg"></p><p>如果是用 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 来实现的 RSS 功能，那么填写的 RSS feed URL 就是网站地址 + <code>/atom.xml</code>。发送频率可以设置成每天的某个时间点，参考下方的 FAQ：<code>We’ll only send campaigns when there’s new content in your RSS feed</code>，只要 RSS 有新内容就发通知邮件。某些文章的大佬好像对这个时间频率有点误解，以为每周/月写一篇文章，发送频率就设置为每周/月。要是那样的话，订阅者收到的邮件可能就有 N 天的时间延迟，如双方都能接受，这样设置当然没问题啦~！设置完成后，点击 Next 跳转到 Recipients 设置页</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/12.jpg" alt="Recipients"></p><p>这里可以设置发送给某些指定的订阅者，默认是全部。点击 Next 设置邮件主题、发件人等信息</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/13.jpg" alt="MQcJeK.jpg"></p><p>下一步是模板选择页，选择免费（没有 Upgrade To Use 提示）的即可，内容基本上能改成自己想要的效果，我选择的是第一个 Sell Products，点击下一步又来到熟悉的界面</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/14.jpg" alt="MlrJfA.jpg"></p><p>咱是 RSS 订阅，所以还需要加上部分 RSS 标签，具体的用法可在 help 中搜索 RSS Merge Tags 找到相应的说明文档。样式布局什么的，可在右上角的 Preview and Test 进行预览和发测试邮件。完成之后点击 Next，跳转到 Confirm 确认页</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/15.jpg" alt="MQWZc9.jpg"></p><p>点击右下方 Start RSS 即可开启这个服务，右上角的 Save and Exit 则是保存退出，然后回到指定的页面。所有的活动可以在 Campaigns 页面查看，包括发送状态、发送报告等等</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/16.jpg" alt="MQfUxJ.jpg"></p><div class="note info"><p>MailChimp 的 Content Studio 还支持图片上传、在线剪辑、美化等操作，功能十分强大。</p></div><h3 id="域名验证"><a href="#域名验证" class="headerlink" title="域名验证"></a>域名验证</h3><p>虽然说 MailChimp 不需要使用自己的域名就可以发送邮件，但是为了保证邮件不被判定为垃圾邮件，建议还是添加自己的邮箱域名并通过验证，这就需要你拥有自定义域名的邮箱，具体可参考这篇文章</p><p><a href="https://www.liaofuzhan.com/posts/3598618716.html" class="LinkCard">个人域名企业邮箱</a></p><p>有关邮箱域名的验证，<a href="https://mailchimp.com/help/verify-a-domain/" target="_blank" rel="noopener">mailchimp 文档</a> 里已写的很详细了，这里简单说下。点击个人中心 –&gt; Account –&gt; Settings –&gt; Domains</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/17.jpg" alt="QtJbZ9.jpg"></p><p>点击 Verify Domain 按钮，输入自定义域名的邮箱，比如我的是 <a href="mailto:leaface@liaofuzhan.com" target="_blank" rel="noopener">leaface@liaofuzhan.com</a>，然后点击 Send Verification Email 发送验证邮件，登录邮箱即可完成验证。之后点击上图右侧红色箭头所指按钮 Authenticate 验证你的域名</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/18.jpg" alt="QtayAH.jpg"></p><p>在你域名 DNS 解析商那里，增加 mailchimp 的 DKIM / SPF，以防止其发送的邮件被标记为垃圾邮件，主要是增加 CNAME 和 TXT 记录，我使用的是 <a href="https://www.cloudflare.com" target="_blank" rel="noopener">Cloudflare</a> 的免费 DNS，配置如下图</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/19.jpg" alt="QtdF81.jpg"></p><p>其中 k1._domainkey.liaofuzhan.com 的域名后缀在保存时自动给去掉了，之前在用 <a href="https://www.zoho.com/mail/" target="_blank" rel="noopener">ZOHO 企邮</a> 时增加了 SPF 记录 v=spf1 include:zoho.com ~all，在 DNS 里为 SPF 设置两个相同 Name 的 TXT 记录会影响验证，所以我把 mailchimp 的设置为 www，也可以把两者的 SPF 合为一个，像这样</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v=spf1 include:zoho.com include:servers.mcsv.net ~all</span><br></pre></td></tr></table></figure></div><p>之后在 mailchimp 点击 Authenticate Domain 按钮即可完成验证</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/20.jpg" alt="Qt4h7j.jpg"></p><p>之前的 Verified 状态变成了 Authenticated，表示已完成验证。有关验证的文档可参考</p><p><a href="https://mailchimp.com/help/set-up-custom-domain-authentication-dkim-and-spf/" class="LinkCard" target="_blank" rel="noopener">authenticate your domain</a></p><p>之后网站发布新动态，订阅邮件正常投递，发件人已是自定义的域名邮箱了</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/9/21.jpg" alt="QtsnVf.jpg"></p><p>本站的简易表单订阅网址也有了自己的域名名称</p><p><a href="https://liaofuzhan.us20.list-manage.com/subscribe?u=a6c1b4501d5adc75a00b701ce&id=91121e3b5d" class="LinkCard" target="_blank" rel="noopener">欢迎订阅北宸的小站</a></p><p>图中箭头处的“由 <a href="mailto:bounce-mc.us20_125249546.12089217-6d3f97d224@mail221.atl101.mcdlv.net" target="_blank" rel="noopener">bounce-mc.us20_125249546.12089217-6d3f97d224@mail221.atl101.mcdlv.net</a> 代发”，官方文档说明如下</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1. Why authentication information appears</span><br><span class="line"></span><br><span class="line">To determine if an email is safe, email clients look at two addresses when they receive bulk email: the email address in the From field, and the sender address. The sender address is not always visible, but it is necessary to send email through Mailchimp. It's based on our sending servers, and usually contains mcsv.net, mcdlv.net, or rsgsv.net. Some email inboxes display both your information and our information in the sender details of an email.</span><br><span class="line"></span><br><span class="line">2. How authentication affects your from name</span><br><span class="line"></span><br><span class="line">Subscribers who use Gmail, Outlook, Hotmail, or another Microsoft webmail service may see an indication that your campaign was sent by Mailchimp on your behalf.</span><br><span class="line"></span><br><span class="line">For example, if you send a Mailchimp campaign from newsletter@hathaway.edu, we'll authenticate it with our domain. Email clients display Mailchimp sending domain information near your campaign's From name to help recipients determine if an email is safe to open.</span><br><span class="line"></span><br><span class="line">3. Remove “on behalf of” or “via mcsv.net” information</span><br><span class="line"></span><br><span class="line">The best way to remove this extra information from your campaign is to use a from email address associated with your own domain, and authenticate it. Domain Keys Identified Mail (DKIM) and Sender Policy Framework (SPF) are commonly used to authenticate email domains. These methods make campaigns appear to come from your servers within the email client, and ensure the removal of Mailchimp information from the sender details section of the campaign.</span><br><span class="line"></span><br><span class="line">While this works for most email clients, some email clients, like Outlook, may still display authentication information after custom DKIM is set up. This is specific to each email client and isn't something we can prevent.</span><br></pre></td></tr></table></figure></div><p>发件人最好使用自己已验证的域名邮箱，并增加 DKIM / SPF 记录，这么设置后大多数的邮件客户端是没啥问题了，不过也有个例，比如 Outlook（我订阅用的 QQ 邮箱也偶尔会判为垃圾邮件），Mailchimp 也没招。。以下是本站的订阅地址，欢迎体验！</p><p><a href="https://mailchi.mp/e92415d27722/leaf" class="LinkCard" target="_blank" rel="noopener">订阅本站</a></p><p>另外，本站的公众号也会不定时更新干货内容，欢迎扫描网站左下角的二维码关注！</p><p><strong>参考文章</strong></p><p><a href="https://wzfou.com/mailchimp/" target="_blank" rel="noopener">利用MailChimp建立RSS邮件订阅平台…</a><br><a href="https://webdesign.tutsplus.com/zh-hant/articles/best-mailchimp-templates-to-level-up-your-business-email-newsletter--cms-26492" target="_blank" rel="noopener">最佳的MailChimp樣板來升級你的商業Email訂閱</a></p>]]></content>
      
      
      <categories>
          
          <category> Tech </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mailchimp </tag>
            
            <tag> RSS </tag>
            
            <tag> 邮件订阅 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一年一度万圣节</title>
      <link href="/posts/299207420.html"/>
      <url>/posts/299207420.html</url>
      
        <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width:100%"><img class="index_img_class" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/10/1.gif"></div></div><div class="group-picture-row"></div></div></div><a id="more"></a><p>看了 Google 首页才知道，又是一年万圣节，时间过的真快。公司电梯里的万圣节装饰，已是一年前。找工作无感，现在要求都这么高了吗？马上要过年了，今天面了两家，感觉都是外派性质，不靠谱，公司没几个人，官网做的倒是挺全。一家的面试只有人事，全程和我聊技术，另一家来了个小年轻一顿问。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/10/2.jpg" alt="KoQxv8.jpg"></p><p>还能说点什么呢 。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/10/3.jpg" alt="Ko1CQK.jpg"></p><p>和以前一同事聊了挺长时间，下周接着投简历，生活还得继续啊！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/10/4.jpg" alt="Ko31c6.jpg"></p><blockquote><p><i>最后弱弱的问下：谁公司有<font style="color:red">内推</font>啊，给介绍下，感激不尽！（五年 Java 猿 坐标北京 极速入职）</i></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 万圣节 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>京郊赏红叶之行</title>
      <link href="/posts/1259393631.html"/>
      <url>/posts/1259393631.html</url>
      
        <content type="html"><![CDATA[<p>北京的秋天，像突然转凉的天气一样，在措不及防之时，已是漫山遍野的秋意。秋短且浓烈，已是赏红叶的最佳时节。香山的红叶出了名，不过就是人太多，工作日尚且如此，何况周末。和朋友合计了下，反正我俩以前也去过，这次就换个地儿。参考了网上赏红叶相关的攻略，决定自驾前往房山红井路——北京醉美的一条乡村公路！</p><a id="more"></a><p>红井路，号称帝都最具视觉曲线冲击力的公路，不仅景色优雅，同时也是骑行的圣地。2019.10.26日，环线走了一圈：丰台 –&gt; 门头沟 –&gt; G108 –&gt; 潭柘寺 –&gt; 河北镇 –&gt; 佛子庄 –&gt; 霞云岭 –&gt; 石板台 –&gt; 六石路 –&gt; 六渡 –&gt; 十渡 –&gt; 红娘口 –&gt; 红井路 –&gt; 井峪 –&gt; 庄户台 –&gt; 霞云岭 –&gt; 潭柘寺 –&gt; 丰台，早九晚七，全程小 200 公里。记得去年的 10.27日，我俩走的是京西玉河古道，从门头沟圈门徒步小 20 公里，翻山越岭后到达王平村。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/1.jpg" alt="漫山遍野的红叶"></p><p>出了城区，满山的红色，驾车驰骋，轮胎碾压地面吱吱作响，完全沉醉其中，当日天气通透，照片有点过爆</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/2.jpg" alt="Kyu9Rf.jpg"></p><p>第一站，打卡千年古刹——潭柘寺，途径此地也没打算进去，随便拍些照片就离开了</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/3.jpg" alt="白桦树？"></p><p>在河北镇国道 108 复线旁，遇见本地办酒席的，我俩还说有饭馆能吃饭来着，大写的尴尬。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/4.jpg" alt="河北镇"></p><p>沿着 108 国道导航到了石板台，中午一点，休整了下。离开国道进入六石路，道路开始宛转崎岖，部分村子看着已像是废弃</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/5.jpg" alt="KyG6Rs.jpg"></p><p>中途遇到快递小哥，偏远地界实属罕见，朋友特地让拍了一张</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/6.jpg" alt="KyJZTS.jpg"></p><p>石壁上挂着的红藤一路可见，当然还有路边停车拍照的人</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/7.jpg" alt="KyY7K1.jpg"></p><p>盘山公路上下不知多少转，终于抵达十渡风景区，我俩之前都来过，所以就没有停留，不过这穿山铁路确实让人印象深刻</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/8.jpg" alt="穿山铁路"></p><p>经十渡镇涞宝路向北进入通往蒲洼的 X017 县道，几公里后到达红娘口，这就是新修通没几年的由红娘口通往井儿峪的红井路。七层的盘山路像一部天梯，直达山顶，然后翻山越岭连接 108 国道</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/9.jpg" alt="KyaVPO.jpg"></p><p>沿途手机早已经没了信号，经红井路盘了多圈山路后，终于抵达盘山公路至高点，沿途早已停满了车，两车道硬是开出三车道来</p><p><video controls preload="none" width="100%" poster="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/17.jpg" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/video/20191026_hjl.mp4" style="max-height:100%;max-width:100%;display:block;margin-left:auto;margin-right:auto" loop>您的浏览器暂时无法播放此视频.&lt;/video</video></p><p>这山形陡峭几近直立，工程量和施工难度令人难以想象。2010 年建成后，2011 年夏天雨季就被冲毁，有不少路段重建。红井路是一条人文路，因为崇山峻岭，易于展开游击战，上世纪，这里是重要的抗日根据地，先烈们曾在这块热土上抛头颅洒热血，山顶的多处烽火台至今仍依稀可见！红井路南端的十渡现建有平西抗战英雄纪念馆，北端的霞云岭诞生过著名的经典红歌，修建红井路和六石路的一个原因就是为了解决沿线老革命区群众的交通出行问题。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/10.jpg" alt="KyrKsg.jpg"></p><p>个性的无人机自拍</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/11.jpg" alt="KyrayF.jpg"></p><p>好不容易从拥堵的车流中撤了出来，绕过海拔 970 米的山顶，之后来到新修建的房山霞云岭乡的地质郊野公园</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/12.jpg" alt="KysX36.jpg"></p><p>四周的景色还是不错的</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/13.jpg" alt="KyyIRP.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/14.jpg" alt="Ky6lee.jpg"></p><p>拍完照回到停车场，朋友突然想起相机落在凉亭座位上了，我俩火急火燎的又往上爬，边跑边安慰自己：有人在那里的话相机就没人拿。最终如愿取回，也算幸运啦！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/15.jpg" alt="Ky6bSx.jpg"></p><p>此时已是下午四点半，我们准备驱车往回赶，晚上担心山路不好走，争取在日落前回到 108 国道。我这盆友车技没得说，全程都是他开车，还经常聊到弯道超车、秋名山老司机…最终于晚七点抵达丰台住处。给帅哥露个脸，可惜还没咋拍清，当晚独自驱车怀柔对象家楼下，一句话搞定生气的女朋友，老司机无疑！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/11/16.jpg" alt="Ky2UQx.jpg"></p><p>最后，引用驴友的一段话结束此文：</p><blockquote class="blockquote-center"><p>捡起一片树叶，心中的一切负担压力随风而去，跑过一段山峦，所有的纠结都随风飘散，满是轻松。秋天，五彩纷呈而又沁人心脾，让人感受到生命的喜悦。简单本身就是一种幸福，不是意味着我们放弃了对目标的追逐，不是意味着不思进取。简单就是心态淡然、平和，从容处世，看淡得失，积极努力，简单本身就是一种幸福！</p></blockquote><p>秋天其实是一个浪漫又留有余温的季节，凋落了夏的炙热，迎来了五彩缤纷的山野。陶醉其中时，思绪随风飘，飘向了金灿灿的天地，飘向了美丽的山林，额头滴滴汗珠飘洒在大地，飘洒在 2019 年的秋天！</p><p>（本文完）</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 京郊 </tag>
            
            <tag> 自驾 </tag>
            
            <tag> 红叶 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本站已开通订阅功能</title>
      <link href="/posts/3121170261.html"/>
      <url>/posts/3121170261.html</url>
      
        <content type="html"><![CDATA[<p>本小站新开通订阅功能，欢迎大家体验，祝大家 1024 节快乐！</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   /$$    /$$$$$$   /$$$$$$  /$$   /$$</span><br><span class="line"> /$$$$   /$$$_  $$ /$$__  $$| $$  | $$</span><br><span class="line">|_  $$  | $$$$\ $$|__/  \ $$| $$  | $$</span><br><span class="line">  | $$  | $$ $$ $$  /$$$$$$/| $$$$$$$$</span><br><span class="line">  | $$  | $$\ $$$$ /$$____/ |_____  $$</span><br><span class="line">  | $$  | $$ \ $$$| $$            | $$</span><br><span class="line"> /$$$$$$|  $$$$$$/| $$$$$$$$      | $$</span><br><span class="line">|______/ \______/ |________/      |__/</span><br></pre></td></tr></table></figure></div><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/12/1.jpg" alt="1024"></p><p><a href="https://blog.csdn.net/vbirdbest/article/details/78995793" class="LinkCard" target="_blank" rel="noopener">1024 佛祖保佑、永无 BUG 、神兽护体、代码注释</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>浏览器控制台个性化输出</title>
      <link href="/posts/3274212224.html"/>
      <url>/posts/3274212224.html</url>
      
        <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width:100%"><img class="index_img_class" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/1.jpg"></div></div><div class="group-picture-row"></div></div></div><a id="more"></a><h3 id="尝鲜篇"><a href="#尝鲜篇" class="headerlink" title="尝鲜篇"></a>尝鲜篇</h3><p>网站加了 <a href="https://www.liaofuzhan.com/posts/2636059693.html">绚丽彩虹播放器</a> 后，在浏览器 Console 输出了彩色文字</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/2.jpg" alt="浏览器控制台"></p><p>觉得挺有意思，于是就研究了下，其实没啥特别的用处，就是打发下无聊时间。感兴趣的可以逛逛<a href="https://www.zhihu.com/question/28831274" target="_blank" rel="noopener">其它网站</a>，比如某东</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/3.jpg" alt="KAZM0x.png"></p><p>也有符号形状的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%c\n                                           :J:    \n                                          :. i    \n                  ..:::::::,:.,.,..:..::rr    J   \n               ::i:,               FB         ,v  \n  .i:i:   .:::7                     B.         :7 \n  7:  ,rri:  @B      .vOB@B@B@BY                ,:\n  Y          1       B@B@BkB@Pr        7,        :\n ::                                  ,7:.:      .i\n.i          .                      :7: .r.::i:::: \nr         i .7:,               .:ri:  ;i          \n7        77;.  .iii:::::::::iii:.    7,           \n :i:.,::;.  :r,      .....         i7             \n   .. .       :ii.               .v:              \n                .ii:.          .rr                \n                   .iii.      ii.                 \n                        i@8GB@                    \n                        vj1ULri                   \n                       7.     r.                  \n                  .,  ,r      ,;                  \n                  .E  0   %cJD   %c7                  \n                   jii2        u                  \n                    1i,   ::i. J                  \n                    i J  E   L v                  \n                   ,:iY 17   ::7                  \n                   iL ,iL7    rr                  \n                   Si r::5    i7                  \n                   ,  r       .v                  "</span>,<span class="string">"color: #000"</span>,<span class="string">"color: #f00"</span>,<span class="string">"color: #000"</span>)</span><br></pre></td></tr></table></figure></div><p>在控制台执行看下效果：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/4.jpg" alt="KAZRun.jpg"></p><p>B 站 Console：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/5.jpg" alt="KAmwY8.png"></p><p>知乎</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/6.jpg" alt="KARAOS.png"></p><p>ASCII 字符画制作工具挺多的，在线的如： <a href="http://picascii.com/" target="_blank" rel="noopener">picascii</a>、<a href="https://www.degraeve.com/img2txt.php" target="_blank" rel="noopener">IMG2TXT</a>。也可下载 <a href="https://sourceforge.net/projects/ascgen2/" target="_blank" rel="noopener">ASCII Generator</a>、<a href="https://monodraw.helftone.com" target="_blank" rel="noopener">Monodraw for macOS</a> 后本地操作。将生成的字符复制到 sublime 或者 notepad，把每行开头的换行删除并替换成 \n ，最后只有一行代码，保证没有换行后，在 console.log(“”) 中执行才不会出错。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/7.jpg" alt="KAKGy4.jpg"></p><p>上图是 <a href="https://www.cnblogs.com/Wayou/p/chrome_dev_tool_style_console.html#a" target="_blank" rel="noopener">Chrome 控制台新玩法</a> 这篇文章中列的三种 Console.log，大家可以执行看下效果：</p><ol><li>3D Text</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%c3D Text"</span>,<span class="string">" text-shadow: 0 1px 0 #ccc,0 2px 0 #c9c9c9,0 3px 0 #bbb,0 4px 0 #b9b9b9,0 5px 0 #aaa,0 6px 1px rgba(0,0,0,.1),0 0 5px rgba(0,0,0,.1),0 1px 3px rgba(0,0,0,.3),0 3px 5px rgba(0,0,0,.2),0 5px 10px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.2),0 20px 20px rgba(0,0,0,.15);font-size:5em"</span>)</span><br></pre></td></tr></table></figure></div><ol start="2"><li>Colorful CSS</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%cColorful CSS"</span>,<span class="string">"background: rgba(252,234,187,1);background: -moz-linear-gradient(left, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, rgba(0,210,247,1) 39%,rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, rgba(245,22,52,1) 100%);background: -webkit-gradient(left top, right top, color-stop(0%, rgba(252,234,187,1)), color-stop(12%, rgba(175,250,77,1)), color-stop(28%, rgba(0,247,49,1)), color-stop(39%, rgba(0,210,247,1)), color-stop(51%, rgba(0,189,247,1)), color-stop(64%, rgba(133,108,217,1)), color-stop(78%, rgba(177,0,247,1)), color-stop(87%, rgba(247,0,189,1)), color-stop(100%, rgba(245,22,52,1)));background: -webkit-linear-gradient(left, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, rgba(0,210,247,1) 39%, rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, rgba(245,22,52,1) 100%);background: -o-linear-gradient(left, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, rgba(0,210,247,1) 39%, rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, rgba(245,22,52,1) 100%);background: -ms-linear-gradient(left, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, rgba(0,210,247,1) 39%, rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, rgba(245,22,52,1) 100%);background: linear-gradient(to right, rgba(252,234,187,1) 0%, rgba(175,250,77,1) 12%, rgba(0,247,49,1) 28%, rgba(0,210,247,1) 39%, rgba(0,189,247,1) 51%, rgba(133,108,217,1) 64%, rgba(177,0,247,1) 78%, rgba(247,0,189,1) 87%, rgba(245,22,52,1) 100%);filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#fceabb', endColorstr='#f51634', GradientType=1 );font-size:5em"</span>)</span><br></pre></td></tr></table></figure></div><ol start="3"><li>Rainbow Text</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'%cRainbow Text '</span>, <span class="string">'background-image:-webkit-gradient( linear, left top, right top, color-stop(0, #f22), color-stop(0.15, #f2f), color-stop(0.3, #22f), color-stop(0.45, #2ff), color-stop(0.6, #2f2),color-stop(0.75, #2f2), color-stop(0.9, #ff2), color-stop(1, #f22) );color:transparent;-webkit-background-clip: text;font-size:5em;'</span>);</span><br></pre></td></tr></table></figure></div><p>其中，Rainbow Text 在 Safari 中正常显示，在 Chrome 中不显示文字</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/8.jpg" alt="KAKSeA.png"></p><p>将 <code>color:transparent;</code> 替换成 <code>color: rgba(0,0,0,0.1);</code> 后能看到文字但效果不一样了，不知道是哪个属性设置的事。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/9.jpg" alt="KAQkrQ.png"></p><p>修改后代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'%cRainbow Text '</span>, <span class="string">'background-image:-webkit-gradient( linear, left top, right top, color-stop(0, #f22), color-stop(0.15, #f2f), color-stop(0.3, #22f), color-stop(0.45, #2ff), color-stop(0.6, #2f2),color-stop(0.75, #2f2), color-stop(0.9, #ff2), color-stop(1, #f22) );color:rgba(0,0,0,0.1);-webkit-background-clip: text;font-size:5em;'</span>);</span><br></pre></td></tr></table></figure></div><p>附上我在用的一款（好奇就打开控制台看下吧~）：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%c Welcome To Leaf's Blog "</span>, <span class="string">"font-size:100px;color:white;border-radius:20px;height:200px; background:-webkit-linear-gradient(yellow,orange,red,green,blue,purple);text-shadow: 0 1px 0 #ccc,0 2px 0 #c9c9c9,0 3px 0 #bbb,0 4px 0 #b9b9b9,0 5px 0 #aaa,0 6px 1px rgba(0,0,0,.1),0 0 5px rgba(0,0,0,.1),0 1px 3px rgba(0,0,0,.3),0 3px 5px rgba(0,0,0,.2),0 5px 10px rgba(0,0,0,.25),0 10px 10px rgba(0,0,0,.2),0 20px 20px rgba(0,0,0,.15);"</span>);</span><br></pre></td></tr></table></figure></div><p>当然，也可以在 Console 输出一张图片：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"%c ."</span>, <span class="string">"padding:300px 600px;line-height:10px;background:url(https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/13/10.jpg) no-repeat;"</span>);</span><br></pre></td></tr></table></figure></div><h3 id="进阶篇"><a href="#进阶篇" class="headerlink" title="进阶篇"></a>进阶篇</h3><p>使用 ASCII 字符图案时，工具生成完了还需要自己格式化成一行，觉得有点不大方便，为什么不在网站中用代码生成了呢？于是 github 找的了 <a href="https://github.com/patorjk/figlet.js" target="_blank" rel="noopener">figlet</a>，也可参考 <a href="https://www.npmjs.com/package/figlet" target="_blank" rel="noopener">npm</a>，文档是一样的。可以使用 npm 命令直接安装，我使用的是 Getting Started - The Browser 这种方式，步骤如下：</p><ol><li><p>在 next/source/ 下新建 figlet 目录，将下载的 fetch.min.js 和 figlet.js 放这里。另外，还需要下载对应的字体库，放在 figlet 下的 fonts 目录。</p></li><li><p>在 next/layout/_custom/custom.swig 中添加代码</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.fig_font.enable %&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for('/figlet/fetch.min.js') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for('/figlet/figlet.js') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">      figlet.defaults(&#123;fontPath: <span class="string">"/figlet/fonts"</span>&#125;);</span></span><br><span class="line"><span class="actionscript">      figlet(<span class="string">"&#123;&#123; theme.fig_font.input_text &#125;&#125;"</span>, <span class="string">"&#123;&#123; theme.fig_font.font &#125;&#125;"</span>, <span class="function"><span class="keyword">function</span><span class="params">(err, text)</span> </span>&#123;</span></span><br><span class="line">          if (err) &#123;</span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.log(<span class="string">"something went wrong..."</span>);</span></span><br><span class="line"><span class="javascript">              <span class="built_in">console</span>.dir(err);</span></span><br><span class="line"><span class="actionscript">              <span class="keyword">return</span>;</span></span><br><span class="line">          &#125;</span><br><span class="line"><span class="javascript">          <span class="built_in">console</span>.log(text);</span></span><br><span class="line">      &#125;);</span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><ol start="3"><li>主题 _config.yml 文件中新增动态配置</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fig_font:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">font:</span> <span class="string">Big</span> <span class="string">Money-ne</span></span><br><span class="line">  <span class="attr">input_text:</span> <span class="string">Welcome</span> <span class="string">To</span> <span class="string">Leaf</span> <span class="string">s</span> <span class="string">Blog</span></span><br></pre></td></tr></table></figure></div><p>可根据字体库更改 font 配置项，去掉 .flf 后缀，效果可参考：</p><p><a href="http://patorjk.com/software/taag/" class="LinkCard" target="_blank" rel="noopener">FIGlet and AOL Macro Fonts Supported</a></p><p><a href="http://www.figlet.org/examples.html" class="LinkCard" target="_blank" rel="noopener">Some examples of FIGlet fonts</a></p><p>hexo 三连，看下控制台效果吧</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> /$$      /$$           /$$                                                   /$$$$$$$$              /$$                            /$$$$$$  /$$              /$$$$$$$  /$$                    </span><br><span class="line">| $$  /$ | $$          | $$                                                  |__  $$__/             | $$                           /$$__  $$| $/             | $$__  $$| $$                    </span><br><span class="line">| $$ /$$$| $$  /$$$$$$ | $$  /$$$$$$$  /$$$$$$  /$$$$$$/$$$$   /$$$$$$          | $$  /$$$$$$       | $$        /$$$$$$   /$$$$$$ | $$  \__/|_//$$$$$$$      | $$  \ $$| $$  /$$$$$$   /$$$$$$ </span><br><span class="line">| $$/$$ $$ $$ /$$__  $$| $$ /$$_____/ /$$__  $$| $$_  $$_  $$ /$$__  $$         | $$ /$$__  $$      | $$       /$$__  $$ |____  $$| $$$$      /$$_____/      | $$$$$$$ | $$ /$$__  $$ /$$__  $$</span><br><span class="line">| $$$$_  $$$$| $$$$$$$$| $$| $$      | $$  \ $$| $$ \ $$ \ $$| $$$$$$$$         | $$| $$  \ $$      | $$      | $$$$$$$$  /$$$$$$$| $$_/     |  $$$$$$       | $$__  $$| $$| $$  \ $$| $$  \ $$</span><br><span class="line">| $$$/ \  $$$| $$_____/| $$| $$      | $$  | $$| $$ | $$ | $$| $$_____/         | $$| $$  | $$      | $$      | $$_____/ /$$__  $$| $$        \____  $$      | $$  \ $$| $$| $$  | $$| $$  | $$</span><br><span class="line">| $$/   \  $$|  $$$$$$$| $$|  $$$$$$$|  $$$$$$/| $$ | $$ | $$|  $$$$$$$         | $$|  $$$$$$/      | $$$$$$$$|  $$$$$$$|  $$$$$$$| $$        /$$$$$$$/      | $$$$$$$/| $$|  $$$$$$/|  $$$$$$$</span><br><span class="line">|__/     \__/ \_______/|__/ \_______/ \______/ |__/ |__/ |__/ \_______/         |__/ \______/       |________/ \_______/ \_______/|__/       |_______/       |_______/ |__/ \______/  \____  $$</span><br><span class="line">                                                                                                                                                                                      /$$  \ $$</span><br><span class="line">                                                                                                                                                                                     |  $$$$$$/</span><br><span class="line">                                                                                                                                                                                      \______/</span><br></pre></td></tr></table></figure></div><p>以下是部分 <a href="https://github.com/leafjame/hexo-theme-next5-leaf/blob/master/README.pic.md" target="_blank" rel="noopener">个性化图案</a>，不是截图哦！</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">                                      _ooOoo_ </span><br><span class="line">                                     o8888888o </span><br><span class="line">                                     <span class="number">88</span><span class="string">" · "</span><span class="number">88</span> </span><br><span class="line">                                     (| ^.^ |) </span><br><span class="line">                                      O\ = <span class="regexp">/O </span></span><br><span class="line"><span class="regexp">                                  ____/</span><span class="string">`---'\____ </span></span><br><span class="line"><span class="string">                                  . ' \\| |// `</span>. </span><br><span class="line">                                 / \\||| : |||<span class="comment">// \ </span></span><br><span class="line">                               / _||||| -:- |||||- \ </span><br><span class="line">                                 | | \\\ - <span class="comment">/// | | </span></span><br><span class="line">                               | \_| <span class="string">''</span>\---<span class="regexp">/'' | | </span></span><br><span class="line"><span class="regexp">                                \ .-\__ `-` ___/</span>-. / </span><br><span class="line">                             ___<span class="string">`. .' /--.--\ `</span>. . __ </span><br><span class="line">                          .<span class="string">""</span> <span class="string">'&lt; `.___\_&lt;|&gt;_/___.'</span> &gt;<span class="string">'"". </span></span><br><span class="line"><span class="string">                         | | : `- \`.;`\ _ /`;.`/ - `: | | </span></span><br><span class="line"><span class="string">                           \ \ `-. \_ __\ /__ _/ .-` / / </span></span><br><span class="line"><span class="string">                          `.____`-.___\_____/___.-`____.-'</span> </span><br><span class="line">                           ⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒⌒ </span><br><span class="line">                  ............................................. </span><br><span class="line"></span><br><span class="line">                          佛 祖 保 佑            代 码 无 BUG  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">oooo                       .o88o. o8o                .o8       oooo                       </span><br><span class="line"><span class="string">`888                       888 `</span><span class="string">" `YP               "</span><span class="number">888</span>       <span class="string">`888                       </span></span><br><span class="line"><span class="string"> 888   .ooooo.   .oooo.   o888oo   '   .oooo.o       888oooo.   888   .ooooo.   .oooooooo </span></span><br><span class="line"><span class="string"> 888  d88' `</span><span class="number">88</span>b <span class="string">`P  )88b   888        d88(  "8       d88' `</span><span class="number">88</span>b  <span class="number">888</span>  d88<span class="string">' `88b 888'</span> <span class="string">`88b  </span></span><br><span class="line"><span class="string"> 888  888ooo888  .oP"888   888        `</span><span class="string">"Y88b.        888   888  888  888   888 888   888  </span></span><br><span class="line"><span class="string"> 888  888    .o d8(  888   888        o.  )88b       888   888  888  888   888 `88bod8P'  </span></span><br><span class="line"><span class="string">o888o `Y8bod8P' `Y888"</span><span class="string">"8o o888o       8"</span><span class="string">"888P'       `Y8bod8P' o888o `Y8bod8P' `8oooooo.  </span></span><br><span class="line"><span class="string">                                                                               d"</span>     YD  </span><br><span class="line">                                                                               <span class="string">"Y88888P'</span></span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">                                                       s&amp;@@@@@@@@@@@#HX9hr:                                                  </span><br><span class="line">                                                     ;GM@@@@@@@@@@@@@@@@#MBA85i                                              </span><br><span class="line">                                                   .G@@@@@@@@@@@@@@@@@@@@@@@@@@M9:                                           </span><br><span class="line">                                                  .&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#1                                          </span><br><span class="line">                                                  h@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@, .;rssr,                                 </span><br><span class="line">                                                ,sA@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@88B@@@@@#5                                </span><br><span class="line">                                           .rHHA#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@:                               </span><br><span class="line">                                           rB@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@i                               </span><br><span class="line">                                            ,<span class="number">5</span>B@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@X                                </span><br><span class="line">                                               is&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@X#@@@@@@@A                                 </span><br><span class="line">                                              ,s8@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@Hr M@@@@@@@B.                                </span><br><span class="line">                                              .,1&amp;M@@@@@@@B#@@@@@@@@@@@@@@@@@@@8  ;@@@@@@@Hi.                :1991:          </span><br><span class="line">           ,s9&amp;81;.                             , sA@@@@@@BG8XHB#@@@@@@@@@@@@@HS: 5@@@@@@@@i           .;13XM@@#H#@H91;.     </span><br><span class="line">       :s3&amp;##A&amp;#@@MA8Ss:                           .5HAX#@M@#BHHBM#@@@@@@@@#&amp;Ah.. G@@@@@@@@G       ,s9AMM@@@Xh;. .i9@@@BX9hr,</span><br><span class="line">.,ih9&amp;B@@@#s.   :hM@@HBMBXSi.                         ..ShSM@@@@@@&amp;XBHsHMHS: .:   3@@@@@@@@8  ,;19H#BG5irB@@H3.    r#@@@@@#@@</span><br><span class="line">B@@@BB@@@@M;    5H@@@9 ,r3ABM&amp;8Shsrii;;i;ir1h1.         .iM@@@@@@@@91, ;S,     sGXH@@@@@@@@X&amp;HM@@@9:    X@@@@@#s   &amp;@@@@@@G:s</span><br><span class="line">@A;.hM@@@@@A   G@@@@@@h    s#@@AXXXGGXGX#@@#@@Bs  .r58&amp;HM@@@@@@@@@@@#BA8Sr.  ,8@@#X@@@@@@Ariii5M@@H3.   8@@@@@@9   1B@@@@@@: </span><br><span class="line">H;  &amp;@@@@@#h   &amp;@@@@@Mi  ,G@@@@X      ;8#@#hrX@@X8M@@@@@@@@@@@@@@@@@@@@@@@M8SM@Hh.3@@@@M8.   .H@@@@@Hi   S@@@@@5    .SM@@@@S </span><br><span class="line">.   H@@@@X:    5@@@@M;   &amp;@@@@@@9    s#@@@@#r.9@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#3:9@@@@@@9    :M@@@@@@s    1@@@@s      ,9#@@H </span><br><span class="line">   ,M@@#h      i@@@M;    3@@@@@Mi    X@@@@@@@M@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@8     ;M@@@@M,     rM@@i        :G@@i</span><br><span class="line">   i@@X:       .B@M;     :#@@@@r     :#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@M.      ;M@@@X       :B@:          i&amp;S</span><br><span class="line">   hMh          GM;       X@@@h       S@@@@B#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B8@@@@h        i#@@h        ,1              </span><br><span class="line">   .,           ,:        s@@3        .H@@MB@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&amp;A@@H          r#@;                        </span><br><span class="line">                           HG          r@#r&amp;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@S B@r           s9                         </span><br><span class="line">                           ,            <span class="number">95</span>G@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@h;S                                       </span><br><span class="line">                                         <span class="number">3</span>@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@i                                        </span><br><span class="line">                                        r@@@@@@@H8@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@B.                                       </span><br><span class="line">                                        H@@@@@@#:;@@@@@@@@@@@@@@@@@@@@@@@@@@B8@@@@@@@S                                       </span><br><span class="line">                                     .;S@@@@@@@r ,M@@@@@@@@@@@@@@@@@@@@@@@@@X <span class="number">9</span>@@@@@@Mhi,                                    </span><br><span class="line">     ..        ;831:             .iSXM@@@@@@@#s  .M@@@@@@@@@@@@@@@@@@@@@@@@@X  9@@@@@@@@#A91:             i8AA1        :h,   </span><br><span class="line">    iBH.       .5B@#8i.      .iS&amp;M@@@@@@@@@@Ai   i@@@@@@@@@@@@@@@@@@@@@@@@@@M,  hB@@@@@@@@@@@H8h;       ;9@@#s        :&amp;@X,  </span><br><span class="line">   .B@@H359GX&amp;XGGM@@@@B9:,rSXM@@@@@@@@@@@B8s     h@@@@@@@@@@@@@@@@@@@@@@@@@@@s   .1GB@@@@@@@@@@@@BX5r,sA@@@@@MHAHBHHA&amp;#@@@9  </span><br><span class="line">    iG@@@@@@@@@@@@@@@@@@@#@@@@@@@@@@#H8h;        S@@@@@@@@@@@@@@@@@@@@@@@@@@#s       :19AM@@@@@@@@@@@#@@@@@@@@@@@@@@@@@@@h.  </span><br><span class="line">      1B@@@@@@@@@@@@@@@@@@@@@@@@BXSr,           5#@@@@@@@@@@@@@@@@@@@@@@@@@@@#h          .ih8A#@@@@@@@@@@@@@@@@@@@@@@M@@8    </span><br><span class="line">        ,,,595i:i1S9G&amp;AHBMBAGSr,               9@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@3               :13XHM###MMBHAX95SXBMGii,     </span><br><span class="line">　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure></div><p>看网站的源代码有时候也别有一番收获 -。-！</p><p><strong>参考文章</strong></p><p><a href="https://aotu.io/notes/2016/06/22/An-interesting-experience-on-console/index.html" target="_blank" rel="noopener">让console充满情怀</a><br><a href="https://www.cnblogs.com/Wayou/p/chrome_dev_tool_style_console.html#a" target="_blank" rel="noopener">Chrome 控制台新玩法</a><br><a href="https://developers.google.com/web/tools/chrome-devtools/console/console-write#string-substitution-and-formatting" target="_blank" rel="noopener">Tools for Web Developers</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> Console </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一款炫丽的网页播放器插件</title>
      <link href="/posts/2636059693.html"/>
      <url>/posts/2636059693.html</url>
      
        <content type="html"><![CDATA[<p>网上看到一款挺不错的基于 HTML 5 实现的播放器，支持多平台音乐解析、精准 LRC 歌词、智能记忆、多终端兼容等功能。目前免费使用，只需注册即可 DIY，本站点也进行了集成，可在左下角体验效果。</p><a id="more"></a><p><a href="https://player.liaofuzhan.com/music/" class="LinkCard" target="_blank" rel="noopener">星晨播放器</a></p><h3 id="星晨播放器"><a href="#星晨播放器" class="headerlink" title="星晨播放器"></a>星晨播放器</h3><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/1.gif" alt="星晨播放器"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/14/2.gif" alt="uxH7Hs.gif"></p><p>之前用的是 APlayer 这款播放器，其吸盘模式能放在网页左下角，外链需自己逐个添加。由于本站要过滤 HTTP 链接，想要的外链不好找，而且在 IE 11 （博主的破旧电脑） 里 JS 一大堆报错。。部分非主流浏览器（谁会用呢 -.-!）兼容还有点问题。</p><blockquote><p>PS：NexT 5.1.4 在 Pisces 这个 scheme 下，左侧栏 sidebar 在 IE 11 里会不显示。（本站已修复）</p></blockquote><p>基于这些原因（主要是找到了更好的~），所以将 Aplayer 进行了替换，步骤也很简单：</p><ol><li>在 next/layout/_layout.swig 的 body 体内部，新增如下代码：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- leafacePlayer --&gt;</span><br><span class="line">&#123;% <span class="keyword">if</span> theme.leafacePlayer.enable %&#125;</span><br><span class="line">  &lt;script id=<span class="string">"lfz"</span> src=<span class="string">"https://player.liaofuzhan.com/player/player.js"</span> key=<span class="number">1298162711527071745</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure></div><p>其还需要依赖 jquery ，我在做其它功能时已经引入，这里就不需要了，如果你加了以上代码没效果，那么再补充：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@3.0.0/dist/jquery.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><div class="note info"><p>以上链接均可换成 http 的，按需修改即可。</p></div><ol start="2"><li>在主题配置文件 _config.yml 中，添加配置：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://player.liaofuzhan.com/music/</span></span><br><span class="line"><span class="attr">leafacePlayer:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><ol start="3"><li>调整播放器在移动端大小（可选）。需要在 head 标签内添加以下代码，比如我是在 next/layout/_layout.swig 的 head 内加的：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.leafacePlayer.enable %&#125;</span><br><span class="line">  &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=0.9, maximum-scale=0.9"</span> /&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><p>hexo 三连即可看到效果。</p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>之前搭建的几款 JAVA 后端框架，可以用来 DIY 一个自己的播放器，彻底重写，有兴趣的朋友可以尝试一下。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> H5 播放器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL事务隔离级别和锁</title>
      <link href="/posts/2408076579.html"/>
      <url>/posts/2408076579.html</url>
      
        <content type="html"><![CDATA[<p>数据库为了维护事务的几种性质，尤其是一致性和隔离性，一般使用加锁这种方式。同时数据库又是个高并发的应用，同一时间会有大量的并发访问，如果加锁过度，会极大的降低并发处理能力。所以对于加锁的处理，可以说就是数据库对于事务处理的精髓所在。</p><a id="more"></a><h4 id="事务的基本要素（ACID）"><a href="#事务的基本要素（ACID）" class="headerlink" title="事务的基本要素（ACID）"></a>事务的基本要素（ACID）</h4><ol><li><p>原子性（Atomicity）：事务开始后所有操作，要么全部做完，要么全部不做，不可能停滞在中间环节。事务执行过程中出错，会回滚到事务开始前的状态，所有的操作就像没有发生一样。也就是说事务是一个不可分割的整体。</p></li><li><p>一致性（Consistency）：指事务将数据库从一种状态转变为另一种一致的的状态，事务开始前和结束后，数据库的完整性约束没有被破坏。比如A向B转账，不可能A扣了钱，B却没收到。</p></li><li><p>隔离性（Isolation）：同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。比如A正在从一张银行卡中取钱，在A取钱的过程结束前，B不能向这张卡转账。（注：MySQL 通过锁机制来保证事务的隔离性）</p></li><li><p>持久性（Durability）：事务完成后，事务对数据库的所有更新将被保存到数据库，不能回滚。（注：MySQL 使用 redo log 来保证事务的持久性）</p></li></ol><h4 id="事务的并发问题"><a href="#事务的并发问题" class="headerlink" title="事务的并发问题"></a>事务的并发问题</h4><ol><li><p>脏读：事务 A 读取了事务 B 更新的数据，然后 B 回滚操作，那么 A 读取到的数据是脏数据</p></li><li><p>不可重复读：事务 A 多次读取同一数据，事务 B 在事务 A 多次读取的过程中，对数据作了更新并提交，导致事务 A 多次读取同一数据时，结果不一致。</p></li><li><p>幻读：系统管理员 A 将数据库中所有学生的成绩从具体分数改为 ABCDE 等级，但是系统管理员 B 就在这个时候插入了一条具体分数的记录，当系统管理员 A 改结束后发现还有一条记录没有改过来，就好像发生了幻觉一样，这就叫幻读。</p></li></ol><div class="note info"><p>不可重复读：侧重于 <strong>修改</strong>，<br>幻读：侧重于 <strong>新增</strong> 或 <strong>删除</strong>。(Phantom Rows：幻影行)<br>解决不可重复读的问题只需锁住满足条件的行（行锁），解决幻读需要锁表（表锁）</p></div><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-next-key-locking.html" class="LinkCard" target="_blank" rel="noopener">MySQL Reference Manual</a></p><h4 id="事务的四种隔离级别"><a href="#事务的四种隔离级别" class="headerlink" title="事务的四种隔离级别"></a>事务的四种隔离级别</h4><p>在数据库操作中，为了有效保证并发读取数据的正确性，提出的事务隔离级别，数据库锁也是为了构建这些隔离级别存在的。</p><table><thead><tr><th align="center">隔离级别</th><th align="center">脏读（Dirty Read）</th><th align="center">不可重复读（NonRepeatable Read）</th><th align="center">幻读（Phantom Read）</th></tr></thead><tbody><tr><td align="center">未提交读（Read uncommitted）</td><td align="center">可能</td><td align="center">可能</td><td align="center">可能</td></tr><tr><td align="center">已提交读（Read committed）</td><td align="center">不可能</td><td align="center">可能</td><td align="center">可能</td></tr><tr><td align="center">可重复读（Repeatable read）</td><td align="center">不可能</td><td align="center">不可能</td><td align="center">可能</td></tr><tr><td align="center">串行化（Serializable ）</td><td align="center">不可能</td><td align="center">不可能</td><td align="center">不可能</td></tr></tbody></table><h5 id="READ-UNCOMMITTED（读未提交）"><a href="#READ-UNCOMMITTED（读未提交）" class="headerlink" title="READ UNCOMMITTED（读未提交）"></a>READ UNCOMMITTED（读未提交）</h5><p>该隔离级别的事务会读到其它未提交事务的数据，此现象也称之为脏读。</p><ol><li>新建一个名为 test 的数据库和一张 test 表，写入一条测试数据</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="keyword">test</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span>(<span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span>, age <span class="built_in">int</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span>(<span class="keyword">id</span>, age) <span class="keyword">values</span>(<span class="number">1</span>, <span class="number">18</span>);</span><br></pre></td></tr></table></figure></div><ol start="2"><li>准备两个终端，在此命名为终端 1 和终端 2，分别执行如下 sql ，调整隔离级别为 READ UNCOMMITTED</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @@session.transaction_isolation = <span class="string">'READ-UNCOMMITTED'</span>; // <span class="keyword">SET</span> <span class="keyword">SESSION</span> <span class="keyword">TRANSACTION</span> <span class="keyword">ISOLATION</span> <span class="keyword">LEVEL</span> <span class="keyword">READ</span> UNCOMMITTED;</span><br></pre></td></tr></table></figure></div><ol start="3"><li>在终端 1 ，开启一个事务，将 id 为 1 的 age 值更新为 20</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">test</span> <span class="keyword">set</span> age = <span class="number">20</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时看到一条 age 为 20 的记录</span></span><br></pre></td></tr></table></figure></div><ol start="4"><li>在终端 2，开启一个事务后查看表中的数据。</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时看到一条 age 为 20 的记录</span></span><br></pre></td></tr></table></figure></div><p>终端 2 读取到了终端 1 中未提交的事务（没有 commit 提交动作），即产生了脏读。如果此时终端 1 的事务因为某种原因回滚，所有的操作都将会被撤销，那终端 2 查询到的数据其实就是脏数据。</p><ol start="5"><li>在终端 1 执行 rollback</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">rollback</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时看到一条 age 为 18 的记录</span></span><br></pre></td></tr></table></figure></div><ol start="6"><li>如果此时在终端 2 执行更新语句</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">test</span> <span class="keyword">set</span> age = age + <span class="number">2</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时看到一条 age 为 20 的记录</span></span><br></pre></td></tr></table></figure></div><p>得到的 age 值是 20，而不是 22，因为 mysql 知道其它会话回滚了。要想解决脏读的问题，可以采用读已提交的隔离级别。</p><h5 id="READ-COMMITTED（读已提交）"><a href="#READ-COMMITTED（读已提交）" class="headerlink" title="READ COMMITTED（读已提交）"></a>READ COMMITTED（读已提交）</h5><p>一个事务可以读取另一个已提交的事务，多次读取会造成不一样的结果，此现象称为不可重复读问题，是 Oracle 和 SQL Server 的默认隔离级别。</p><ol><li>重置 test 数据库 test 表数据为原始状态后，在终端 1 和 终端 2 分别调整隔离级别为 READ COMMITTED</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @@session.transaction_isolation = <span class="string">'READ-COMMITTED'</span>;// <span class="keyword">SET</span> <span class="keyword">SESSION</span> <span class="keyword">TRANSACTION</span> <span class="keyword">ISOLATION</span> <span class="keyword">LEVEL</span> <span class="keyword">READ</span> COMMITTED;</span><br></pre></td></tr></table></figure></div><ol start="2"><li>在终端 1，开启一个事务，将 age 为 18 的记录更新为 20，并确认记录数变更过来。</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">test</span> <span class="keyword">set</span> age = <span class="number">20</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时看到一条 age 为 20 的记录</span></span><br></pre></td></tr></table></figure></div><ol start="3"><li>在终端 2，开启一个事务后，查看表中的数据</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时看到一条 age 为 18 的记录</span></span><br></pre></td></tr></table></figure></div><p>终端 1 事务还没提交，终端 2 不能查询到 age 已经更新的数据，解决了脏读问题</p><ol start="4"><li>在终端 1，提交事务</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></div><ol start="5"><li>切换到终端 2</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时看到一条 age 为 20 的记录</span></span><br></pre></td></tr></table></figure></div><p>终端 2 在开启了一个事务之后，在第一次读取 test 表（此时终端 1 的事务还未提交）时 age 为 18，在第二次读取 test 表（此时终端 1 的事务已经提交）时 age 已经变为 20，说明在此隔离级别下已经读取到已提交的事务，然而终端 2 两次读取的结果不一致，即产生了不可重复读的问题。</p><h5 id="REPEATABLE-READ（可重复读）"><a href="#REPEATABLE-READ（可重复读）" class="headerlink" title="REPEATABLE READ（可重复读）"></a>REPEATABLE READ（可重复读）</h5><p>该隔离级别是 MySQL 默认的隔离级别，在同一个事务里，select 的结果是事务开始时时间点的状态，因此，同样的 select 操作读到的结果会是一致的，但是，会有幻读现象。MySQL 的 InnoDB 引擎可以通过 next-key locks 机制来避免幻读。</p><ol><li>重置 test 数据库 test 表数据为原始状态后，在终端 1 和 终端 2 分别调整隔离级别为 REPEATABLE-READ</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @@session.transaction_isolation = <span class="string">'REPEATABLE-READ'</span>; //<span class="keyword">SET</span> <span class="keyword">SESSION</span> <span class="keyword">TRANSACTION</span> <span class="keyword">ISOLATION</span> <span class="keyword">LEVEL</span> REPEATABLE <span class="keyword">READ</span>;</span><br></pre></td></tr></table></figure></div><ol start="2"><li>在终端 1，开启一个事务</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时只有一条 age 为 18 的记录</span></span><br></pre></td></tr></table></figure></div><ol start="3"><li>在终端 2，开启一个事务</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">-- 此时只有一条 age 为 18 的记录</span></span><br></pre></td></tr></table></figure></div><ol start="4"><li>切换到终端 1，增加一条记录并提交</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span>(<span class="keyword">id</span>, age) <span class="keyword">values</span>(<span class="number">2</span>, <span class="number">30</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure></div><ol start="5"><li>切换到终端 2</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>; <span class="comment">--此时仍只有一条 age 为 18 的记录</span></span><br></pre></td></tr></table></figure></div><p>通过这一步可以证明，在该隔离级别下已经读取不到别的已提交的事务，如果想看到终端 1 提交的事务，在终端 2 将当前事务提交后再次查询就可以读取到终端 1 提交的事务了。</p><ol start="6"><li>此时接着在终端 2 插入一条数据</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span>(<span class="keyword">id</span>, age) <span class="keyword">values</span>(<span class="number">2</span>, <span class="number">30</span>); <span class="comment">-- 报错：ERROR 1062 (23000): Duplicate entry '2' for key 'PRIMARY'</span></span><br></pre></td></tr></table></figure></div><p>也许到这里您心里可能会有疑问，明明在第 5 步没有数据，为什么在这里会报错呢？其实这就是该隔离级别下可能产生的问题，MySQL 称之为幻读。注意我在这里强调的是 MySQL 数据库，Oracle 数据库对于幻读的定义可能有所不同。</p><blockquote><p>幻读的另一种解释：当某个事务在读取某个范围内的记录时，另外一个事务又在该范围内插入了新的记录，当之前的事务再次读取该范围的记录时，会产生幻行（PhantomRow）</p></blockquote><h5 id="SERIALIZABLE（串行化）"><a href="#SERIALIZABLE（串行化）" class="headerlink" title="SERIALIZABLE（串行化）"></a>SERIALIZABLE（串行化）</h5><p>在该隔离级别下事务都是串行化执行的，MySQL 数据库的 InnoDB 引擎会给读操作隐式加一把读共享锁，从而避免了脏读、不可重读复读和幻读问题。</p><ol><li>重置 test 数据库 test 表数据为原始状态后，在终端 1 和 终端 2 分别调整隔离级别为 SERIALIZABLE</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> @@session.transaction_isolation = <span class="string">'SERIALIZABLE'</span>; // <span class="keyword">set</span> <span class="keyword">session</span> <span class="keyword">transaction</span> <span class="keyword">isolation</span> <span class="keyword">level</span> <span class="keyword">serializable</span>;</span><br></pre></td></tr></table></figure></div><ol start="2"><li>在终端 1，开启一个事务，并写入一条数据</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span>(<span class="keyword">id</span>, age) <span class="keyword">values</span>(<span class="number">3</span>, <span class="number">30</span>);</span><br></pre></td></tr></table></figure></div><ol start="3"><li>打开终端 2，开启一个事务</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">test</span>(<span class="keyword">id</span>, age) <span class="keyword">values</span>(<span class="number">4</span>, <span class="number">40</span>); // or <span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span>;</span><br></pre></td></tr></table></figure></div><p>此时终端 2 会一直卡住，直到超时（除非终端 1 提交事务），报错信息如下：<code>ERROR 1205 (HY000): Lock wait timeout exceeded; try restarting transaction</code>，其中超时参数是由 innodb_lock_wait_timeout 控制。在 mysql 中事务隔离级别为 serializable 时会锁表，因此不会出现幻读的情况，这种隔离级别并发性极低，开发中很少会用到。</p><div class="note danger"><p>不要看到 select 就说不会加锁了，在 Serializable 这个级别，还是会加锁的！</p></div><p>InnoDB 和 XtraDB 存储引擎通过多版本并发控制（Multi Version Concurrency Control）解决了幻读的问题，那么 MVCC 是如何解决幻读的呢？</p><h4 id="MVCC（多版本并发控制）"><a href="#MVCC（多版本并发控制）" class="headerlink" title="MVCC（多版本并发控制）"></a>MVCC（多版本并发控制）</h4><p>MySQL 的大多数事务型存储引擎实现的都不是简单的行级锁。基于提升并发性能的考虑，它们一般都同时实现了 MVCC。不仅是 MySQL，包括 Oracle、PostgreSQL 等其他数据库系统也都实现了 MVCC，但各自的实现机制不尽相同，因为 MVCC 没有一个统一的实现标准。可以认为MVCC是行级锁的一个变种，但是它在很多情况下避免了加锁操作，因此开销更低。虽然实现机制有所不同，但大都实现了非阻塞的读操作，写操作也只锁定必要的行。</p><p>MVCC 的实现，是通过保存数据在某个时间点的快照来实现的。也就是说，不管需要执行多长时间，每个事务看到的数据都是一致的。根据事务开始的时间不同，每个事务对同一张表，同一时刻看到的数据可能是不一样的。不同存储引擎的 MVCC 实现是不同的，典型的有乐观并发控制控制（乐观锁）和悲观并发控制（悲观锁）。</p><p>在 InnoDB 中，是通过在每行记录后面保存两个隐藏的列来实现 MVCC 的。这两个列，一个保存了行的创建时间，一个保存行的过期时间（或删除时间）。当然存储的并不是实际的时间值，而是系统版本号（system version number），每开始一个新的事务，系统版本号都会自动递增。事务开始时刻的系统版本号会作为事务的版本号，用来和查询到的每行记录的版本号进行比较。在可重读 Repeatable Read 事务隔离级别下：</p><ul><li><p>SELECT时，读取创建版本号 &lt;= 当前系统版本号，删除版本号为空或 &gt; 当前系统版本号。</p></li><li><p>INSERT时，保存当前系统版本号为行的创建版本号</p></li><li><p>DELETE时，存当前系统版本号为行的删除版本号</p></li><li><p>UPDATE时，插入一行新记录，保存当前系统版本号作为行版本号，同时保存当前系统版本号到原来的行作为行删除标识。</p></li></ul><p>通过 MVCC，虽然每行记录都需要额外的存储空间，更多的行检查工作以及一些额外的维护工作，但可以减少锁的使用，使大多数读操作都可以不用加锁。这样设计使得读数据操作很简单，性能很好，并且也能保证只会读取到符合需求的行。</p><div class="note danger"><p>MVCC 只在 REPEATABLE-READ 和 READ-COMMITTED 这两个隔离级别下工作。</p></div><p>其他两个隔离级别都和 MVCC 不兼容，因为 READ-UNCOMMITTED 总是读取最新的数据行，而不是符合当前事务版本的数据行。而 SERIALIZABLE 则会对所有读取的行都加锁。</p><h4 id="MySQL-中的锁"><a href="#MySQL-中的锁" class="headerlink" title="MySQL 中的锁"></a>MySQL 中的锁</h4><p>MySQL中锁的种类很多，常见的有表锁和行锁，也有新加入的 Metadata Lock 等等，表锁是对一整张表加锁，虽然可分为读锁和写锁，但毕竟是锁住整张表，会导致并发能力下降，一般是做 ddl 处理时使用。行锁则是锁住数据行，这种加锁方法比较复杂，由于只锁住有限的数据，对于其它数据不加限制，所以并发能力强，MySQL 一般都是用行锁来处理并发事务。这里主要讨论的也就是行锁。</p><h5 id="一次封锁-or-两段锁？"><a href="#一次封锁-or-两段锁？" class="headerlink" title="一次封锁 or 两段锁？"></a>一次封锁 or 两段锁？</h5><p>因为有大量的并发访问，为了预防死锁，一般应用中推荐使用一次封锁法，就是在方法的开始阶段，已经预先知道会用到哪些数据，然后全部锁住，在方法运行之后，再全部解锁。这种方式可以有效的避免循环死锁，但在数据库中却不适用，因为在事务开始阶段，数据库并不知道会用到哪些数据。</p><p>数据库遵循的是两段锁协议，将事务分成两个阶段，加锁阶段和解锁阶段（所以叫<strong>两段锁</strong>）</p><ul><li><p>加锁阶段：在该阶段可以进行加锁操作。在对任何数据进行读操作之前要申请并获得S锁（共享锁，其它事务可以继续加共享锁，但不能加排它锁），在进行写操作之前要申请并获得X锁（排它锁，其它事务不能再获得任何锁）。加锁不成功，则事务进入等待状态，直到加锁成功才继续执行。</p></li><li><p>解锁阶段：当事务释放了一个封锁以后，事务进入解锁阶段，在该阶段只能进行解锁操作不能再进行加锁操作。</p></li></ul><table><thead><tr><th align="center">事务</th><th align="center">加锁/解锁处理</th></tr></thead><tbody><tr><td align="center">begin；</td><td align="center"></td></tr><tr><td align="center">insert into test …..</td><td align="center">加 insert 对应的锁</td></tr><tr><td align="center">update test set…</td><td align="center">加 update 对应的锁</td></tr><tr><td align="center">delete from test ….</td><td align="center">加 delete 对应的锁</td></tr><tr><td align="center">commit;</td><td align="center">事务提交时，同时释放 insert、update、delete 对应的锁</td></tr></tbody></table><p>虽然无法避免死锁，但是两段锁协议可以保证事务的并发调度是串行化（串行化很重要，尤其是在数据恢复和备份的时候）的。</p><h5 id="Next-Key-锁"><a href="#Next-Key-锁" class="headerlink" title="Next-Key 锁"></a>Next-Key 锁</h5><p>在 REPEATABLE-READ 级别中，通过 MVCC 机制，虽然让数据变得可重复读，但我们读到的数据可能是历史数据，不是数据库当前实时的数据！这在一些对于数据的时效特别敏感的业务中，就很可能出问题。</p><p>对于这种读取历史数据的方式，我们叫它快照读 (snapshot read)，而读取数据库当前版本数据的方式，叫当前读 (current read)。很显然，在 MVCC 中：</p><ul><li><p>快照读：就是 select</p><ul><li>select * from table … ;</li></ul></li><li><p>当前读：特殊的读操作，插入/更新/删除操作，属于当前读，处理的都是当前的数据，需要加锁。</p><ul><li>select * from table where ? lock in share mode;</li><li>select * from table where ? for update;</li><li>insert …;</li><li>update …;</li><li>delete …;</li></ul></li></ul><p>事务的隔离级别实际上都是定义了“当前读”的级别，MySQL 为了减少锁处理（包括等待其它锁）的时间，提升并发能力，引入了快照读的概念，使得 select 不用加锁。而 update、insert 这些“当前读”，就需要另外的模块来解决了。</p><ul><li><p>Record Locks（也称行锁）</p><ul><li>该锁为索引记录上的锁，如果表中没有定义索引，InnoDB 会默认为该表创建一个隐藏的聚簇索引，并使用该索引锁定记录。</li></ul></li><li><p>Gap Locks</p><ul><li>该锁会锁定一个范围，但是不括记录本身。可以通过修改隔离级别为 READ COMMITTED 或者配置 innodb_locks_unsafe_for_binlog 参数为 ON。</li></ul></li><li><p>Next-key Locks</p><ul><li>是 Record Locks 和 Gap Locks 的组合，即锁定一个范围并且锁定该记录本身。</li></ul></li></ul><div class="note info"><p>Gap Locks：如果没有使用索引，那么会给全表加入 gap 锁。它不能像 Record Locks 那样经过MySQL Server 过滤自动解除不满足条件的锁。因为没有索引，则这些字段也就没有排序，也就没有区间。除非该事务提交，否则其它事务无法插入任何数据。</p></div><div class="note info"><p>Next-key Locks：如果索引有唯一属性，则 InnnoDB 会自动将 Next-key Locks 降级为 Record Locks。举个例子，如果一个索引有 1, 3, 5 三个值，则该索引锁定的区间为 (-∞，1]， (1，3]， (3，5]， (5，+ ∞)</p></div><p>Record Locks 防止别的事务修改或删除，GAP 锁防止别的事务新增，Record Locks 和 GAP 锁结合形成的的 Next-Key 锁共同解决了 RR 级别在写数据时的幻读问题。</p><h5 id="死锁"><a href="#死锁" class="headerlink" title="死锁"></a>死锁</h5><p>死锁是指两个或两个以上的进程在执行过程中，由于竞争资源或者由于彼此通信而造成的一种阻塞的现象，若无外力作用，它们都将无法推进下去。此时称系统处于死锁状态或系统产生了死锁，这些永远在互相等待的进程称为死锁进程。InnoDB 引擎采取的是 wait-for graph 等待图的方法来自动检测死锁，如果发现死锁会自动回滚一个事务。</p><p>还是以 test 表中的数据来演示：</p><ol><li>在终端 1，开启一个事务，手动给 id 为 1 的记录加 X 锁</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br></pre></td></tr></table></figure></div><ol start="2"><li>在终端 2，开启一个事务，手动给 id 为 2 的记录加 X 锁</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span>;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">2</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br></pre></td></tr></table></figure></div><ol start="3"><li>切换到终端 1，手动给 id 为 2 的记录加 X 锁，此时会一直卡住，因为此时在等待第 2 步中 X 锁的释放，直到超时，超时时间由 innodb_lock_wait_timeout 控制。</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">2</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br></pre></td></tr></table></figure></div><ol start="4"><li>在锁超时前立刻切换到终端 2，手动给 id 为 1 的记录加 X 锁，此时又会等待第 1 步中 X 所的释放，两个终端都在等待资源的释放，所以 InnoDB 引擎会立马检测到死锁产生，自动回滚一个事务，以防止死锁一直占用资源。</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SQL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">test</span> <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span> <span class="keyword">for</span> <span class="keyword">update</span>;</span><br><span class="line">ERROR 1213 (40001): Deadlock found when trying to get <span class="keyword">lock</span>; try restarting transaction</span><br></pre></td></tr></table></figure></div><p>此时，通过 show engine innodb status\G 命令可以看到 LATEST DETECTED DEADLOCK 相关信息，即表明有死锁发生；或者通过配置 innodb_print_all_deadlocks（MySQL 5.6.2 版本开始提供）参数为 ON 将死锁相关信息打印到 MySQL 的错误日志。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">------------------------</span><br><span class="line">LATEST DETECTED DEADLOCK</span><br><span class="line">------------------------</span><br><span class="line">2019-10-08 15:54:49 0x70000be86000</span><br><span class="line">*** (1) TRANSACTION:</span><br><span class="line">TRANSACTION 11824, ACTIVE 51 sec starting index read</span><br><span class="line">mysql tables in use 1, locked 1</span><br><span class="line">LOCK WAIT 3 lock struct(s), heap size 1136, 2 row lock(s)</span><br><span class="line">MySQL thread id 3177, OS thread handle 123145500876800, query id 1847 localhost 127.0.0.1 root statistics</span><br><span class="line">select * from test where id = 2 for update</span><br><span class="line">*** (1) WAITING FOR THIS LOCK TO BE GRANTED:</span><br><span class="line">RECORD LOCKS space id 83 page no 4 n bits 80 index PRIMARY of table `test1`.`test` trx id 11824 lock_mode X locks rec but not gap waiting</span><br><span class="line">Record lock, heap no 3 PHYSICAL RECORD: n_fields 4; compact format; info bits 0</span><br><span class="line"> 0: len 4; hex 80000002; asc     ;;</span><br><span class="line"> 1: len 6; hex 000000002df4; asc     - ;;</span><br><span class="line"> 2: len 7; hex 81000000bd0110; asc        ;;</span><br><span class="line"> 3: len 4; hex 8000001e; asc     ;;</span><br><span class="line"></span><br><span class="line">*** (2) TRANSACTION:</span><br><span class="line">TRANSACTION 11825, ACTIVE 30 sec starting index read</span><br><span class="line">mysql tables in use 1, locked 1</span><br><span class="line">3 lock struct(s), heap size 1136, 2 row lock(s)</span><br><span class="line">MySQL thread id 3178, OS thread handle 123145502089216, query id 1851 localhost 127.0.0.1 root statistics</span><br><span class="line">select * from test where id = 1 for update</span><br><span class="line">*** (2) HOLDS THE LOCK(S):</span><br><span class="line">RECORD LOCKS space id 83 page no 4 n bits 80 index PRIMARY of table `test1`.`test` trx id 11825 lock_mode X locks rec but not gap</span><br><span class="line">Record lock, heap no 3 PHYSICAL RECORD: n_fields 4; compact format; info bits 0</span><br><span class="line"> 0: len 4; hex 80000002; asc     ;;</span><br><span class="line"> 1: len 6; hex 000000002df4; asc     - ;;</span><br><span class="line"> 2: len 7; hex 81000000bd0110; asc        ;;</span><br><span class="line"> 3: len 4; hex 8000001e; asc     ;;</span><br><span class="line"></span><br><span class="line">*** (2) WAITING FOR THIS LOCK TO BE GRANTED:</span><br><span class="line">RECORD LOCKS space id 83 page no 4 n bits 80 index PRIMARY of table `test1`.`test` trx id 11825 lock_mode X locks rec but not gap waiting</span><br><span class="line">Record lock, heap no 2 PHYSICAL RECORD: n_fields 4; compact format; info bits 0</span><br><span class="line"> 0: len 4; hex 80000001; asc     ;;</span><br><span class="line"> 1: len 6; hex 000000002de3; asc     - ;;</span><br><span class="line"> 2: len 7; hex 010000017402f8; asc     t  ;;</span><br><span class="line"> 3: len 4; hex 80000012; asc     ;;</span><br><span class="line"></span><br><span class="line">*** WE ROLL BACK TRANSACTION (2)</span><br></pre></td></tr></table></figure></div><h5 id="锁的优化建议"><a href="#锁的优化建议" class="headerlink" title="锁的优化建议"></a>锁的优化建议</h5><p>如果利用不好，会给业务造成大量的卡顿现象，在了解了锁相关的一些知识点后，我们可以有意识的去避免锁带来的一些问题。</p><ol><li><p>合理设计索引，让 InnoDB 在索引键上面加锁的时候尽可能准确，尽可能的缩小锁定范围，避免造成不必要的锁定而影响其他 Query 的执行。</p></li><li><p>尽可能减少基于范围的数据检索过滤条件，避免因为间隙锁带来的负面影响而锁定了不该锁定的记录。</p></li><li><p>尽量控制事务的大小，减少锁定的资源量和锁定时间长度。</p></li><li><p>在业务环境允许的情况下，尽量使用较低级别的事务隔离，以减少 MySQL 因为实现事务隔离级别所带来的附加成本。</p></li></ol><p><strong>参考文章</strong></p><p><a href="https://dev.mysql.com/doc/refman/8.0/en/innodb-multi-versioning.html" target="_blank" rel="noopener">InnoDB Multi-Versioning</a><br><a href="https://book.douban.com/subject/23008813/" target="_blank" rel="noopener">高性能MySQL</a><br><a href="https://blog.csdn.net/ljwy1234/article/details/79519405" target="_blank" rel="noopener">MySQL的四种事务隔离级别</a><br><a href="https://www.ibm.com/developerworks/cn/opensource/os-mysql-transaction-isolation-levels-and-locks/index.html" target="_blank" rel="noopener">MySQL 事务隔离级别和锁</a><br><a href="https://tech.meituan.com/2014/08/20/innodb-lock.html" target="_blank" rel="noopener">Innodb中的事务隔离级别和锁的关系</a></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> MySql </tag>
            
            <tag> 事务 </tag>
            
            <tag> 锁 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>转手两张演唱会门票</title>
      <link href="/posts/405433715.html"/>
      <url>/posts/405433715.html</url>
      
        <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-container"><div class="group-picture-row"><div class="group-picture-column" style="width:100%"><img class="index_img_class" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/15/1.jpg"></div></div><div class="group-picture-row"></div></div></div><a id="more"></a><p>朋友处有多余的许巍演唱会门票，分别是天津站、济南站各两张，现优惠转手其中某一场地的两张！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/15/2.jpg" alt="ucYAG6.jpg"></p><p>喜欢许少年的歌之后，都梦想着去看一次演唱会。最近北方城市开始预售了，朋友担心买不到北京场，就先预定了济南和天津这两个近的，谁知两场都出票了，还不能退 -.-！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/15/3.jpg" alt="ucUfoj.jpg"></p><p>博主最近金融危机，心有余而力不足，在这帮朋友转一下，有意联系！！！</p><p>以下是大麦网的售票信息：</p><p><a href="https://detail.damai.cn/item.htm?id=601214301490" class="LinkCard" target="_blank" rel="noopener">许巍“无尽光芒”巡回演唱会</a></p><div class="note danger"><p>2019.10.28 更新：<font style="color:red">门票已售！门票已售！！门票已售！！！</font></p></div>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 许巍 </tag>
            
            <tag> 演唱会 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>街拍共和国70年庆典</title>
      <link href="/posts/3459101210.html"/>
      <url>/posts/3459101210.html</url>
      
        <content type="html"><![CDATA[<p><video controls preload="none" width="100%" poster="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/1.jpg" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/video/20191001.mp4" style="max-height:100%;max-width:100%;display:block;margin-left:auto;margin-right:auto" loop>您的浏览器暂时无法播放此视频.</video></p><a id="more"></a><blockquote><p>拍摄于西二环外长安街，首都博物馆东侧</p></blockquote><p>早在几个月前，就和女票合计着去现场看70年阅兵，这十年一遇的大庆活动。这不10月3号才给她送回家，终于自己一个人了~！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/2.jpg" alt="u0kDe0.png"></p><p>一五年的九三阅兵，本可出门观看的，自己硬是给错过了，说什么一大早在电视机前观看，朋友在天坛医院就赶个正巧。鉴于此，这次不想再错过了，况且还住这么近，首选去现场，回来看录播。早在节前几天，各大网站就发布了有关阅兵的各种动态，除此，交通出行也是最需关注的：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/3.gif" alt="u0AZmq.gif"></p><p>信息来自 <a href="http://jtgl.beijing.gov.cn/jgj/jgj_PAGE_KEY/index.html" target="_blank" rel="noopener">北京交管局</a>：<a href="http://jtgl.beijing.gov.cn/jgj/bjsgajtg/631931/index.html" target="_blank" rel="noopener">关于对国庆70周年庆祝活动采取交通管制的通告</a>。</p><p>十一当天，二环内基本都戒严了，地铁一号线全线封站，进二环的公交车也停了，<a href="https://weibo.com/bjsubway?is_hot=1#_rnd1570095122353" target="_blank" rel="noopener">北京地铁官方微博</a> 也有相关公告：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/4.jpg" alt="u0KEw9.png"></p><p>庆幸的是还有去北京西站的公交车，终点小马厂，离二环很近。我俩八点多赶到公交站，路上的车很少，沉浸在空城的错觉中。然而每辆爆满的公交车把我拉回了现实，赶火车的、观典礼的挤了一路。好不容易熬到终点，路上的行人开始多起来，都往城中心靠。看时间差不多了，我俩就近选择了往长安街方向走，到博物馆这里时，道路已被封锁不能再往前走了，四周挤满了人。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/5.jpg" alt="u0Kz0H.jpg"></p><p><video controls preload="none" width="100%" poster="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/6.jpg" src="https://www.liaofuzhan.com/video/20191001_01.mp4" style="max-height:100%;max-width:100%;display:block;margin-left:auto;margin-right:auto" loop>您的浏览器暂时无法播放此视频.</video></p><p>九点左右，好不容易占据了前排有利位置。期间还有从外地赶来的，在路中间放折叠椅躺着。凳子、马扎、电动车、自行车…一股脑的挤在马路中间，以致车不能行，熙熙攘攘，期间各种口角不断。之后来了这个地方的区域长维持秩序，太拥挤了怕发生事故，所有人都得往后疏散。在这熬了一个钟都累蒙了，我俩不打算继续挤在这里，就选择了后方的天桥，事实证明我们是明智的，这是一个绝佳的观看点，飞机正好从上方经过。后来桥上人多了起来，我俩开始往下撤，不敢往桥中间走了。</p><p><video controls preload="none" width="100%" poster="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/7.jpg" src="https://cdn.jsdelivr.net/gh/leafjame/cdn/video/20191001_02.mp4" style="max-height:100%;max-width:100%;display:block;margin-left:auto;margin-right:auto" loop>您的浏览器暂时无法播放此视频.</video></p><p>这就是前文所拍摄视频的地方，期间还有轰炸机、歼15、歼20、东风5B、东风41…就是电视上看到的那些啦，坦克和方队不到这里，听说是在西单那边就往平安里走了。拍了很多视频，单个文件太大，就不上传了，有需要分享的可留言。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/8.jpg" alt="u0UG7V.png"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/9.jpg" alt="u0UYkT.png"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/10.jpg" alt="u0Ud1J.png"></p><p>东风核导弹（DF-5B、DF-41），拍摄距离有点远，毕竟手机不支持30倍变焦~</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/11.jpg" alt="u0UDn1.png"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/12.jpg" alt="u0Us76.png"></p><blockquote><p>东风快递，使命必达！</p></blockquote><p>之后的彩车、群众游行这边也看不到，我们就开始往回走了。南面的莲花池路开始出现从天安门返程的车，一排排呼啸而过。在公交站等了近一个小时，被告知发车需要等通知，只能转车回家了，还走了几公里路，不由得又想起了 <a href="https://www.liaofuzhan.com/posts/2291078664.html">915</a> 那天的情形，哈哈！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/16/13.jpg" alt="u0UzBq.jpg"></p><p>公交站贴出的暂停发车通知，这点比较人性化，回家赶个晚场，继续看录播。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 国庆 </tag>
            
            <tag> 70年 </tag>
            
            <tag> 阅兵 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 优化与加速</title>
      <link href="/posts/1599400735.html"/>
      <url>/posts/1599400735.html</url>
      
        <content type="html"><![CDATA[<p>由于网站部署在 GitHub Pages，服务器在美国，在国内部分地区访问速度比较慢而且还不是很稳定。在尝试将加载的google字体库切换成烧饼提供的加速站点后，网站响应速度有一定提升。然后就是使用了 InstantClick 和 hexo 的两个插件 hexo-service-worker、 hexo-filter-optimize 来提速，期间也接触了下 PWA，下边将分别介绍。</p><a id="more"></a><div class="note info"><p>如果你的域名已备案，可使用国内云服务商提供的 CDN 服务，相关操作可谷歌或百度。</p></div><h3 id="google字体库切换"><a href="#google字体库切换" class="headerlink" title="google字体库切换"></a>google字体库切换</h3><p>切换步骤可参考reuixiy大佬的文章：</p><p><a href="https://io-oi.me/tech/noto-serif-sc-added-on-google-fonts/" class="LinkCard" target="_blank" rel="noopener">Google Fonts 已支持思源宋体！</a></p><p>烧饼网站也有相关的替换步骤：</p><p><a href="https://sb.sb/blog/css-cdn/" class="LinkCard" target="_blank" rel="noopener">前端 CDNJS 库及 Google Fonts、Ajax 和 Gravatar 国内加速服务</a></p><h3 id="InstantClick预加载"><a href="#InstantClick预加载" class="headerlink" title="InstantClick预加载"></a>InstantClick预加载</h3><p>在访问者单击链接之前，他们将鼠标悬停在该链接上。在这两个事件之间，通常会经过 200 毫秒至 300 毫秒。InstantClick 会利用这段时间来预加载页面，因此单击时该页面已经存在。使用的方法也很简单：</p><ol><li>下载 InstantClick，然后保存到 next/source/js/src/ 目录下</li></ol><p>&emsp;&emsp;<a class="btn" href="http://instantclick.io/download" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>下载地址</a></p><ol start="2"><li>在 next/layout/_layout.swig 的<body>中引入<script>if ('serviceWorker' in navigator) {  navigator.serviceWorker.register('/sw.js?t=1692424324992')    .then(function () {console.log('ServiceWorker Register Successfully.')})    .catch(function (e) {console.error(e)});}</script></body></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/instantclick.js"</span> data-no-instant&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script data-no-instant&gt;InstantClick.init();&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></div><p>如遇到图标加载不出来（可使用cdn）、与 FancyBox、Google Analytics 等等的兼容问题，可查看官方文档或 Google。</p><blockquote><p>InstantClick 使用的是 pushState + Ajax，即 PJAX。最新版本 NexT 主题已经支持 PJAX，无需使用 InstantClick。</p></blockquote><h3 id="hexo-filter-optimize"><a href="#hexo-filter-optimize" class="headerlink" title="hexo-filter-optimize"></a>hexo-filter-optimize</h3><p>有关使用 <a href="https://github.com/theme-next/hexo-filter-optimize" target="_blank" rel="noopener">hexo-filter-optimize</a> 加速的可参考 github 教程。使用者都反映有一定的问题，最后我也弃用了，相关博文：</p><p><a href="https://www.guanqr.com/2019/08/20/speed-up-hexo/" class="LinkCard" target="_blank" rel="noopener">加速 Hexo 的方法及遇到的问题</a></p><h3 id="Service-Worker"><a href="#Service-Worker" class="headerlink" title="Service Worker"></a>Service Worker</h3><p><a href="https://github.com/JLHwung/hexo-offline" target="_blank" rel="noopener">hexo-offline</a> 和 <a href="https://github.com/zoumiaojiang/hexo-service-worker" target="_blank" rel="noopener">hexo-service-worker</a> 插件都能让网站拥有 <a href="https://developers.google.com/web/fundamentals/primers/service-workers" target="_blank" rel="noopener">Service Worker</a> 功能，能够默认的把站点中 public 内的所有静态资源包括 html 文件缓存起来，达到离线访问的效果。在开发过程中，可以通过 localhost 使用 Service Worker，但如果要在网站上部署 Service Worker，则需要在服务器上设置 HTTPS。</p><blockquote><p>Service worker 是除了 PageSpeed，CDN 这些常见的服务器和网络加速之外，通过客户端实现更好访问体验的工具。</p></blockquote><p>Service Worker 的控制从第二次页面访问开始，在首次加载页面时，所有资源都是从网络加载的，Service worker 在首次加载时不会获取控制网络响应，它只会在后续访问页面时起作用。使用其实现加速/离线访问，只需安装以上任意一款插件，我使用的是 hexo-service-worker，安装步骤：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-service-worker --save</span><br></pre></td></tr></table></figure></div><p>在<strong>站点配置文件</strong> _config.yml 添加</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># offline config passed to sw-precache.</span></span><br><span class="line"><span class="attr">service_worker:</span></span><br><span class="line">  <span class="attr">maximumFileSizeToCacheInBytes:</span> <span class="number">5242880</span></span><br><span class="line">  <span class="attr">staticFileGlobs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">public/**/*.&#123;js,html,css,png,jpg,gif,svg,eot,ttf,woff,woff2&#125;</span></span><br><span class="line">  <span class="attr">stripPrefix:</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">verbose:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><p>完成后，在 Chrome 开发者工具 Application 选项 Service Workers 下，勾选 Offline （或者直接断网）即可进行离线测试。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/1.jpg" alt="uG506e.png"></p><p>由于本站加的东西有点花哨，引入的静态文件也比较多，导致在启用 Service Worker 功能后，缓存的资源文件也挺大。虽然实现了离线访问，不过速度还是有点点慢。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/2.jpg" alt="uG59W8.png"></p><p>对于那种<strong>极简</strong>网站，离线访问效果特别棒，整个缓存仅几十兆，比如这位大佬：</p><p><a href="https://io-oi.me/" class="LinkCard" target="_blank" rel="noopener">reuixiy</a></p><p>其他文章可参考：</p><p><a href="https://yangbo.tech/2017/01/15/2017-01-15-speedy-and-offline-site-by-service-worker/" class="LinkCard" target="_blank" rel="noopener">使用 Service worker 实现加速/离线访问静态网站</a></p><h3 id="PWA"><a href="#PWA" class="headerlink" title="PWA"></a>PWA</h3><p>PWA(Progressive Web Apps) 是 Google 提出的用前沿的 Web 技术为网页提供 App 般使用体验的一系列方案。PWA 本质上是 Web App，借助一些新技术也具备了 Native App 的一些特性，兼具 Web App 和 Native App 的优点：</p><ol><li><p>可靠 - 即使在不稳定的网络环境下，也能瞬间加载并展现</p></li><li><p>体验 - 快速响应，并且有平滑的动画响应用户的操作</p></li><li><p>粘性 - 像设备上的原生应用，具有沉浸式的用户体验，用户可以添加到桌面</p></li></ol><p>上文已经使用 Service Worker，网站具备了离线访问功能，再结合 PWA，就可以将网站添加至手机主屏或计算机桌面，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/3.jpg" alt="utoaHe.png"></p><p>或者在 Chrome 网址栏直接点+号按钮：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/4.jpg" alt="utjwE6.png"></p><div class="note danger"><p>请求必须都是 HTTPS（可在 Chrome 开发者工具 Security 下查看），否则在这个页面不会显示安装 XXX…</p></div><p>安装后，在 Mac 的 Chrome 应用目录下出现 Leaface.app：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/5.jpg" alt="utv3Zt.png"></p><p>打开的效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/6.jpg" alt="uH7hid.png"></p><p>在 windows 桌面是 Chrome 应用目录下一个类似快捷方式的图标。手机 Chrome 中效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/7.jpg" alt="utxFSg.png"></p><p>成功添加到手机桌面（右一）：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/8.jpg" alt="utxKYT.png"></p><p>加载页面（有 APP 的效果~）：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/9.jpg" alt="uge6oD.png"></p><p>期间如果添加不成功，则需要在手机系统设置里，为 Chrome 开启<strong>创建桌面快捷方式</strong>的权限</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/10.jpg" alt="uJsOFe.png"></p><p>以下方法均可增加 PWA 功能，方法1试了 N 次没成功，然后使用的是方法2。</p><h4 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h4><ol><li>在 Hexo 根目录 /source/ 下，新增 manifest.json 文件</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JSON"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"北宸"</span>,</span><br><span class="line">    <span class="attr">"short_name"</span>: <span class="string">"北宸"</span>,</span><br><span class="line">    <span class="attr">"icons"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"src"</span>: <span class="string">"/images/beichen.png"</span>,</span><br><span class="line">            <span class="attr">"sizes"</span>: <span class="string">"192x192"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"src"</span>: <span class="string">"/images/beichen.png"</span>,</span><br><span class="line">            <span class="attr">"sizes"</span>: <span class="string">"512x512"</span>,</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"start_url"</span>: <span class="string">"/"</span>,</span><br><span class="line">    <span class="attr">"theme_color"</span>: <span class="string">"#2196f3"</span>,</span><br><span class="line">    <span class="attr">"background_color"</span>: <span class="string">"#2196f3"</span>,</span><br><span class="line">    <span class="attr">"display"</span>: <span class="string">"standalone"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>属性 src 的值可填写 next/source/images/ 下的图片路径。</p><ol start="2"><li>在 next/layout/_layout.swig 的 head 标签内引入</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"manifest"</span> <span class="attr">href</span>=<span class="string">"/manifest.json"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><h4 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h4><p>在使用方法 1 后，Chrome 开发者工具 Application 下的 Manifest 一直显示：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no matching service worker detected. You may need to reload the page, or check that the service worker for the current page also controls the start URL from the manifest</span><br></pre></td></tr></table></figure></div><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/17/11.jpg" alt="uJRBz4.png"></p><p>多次 Google 无果，然后就使用了 <a href="https://github.com/lavas-project/hexo-pwa" target="_blank" rel="noopener">hexo-pwa</a> ，此插件支持 Service Worker 和 pwa ，所以只需安装此插件即可替代 hexo-offline 和 hexo-service-worker，具体步骤如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-pwa</span><br></pre></td></tr></table></figure></div><p>再在<strong>站点配置文件</strong>中增加如下配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># https://github.com/lavas-project/hexo-pwa</span></span><br><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">manifest:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/manifest.json</span></span><br><span class="line">    <span class="attr">body:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">北宸</span></span><br><span class="line">      <span class="attr">short_name:</span> <span class="string">北宸</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">Leaf's</span> <span class="string">Blog</span></span><br><span class="line">      <span class="attr">icons:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/beichen.png</span></span><br><span class="line">        <span class="attr">sizes:</span> <span class="string">192x192</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">/images/beichen.png</span></span><br><span class="line">        <span class="attr">sizes:</span> <span class="string">512x512</span></span><br><span class="line">        <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">      <span class="attr">start_url:</span> <span class="string">/index.html</span></span><br><span class="line">      <span class="attr">theme_color:</span> <span class="string">'#2196f3'</span></span><br><span class="line">      <span class="attr">background_color:</span> <span class="string">'#2196f3'</span></span><br><span class="line">      <span class="attr">display:</span> <span class="string">standalone</span></span><br><span class="line">  <span class="attr">serviceWorker:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/sw.js</span></span><br><span class="line">    <span class="attr">preload:</span></span><br><span class="line">      <span class="attr">urls:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/</span></span><br><span class="line">      <span class="attr">posts:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">opts:</span></span><br><span class="line">      <span class="attr">networkTimeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">routes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/hm.baidu.com/</span></span><br><span class="line">      <span class="attr">strategy:</span> <span class="string">networkOnly</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/.*\.(js|css|jpg|jpeg|png|gif)$/</span></span><br><span class="line">      <span class="attr">strategy:</span> <span class="string">cacheFirst</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/\//</span></span><br><span class="line">      <span class="attr">strategy:</span> <span class="string">networkFirst</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure></div><p>有关 Web App Manifest，可参考：</p><p><a href="https://developers.google.com/web/fundamentals/web-app-manifest/?utm_source=devtools" class="LinkCard" target="_blank" rel="noopener">The Web App Manifest</a></p><p>也可在如下网站生成 manifest 的配置项</p><p><a href="https://app-manifest.firebaseapp.com" class="LinkCard" target="_blank" rel="noopener">Web App Manifest Generator</a></p><p>到此，PWA 配置完成，enjoy ！</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> Google </tag>
            
            <tag> 优化 </tag>
            
            <tag> 加速 </tag>
            
            <tag> GitHub </tag>
            
            <tag> Chrome </tag>
            
            <tag> InstantClick </tag>
            
            <tag> Service Worker </tag>
            
            <tag> PWA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔—影像70年</title>
      <link href="/posts/3781861675.html"/>
      <url>/posts/3781861675.html</url>
      
        <content type="html"><![CDATA[<p><video controls preload="none" width="100%" poster="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/18/1.jpg" src="https://www.liaofuzhan.com/video/kaiguodadian.mp4" style="max-height:100%;max-width:100%;display:block;margin-left:auto;margin-right:auto" loop>您的浏览器暂时无法播放此视频.</video></p><a id="more"></a><blockquote><p>开国大典原始影像—1949年10月1日</p></blockquote><p>近日，中央档案馆公布一批精选馆藏珍贵档案文献，其中，就有以俄罗斯联邦档案部门提供的开国大典彩色影片为基础剪辑制作的开国大典影像档案。这是目前公开的关于开国大典时间最长、内容最完整的视频！70年过去了，此刻再回看，依然热血澎湃！</p><p><a href="http://www.saac.gov.cn/daj/gqzt/index.html" class="LinkCard" target="_blank" rel="noopener">中央档案馆</a></p><p><video controls preload="none" width="100%" poster="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/18/2.jpg" src="https://gslb.miaopai.com/stream/F~K7R5KPnXu8SeJbRqjQjspql840dzhIjPv5kw__.mp4" style="max-height:100%;max-width:100%;display:block;margin-left:auto;margin-right:auto" loop>您的浏览器暂时无法播放此视频.</video></p><blockquote><p>武警国宾护卫队超燃表白！</p></blockquote><p><video controls preload="none" width="100%" poster="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/18/3.jpg" src="https://www.liaofuzhan.com/video/80beijing.mp4" style="max-height:100%;max-width:100%;display:block;margin-left:auto;margin-right:auto" loop>您的浏览器暂时无法播放此视频.</video></p><blockquote><p>80年代航拍北京的珍贵纪录片</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
            <tag> 国庆 </tag>
            
            <tag> 70年 </tag>
            
            <tag> 影像 </tag>
            
            <tag> 档案 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本站主题已整理开源</title>
      <link href="/posts/273344197.html"/>
      <url>/posts/273344197.html</url>
      
        <content type="html"><![CDATA[<p>应邀，本站主题已整理开源，点击右上角 <a href="https://github.com/leafjame/hexo-theme-next5-leaf" target="_blank" rel="noopener">fork me from github</a> 链接前往，欢迎 <strong>star</strong>、<strong>fork</strong>。</p><a id="more"></a><h3 id="功能概览"><a href="#功能概览" class="headerlink" title="功能概览"></a>功能概览</h3><div class="note info"><p>以下功能网上一搜一大把，不过还是为大家整理了下本站情况，who care（皮一下~）！</p></div><p><strong>已完成：</strong></p><ul><li><input checked disabled type="checkbox"> 主页布局、颜色搭配</li><li><input checked disabled type="checkbox"> 全局字体设置（思源宋体）</li><li><input checked disabled type="checkbox"> 动态背景图片</li><li><input checked disabled type="checkbox"> 随机三角丝带</li><li><input checked disabled type="checkbox"> 鼠标点击特效（3种）</li><li><input checked disabled type="checkbox"> 文章虚拟背景</li><li><input checked disabled type="checkbox"> 文章置顶、精品</li><li><input checked disabled type="checkbox"> 文章排行榜（热榜）</li><li><input checked disabled type="checkbox"> 文章浏览、字数、时长</li><li><input checked disabled type="checkbox"> APlayer 音乐播放器</li><li><input checked disabled type="checkbox"> DPlayer 视频播放器</li><li><input checked disabled type="checkbox"> 看板娘</li><li><input checked disabled type="checkbox"> SEO 相关</li><li><input checked disabled type="checkbox"> CDN 相关</li><li><input checked disabled type="checkbox"> 个性化返回顶部</li><li><input checked disabled type="checkbox"> fork me from github</li><li><input checked disabled type="checkbox"> 博主头像旋转</li><li><input checked disabled type="checkbox"> 友链及相关链接页面</li><li><input checked disabled type="checkbox"> 近期文章推荐</li><li><input checked disabled type="checkbox"> 网站运行时间</li><li><input checked disabled type="checkbox"> 网站访问人数、访问量</li><li><input checked disabled type="checkbox"> 阅读全文样式</li><li><input checked disabled type="checkbox"> DaoVoice 在线聊天</li><li><input checked disabled type="checkbox"> TiDio 在线聊天</li><li><input checked disabled type="checkbox"> 来必力评论系统</li><li><input checked disabled type="checkbox"> Valine 评论系统</li><li><input checked disabled type="checkbox"> abbrlink 文章永久链接</li><li><input checked disabled type="checkbox"> neat 压缩</li><li><input checked disabled type="checkbox"> 文章版权信息</li><li><input checked disabled type="checkbox"> 代码块样式</li><li><input checked disabled type="checkbox"> 代码块复制</li><li><input checked disabled type="checkbox"> 阅读结束提醒</li><li><input checked disabled type="checkbox"> 打赏</li><li><input checked disabled type="checkbox"> 百度分享</li><li><input checked disabled type="checkbox"> 评论区打字特效</li><li><input checked disabled type="checkbox"> 页面反馈</li></ul><p><strong>20190925 新增：</strong></p><ul><li><input checked disabled type="checkbox"> 手机端样式适配</li><li><input checked disabled type="checkbox"> 代码块 Mac panel 特效</li><li><input checked disabled type="checkbox"> LeanCloud 切换国际版</li><li><input checked disabled type="checkbox"> 接入 Google AdSense 广告</li><li><input checked disabled type="checkbox"> 新增 ShareJs 分享</li><li><input checked disabled type="checkbox"> 类知乎卡片链接样式</li><li><input checked disabled type="checkbox"> Valine-Admin 评论系统</li><li><input checked disabled type="checkbox"> Valine-Admin 邮件通知</li><li><input checked disabled type="checkbox"> 相关文章推荐</li><li><input checked disabled type="checkbox"> 标签样式调整</li><li><input checked disabled type="checkbox"> 标签页自定义样式（5 种）</li><li><input checked disabled type="checkbox"> 归档页自定义样式</li><li><input checked disabled type="checkbox"> 鼠标样式</li><li><input checked disabled type="checkbox"> 主页走马灯（轮播图）</li><li><input checked disabled type="checkbox"> 瀑布流相册</li><li><input checked disabled type="checkbox"> canvas 粒子时钟</li><li><input checked disabled type="checkbox"> 豆瓣读书、电影</li><li><input checked disabled type="checkbox"> 页面其它的特效</li></ul><p>&emsp;&emsp;&emsp;……</p><h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h3><ol><li><p>Download ZIP 并解压后，放到 hexo 目录 themes 主题下即可。或者使用 git命令，进入到本地 hexo 目录：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="SHELL"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/leafjame/hexo-theme-next5-leaf.git themes/leaf</span><br></pre></td></tr></table></figure></div></li><li><p>将其放到 themes 目录下，名字自定义。然后在站点 _config.yml 中指定所使用的 theme：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: leaf</span><br></pre></td></tr></table></figure></div></li></ol><h4 id="依赖插件"><a href="#依赖插件" class="headerlink" title="依赖插件"></a>依赖插件</h4><ol><li><p>插件列表</p><p>本主题中在搭建过程中，集成了一定的插件，所列部分如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"hexo-abbrlink"</span>: <span class="string">"^2.0.5"</span>,   <span class="comment">//生成文章唯一URL插件</span></span><br><span class="line"><span class="string">"hexo-baidu-url-submit"</span>: <span class="string">"0.0.6"</span>,  <span class="comment">//url提交插件，用于seo</span></span><br><span class="line"><span class="string">"hexo-deployer-git"</span>: <span class="string">"^1.0.0"</span>,  <span class="comment">//git插件，用于部署</span></span><br><span class="line"><span class="string">"hexo-douban"</span>: <span class="string">"^1.1.3"</span>, <span class="comment">//豆瓣读书、电影插件</span></span><br><span class="line"><span class="string">"hexo-generator-baidu-sitemap"</span>: <span class="string">"^0.1.6"</span>,  <span class="comment">//百度sitemap，用于seo</span></span><br><span class="line"><span class="string">"hexo-generator-sitemap"</span>: <span class="string">"^1.2.0"</span>,  <span class="comment">// 同上</span></span><br><span class="line"><span class="string">"hexo-generator-feed"</span>: <span class="string">"^1.2.2"</span>,  <span class="comment">// SSR插件</span></span><br><span class="line"><span class="string">"hexo-generator-index-pin-top"</span>: <span class="string">"^0.2.2"</span>,  <span class="comment">//用于指定文章置顶</span></span><br><span class="line"><span class="string">"hexo-generator-search"</span>: <span class="string">"^2.4.0"</span>,  <span class="comment">//本地搜索插件</span></span><br><span class="line"><span class="string">"hexo-neat"</span>: <span class="string">"^1.0.4"</span>,  <span class="comment">// 压缩js、css代码的插件</span></span><br><span class="line"><span class="string">"hexo-permalink-pinyin"</span>: <span class="string">"^1.1.0"</span>,  <span class="comment">// 中文链接转拼音的插件</span></span><br><span class="line"><span class="string">"hexo-related-popular-posts"</span>: <span class="string">"^3.0.6"</span>,  <span class="comment">// 相关文章推荐</span></span><br><span class="line"><span class="string">"hexo-renderer-ejs"</span>: <span class="string">"^0.3.1"</span>,  <span class="comment">// 是不是自带的？。。。</span></span><br><span class="line"><span class="string">"hexo-renderer-marked"</span>: <span class="string">"^1.0.1"</span>,  <span class="comment">// 是不是自带的？。。。</span></span><br><span class="line"><span class="string">"hexo-renderer-stylus"</span>: <span class="string">"^0.3.3"</span>,  <span class="comment">// 是不是自带的？。。。</span></span><br><span class="line"><span class="string">"hexo-symbols-count-time"</span>: <span class="string">"^0.6.0"</span>,  <span class="comment">// 站点字数统计</span></span><br><span class="line"><span class="string">"hexo-tag-cloud"</span>: <span class="string">"^2.1.1"</span>,  <span class="comment">//标签云</span></span><br><span class="line"><span class="string">"hexo-tag-dplayer"</span>: <span class="string">"^0.3.3"</span>,  <span class="comment">//dplayer视频插件</span></span><br><span class="line"><span class="string">"hexo-wordcount"</span>: <span class="string">"^6.0.1"</span>,  <span class="comment">// 字数统计插件</span></span><br><span class="line"><span class="string">"webpack-cli"</span>: <span class="string">"^3.3.7"</span>,  <span class="comment">// 装hexo-abbrlink时提示装的，按需下载</span></span><br><span class="line"><span class="string">"@webpack-cli/init"</span>: <span class="string">"^0.2.2"</span>,  <span class="comment">// 同上</span></span><br></pre></td></tr></table></figure></div><div class="note info"><p>所装插件信息位于站点根目录的package.json文件，核对一下自己是否已经装过。</p></div></li><li><p>安装命令</p><p>在站点根目录下，使用：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev hexo-neat</span><br></pre></td></tr></table></figure></div><p>即可安装 hexo-neat 插件，其他的插件安装方式类似。默认是安装最新版，如要指定版本号，可使用：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev hexo-neat@1.0.4</span><br></pre></td></tr></table></figure></div></li></ol><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><ol><li><p>next 主题配置文件 _config.yml</p><p>按需配置 valine、leanCloud、busuanzi、tidio、hotjar、轮播图、文章推荐、点击特效、自定义标签等。</p></li><li><p>hexo 站点配置文件 _config.yml</p><p>按需配置 abbrlink、highlight、deploy、douban、hexo-neat 等。</p><div class="note danger"><p>注意：部分功能需注册后方可使用！</p></div></li></ol><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>控制台 <code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</code> 三连，浏览器输入 <strong><a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></strong> 即可看到效果！</p><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>附上完整版<strong>站点配置文件</strong>，供大家参考 &#x261f;&#x261f;</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo Configuration</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/configuration.html</span></span><br><span class="line"><span class="comment">## Source: https://github.com/hexojs/hexo/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Leaf's</span> <span class="string">Blog</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">因心造境，风云由我！</span></span><br><span class="line"><span class="attr">signature:</span> <span class="string">Java狮</span> <span class="string">北漂男</span> <span class="string">摄影</span> <span class="string">旅行</span> <span class="string">赚钱</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">Java狮</span> <span class="string">北漂男</span> <span class="string">摄影</span> <span class="string">旅行</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">leafjame</span> <span class="string">北宸</span> <span class="string">Java</span> <span class="string">程序员</span> <span class="string">北漂</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">北宸</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span></span><br><span class="line"><span class="attr">timezone:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://leafjame.github.io</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="comment">#permalink: :year/:month/:day/:title/ #对搜索引擎是十分不友好的</span></span><br><span class="line"><span class="comment">#permalink: :title.html</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">posts/:abbrlink.html</span>  <span class="comment"># 此处可以自己设置，也可以直接使用 :/abbrlink</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文章链接唯一永久化</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line">  <span class="attr">alg:</span> <span class="string">crc32</span>  <span class="comment">#算法： crc16(default) and crc32</span></span><br><span class="line">  <span class="attr">rep:</span> <span class="string">dec</span>    <span class="comment">#进制： dec(default) and hex</span></span><br><span class="line"></span><br><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line">  <span class="attr">count:</span> <span class="number">6</span> <span class="comment">## 比如3，代表提交最新的三个链接</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">https://www.liaofuzhan.com</span> <span class="comment">## 在百度站长平台中注册的域名</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">XXXXXX</span> <span class="comment">## 请注意这是您的秘钥， 所以请不要把源代码发布在公众仓库里!</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidu_urls.txt</span> <span class="comment">## 文本文档的地址， 新链接会保存在此文本文档里</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment">#skip_render:</span></span><br><span class="line"></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">README.md</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="comment">#https://hexo.io/zh-cn/docs/writing</span></span><br><span class="line"><span class="comment">#new_post_name: :year-:month-:day-:title.md #方便已日期来管理文章</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">#theme: landscape</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Plugins:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-baidu-sitemap</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">hexo-generator-sitemap</span></span><br><span class="line"></span><br><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">baidusitemap.xml</span></span><br><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> </span><br><span class="line">            <span class="attr">github:</span> <span class="string">https://github.com/leafjame/leafjame.github.io.git</span></span><br><span class="line">            <span class="attr">gitee:</span> <span class="string">https://gitee.com/leafjame/leafjame.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">baidu_url_submitter</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Search</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">./public/search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># feed</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/hexojs/hexo-generator-feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">hub:</span></span><br><span class="line">  <span class="attr">content:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md</span></span><br><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">'-'</span> <span class="comment"># default: '-'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># https://blog.csdn.net/lewky_liu/article/details/82432003</span></span><br><span class="line"><span class="comment"># https://github.com/rozbo/hexo-neat</span></span><br><span class="line"><span class="attr">neat_enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment"># 压缩html</span></span><br><span class="line"><span class="attr">neat_html:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line"><span class="comment"># 压缩css</span></span><br><span class="line"><span class="attr">neat_css:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'**/*.min.css'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'**/needsharebutton.css'</span></span><br><span class="line"><span class="comment"># 压缩js</span></span><br><span class="line"><span class="attr">neat_js:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mangle:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">output:</span></span><br><span class="line">  <span class="attr">compress:</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'**/*.min.js'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'**/jquery.fancybox.pack.js'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'**/index.js'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'**/waifu-tips.js'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'**/iframe.js'</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">'**/fireworks.js'</span></span><br><span class="line">  </span><br><span class="line"><span class="comment"># https://github.com/mythsman/hexo-douban</span></span><br><span class="line"><span class="attr">douban:</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">your_id</span></span><br><span class="line">  <span class="attr">builtin:</span> <span class="literal">false</span>  <span class="comment">#否将生成页面的功能嵌入hexo s和hexo g中(false则需要使用hexo douban命令)</span></span><br><span class="line">  <span class="attr">book:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">'读书系列'</span> <span class="comment"># 该页面的标题</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">'书山有路勤为径，学海无涯苦作舟'</span> <span class="comment"># 写在页面开头的一段话,支持html语法.</span></span><br><span class="line">  <span class="attr">movie:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">'观影系列'</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">'Life was like a box of chocolates, you never know what you’re going to get'</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">10000</span> <span class="comment"># 爬取数据的超时时间</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 分享 </tag>
            
            <tag> Github </tag>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT主题之自定义标签页</title>
      <link href="/posts/4158923031.html"/>
      <url>/posts/4158923031.html</url>
      
        <content type="html"><![CDATA[<p>在 NexT 主题自带的标签页中，标签以简单的列表形式进行展示，只加了随机字体大小，并没有其它特别的样式。当标签多了以后，页面被挤得满满当当，不是很美观。github 有相关的标签云插件，比如 <a href="https://github.com/MikeCoder/hexo-tag-cloud" target="_blank" rel="noopener">Hexo Tag Cloud</a> 这款，将标签以立体的效果进行展示，看起来还是不错的。按要求配置后，标签云显示在侧栏 sidebar 区域，之后因侧栏放了别的插件，我将其挪到了单独的标签页。</p><a id="more"></a><p><a href="https://www.liaofuzhan.com/tags/">标签页</a>显示效果：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/19/1.gif" alt="uPQwTA.gif"></p><p>标签页的效果前前后后改了好几次，从<strong>标签云–&gt;彩色标签页–&gt;心形标签云</strong>，下面分别说一下步骤。</p><h4 id="标签云"><a href="#标签云" class="headerlink" title="标签云"></a>标签云</h4><ol><li>在 next/layout/ 目录下新建 tagcanvas.swig 文件，拷贝如下内容：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tags"</span> <span class="attr">id</span>=<span class="string">"myTags"</span> <span class="attr">style</span>=<span class="string">"margin-left:300px"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">width</span>=<span class="string">"350"</span> <span class="attr">height</span>=<span class="string">"350"</span> <span class="attr">id</span>=<span class="string">"my3DTags"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Anything in here will be replaced on browsers that support the canvas element<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tags"</span> <span class="attr">id</span>=<span class="string">"tags"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">"display: none"</span>&gt;</span></span><br><span class="line">    &#123;&#123; tagcloud(&#123;</span><br><span class="line">      min_font: 16,</span><br><span class="line">      max_font: 35,</span><br><span class="line">      amount: 999,</span><br><span class="line">      color: true,</span><br><span class="line">      start_color: 'red',</span><br><span class="line">      end_color: 'red',</span><br><span class="line">    &#125;) &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; url_for('/js/tagcanvas.js') &#125;&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> &gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="actionscript">      TagCanvas.Start(<span class="string">'my3DTags'</span>,<span class="string">'tags'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">        textFont: <span class="string">'Georgia,Optima'</span>,</span></span><br><span class="line"><span class="actionscript">        textColour: <span class="literal">null</span>,</span></span><br><span class="line"><span class="actionscript">        outlineColour: <span class="string">'black'</span>,</span></span><br><span class="line"><span class="actionscript">        weight: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        reverse: <span class="literal">true</span>,</span></span><br><span class="line">        depth: 0.8,</span><br><span class="line">        maxSpeed: 0.05,</span><br><span class="line">        bgRadius: 1,</span><br><span class="line"><span class="actionscript">        freezeDecel: <span class="literal">true</span></span></span><br><span class="line">      &#125;);</span><br><span class="line"><span class="actionscript">    &#125; <span class="keyword">catch</span>(e) &#123;</span></span><br><span class="line"><span class="actionscript">      <span class="comment">// something went wrong, hide the canvas container</span></span></span><br><span class="line"><span class="javascript">      <span class="built_in">document</span>.getElementById(<span class="string">'myTags'</span>).style.display = <span class="string">'none'</span>;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="note danger"><p>其依赖的 tagcanvas.js，与我们使用 <a href="https://github.com/MikeCoder/hexo-tag-cloud" target="_blank" rel="noopener">Hexo Tag Cloud</a> 插件安装后得到的 tagcanvas.js 一样。</p></div><ol start="2"><li>在 next/layout/page.swig 中，引入这个新建的文件：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div class="post-body&#123;% if theme.han %&#125; han-init-context&#123;% endif %&#125;&#123;% if page.direction &amp;&amp; page.direction.toLowerCase() <span class="comment">=== 'rtl' %&#125; rtl&#123;% endif %&#125;"&gt;</span></span><br><span class="line">    &#123;# tagcloud page support #&#125;</span><br><span class="line">    &#123;% if page.type <span class="comment">=== "tags" %&#125;</span></span><br><span class="line">      &lt;div class="tag-cloud"&gt;</span><br><span class="line">        &lt;div class="tag-cloud-title"&gt;</span><br><span class="line">            &#123;&#123; _p('counter.tag_cloud', site.tags.length) &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class="tag-cloud-tags"&gt;</span><br><span class="line">          &#123;&#123; tagcloud(&#123;min_font: 10, max_font: 15, amount: 300, color: true, start_color: '#ccc', end_color: '#111'&#125;) &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="addition">+    &#123;% include 'tagcanvas.swig' %&#125;</span></span><br><span class="line">      </span><br><span class="line">   &#123;% elif page.type <span class="comment">=== 'categories' %&#125;</span></span><br><span class="line">   ......</span><br></pre></td></tr></table></figure></div><p>重新部署后即可看到效果</p><h4 id="彩色标签页"><a href="#彩色标签页" class="headerlink" title="彩色标签页"></a>彩色标签页</h4><p>效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/19/2.jpg" alt="uPtOFe.png"></p><p>可参考我的这篇文章：</p><p><a href="https://www.liaofuzhan.com/posts/2114475547.html#彩色标签页" class="LinkCard">Hexo NexT 美化2.0——彩色标签页</a></p><h4 id="心形标签云"><a href="#心形标签云" class="headerlink" title="心形标签云"></a>心形标签云</h4><p>网站魔改一段时间后，发现之前做好的标签云不显示了，浏览器审查元素中是有的，页面就是出不来。github 已有<a href="https://github.com/MikeCoder/hexo-tag-cloud/issues/22" target="_blank" rel="noopener">相关issue</a>。原因是说主题中加了 <code>window.onload</code> 这样的函数，导致 hexo-tag-cloud 的 window.onload 被覆盖，钩子函数不执行，作者是这样说的，不知道算不算 bug 。在浏览器控制台执行如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">      TagCanvas.textFont = <span class="string">'Trebuchet MS, Helvetica'</span>;</span><br><span class="line">      TagCanvas.textColour = <span class="string">'#333'</span>;</span><br><span class="line">      TagCanvas.textHeight = <span class="number">18</span>;</span><br><span class="line">      TagCanvas.outlineColour = <span class="string">'#E2E1C1'</span>;</span><br><span class="line">      TagCanvas.maxSpeed = <span class="number">0.03</span>;</span><br><span class="line">      TagCanvas.outlineMethod = <span class="string">'block'</span>;</span><br><span class="line">      TagCanvas.minBrightness = <span class="number">0.2</span>;</span><br><span class="line">      TagCanvas.depth = <span class="number">0.92</span>;</span><br><span class="line">      TagCanvas.pulsateTo = <span class="number">0.6</span>;</span><br><span class="line">      TagCanvas.initial = [<span class="number">0.1</span>,<span class="number">-0.1</span>];</span><br><span class="line">      TagCanvas.decel = <span class="number">0.98</span>;</span><br><span class="line">      TagCanvas.reverse = <span class="literal">true</span>;</span><br><span class="line">      TagCanvas.hideTags = <span class="literal">false</span>;</span><br><span class="line">      TagCanvas.shadow = <span class="string">'#ccf'</span>;</span><br><span class="line">      TagCanvas.shadowBlur = <span class="number">3</span>;</span><br><span class="line">      TagCanvas.weight = <span class="literal">false</span>;</span><br><span class="line">      TagCanvas.imageScale = <span class="literal">null</span>;</span><br><span class="line">      TagCanvas.fadeIn = <span class="number">1000</span>;</span><br><span class="line">      TagCanvas.clickToFront = <span class="number">600</span>;</span><br><span class="line">      TagCanvas.Start(<span class="string">'resCanvas'</span>);</span><br><span class="line">      TagCanvas.tc[<span class="string">'resCanvas'</span>].Wheel(<span class="literal">false</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(e);</span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">'myCanvasContainer'</span>).style.display = <span class="string">'none'</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div><p>标签云立马又出现了。。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/19/3.jpg" alt="uP12Is.png"></p><p>可能也是这功能不稳定吧，目前还没找到好办法。然后就想着自己做一个类似的吧。无意中在网上发现了一款不错的<strong>心形图案</strong>，来自<a href="http://ddrv.cn/a/463933" target="_blank" rel="noopener">算法网</a>，效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/19/4.gif" alt="uiEVcd.gif"></p><p>在此基础上做了部分修改后，整合到了自己的网站中，具体步骤如下：</p><ol><li>在 next/layout/ 目录下，新建 tag-love.swig 文件，拷贝以下内容：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.love</span> &#123;</span></span><br><span class="line">      width: 500px;</span><br><span class="line">      height: 650px;</span><br><span class="line">      position: relative;</span><br><span class="line">      margin: 60px auto;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.love</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">      position: absolute;</span><br><span class="line">      left: 0;</span><br><span class="line">      //color: goldenrod;</span><br><span class="line">      //color: #e804048f;</span><br><span class="line">      font-size: 20px;</span><br><span class="line">      font-family: sans-serif;</span><br><span class="line">      text-shadow: 0 0 1em white;</span><br><span class="line">      animation:</span><br><span class="line">          x-move 15s ease-in-out infinite alternate,</span><br><span class="line">          y-move 30s linear infinite;</span><br><span class="line">      animation-delay: calc(45s / var(--particles) * var(--n) * -1);</span><br><span class="line">      user-select: auto; // none</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.love</span> <span class="selector-tag">a</span><span class="selector-pseudo">:first-child</span> &#123;</span></span><br><span class="line">      color: orangered;</span><br><span class="line">      font-size: 3em;</span><br><span class="line">      text-shadow:</span><br><span class="line"><span class="css">          0 0 0<span class="selector-class">.1em</span> <span class="selector-tag">black</span>,</span></span><br><span class="line">          0 0 1em white;</span><br><span class="line">      z-index: 1;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="keyword">@keyframes</span> x-move &#123;</span></span><br><span class="line">      to &#123;</span><br><span class="line">          left: 450px;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="keyword">@keyframes</span> y-move &#123;</span></span><br><span class="line"><span class="css">      0% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">180px</span>); &#125;</span></span><br><span class="line"><span class="css">      10% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">45px</span>); &#125;</span></span><br><span class="line"><span class="css">      15% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">5px</span>); &#125;</span></span><br><span class="line"><span class="css">      18% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>); &#125;</span></span><br><span class="line"><span class="css">      20% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">5px</span>); &#125;</span></span><br><span class="line"><span class="css">      22% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">35px</span>); &#125;</span></span><br><span class="line"><span class="css">      24% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">65px</span>); &#125;</span></span><br><span class="line"><span class="css">      25% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">110px</span>); &#125;</span></span><br><span class="line"><span class="css">      26% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">65px</span>); &#125;</span></span><br><span class="line"><span class="css">      28% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">35px</span>); &#125;</span></span><br><span class="line"><span class="css">      30% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">5px</span>); &#125;</span></span><br><span class="line"><span class="css">      32% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">0</span>); &#125;</span></span><br><span class="line"><span class="css">      35% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">5px</span>); &#125;</span></span><br><span class="line"><span class="css">      40% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">45px</span>); &#125;</span></span><br><span class="line"><span class="css">      50% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">180px</span>); &#125;</span></span><br><span class="line"><span class="css">      71% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">430px</span>); &#125;</span></span><br><span class="line"><span class="css">      72<span class="selector-class">.5</span>% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">440px</span>); &#125;</span></span><br><span class="line"><span class="css">      75% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">450px</span>); &#125;</span></span><br><span class="line"><span class="css">      77<span class="selector-class">.5</span>% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">440px</span>); &#125;</span></span><br><span class="line"><span class="css">      79% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">430px</span>); &#125;</span></span><br><span class="line"><span class="css">      100% &#123; <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">180px</span>); &#125;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/* 移动端样式 */</span></span></span><br><span class="line"><span class="css">  <span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>) &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.love</span>&#123;</span></span><br><span class="line">        width: 360px;</span><br><span class="line">        height: 450px;</span><br><span class="line">        margin: 30px auto;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="keyword">@keyframes</span> x-move &#123;</span></span><br><span class="line">        to &#123;</span><br><span class="line">            left: 285px;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"love"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> alltags = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'tag-cloud-tags'</span>);</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> tags = alltags[<span class="number">0</span>].getElementsByTagName(<span class="string">'a'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> words = [<span class="string">'❤️'</span>];</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span> ; i &lt; tags.length ; i ++)&#123;</span></span><br><span class="line"><span class="actionscript">       <span class="comment">// words.push(tags[i].innerHTML)</span></span></span><br><span class="line">         words.push(tags[i])</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> dom = &#123;</span></span><br><span class="line"><span class="javascript">         love: <span class="built_in">document</span>.querySelector(<span class="string">'.love'</span>)</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">     dom.love.style.setProperty(<span class="string">'--particles'</span>, words.length)</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     words.forEach(<span class="function">(<span class="params">word, i</span>) =&gt;</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">         <span class="keyword">let</span> atag = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span></span><br><span class="line"><span class="actionscript">         atag.style.setProperty(<span class="string">'--n'</span>, i + <span class="number">1</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">         atag.style.setProperty(<span class="string">'text-decoration'</span>, <span class="string">'none'</span>);</span></span><br><span class="line"><span class="actionscript">         atag.style.setProperty(<span class="string">'border-bottom'</span>, <span class="string">'none'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> r=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">130</span>);</span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> g=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">100</span>);</span></span><br><span class="line"><span class="javascript">         <span class="keyword">var</span> b=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">80</span>);</span></span><br><span class="line"><span class="actionscript">         atag.style.setProperty(<span class="string">"color"</span>, <span class="string">"rgb("</span>+r+<span class="string">","</span>+g+<span class="string">","</span>+b+<span class="string">")"</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">         atag.setAttribute(<span class="string">"href"</span>, word.href);</span></span><br><span class="line">         atag.innerText = word.innerText;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">         <span class="keyword">if</span>(word.href == <span class="literal">undefined</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            atag.setAttribute(<span class="string">"href"</span>, <span class="string">"#"</span>);</span></span><br><span class="line">            atag.innerText = word;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         dom.love.appendChild(atag);</span><br><span class="line">     &#125;)</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><ol start="2"><li>在 next/layout/page.swig 中，引入这个新建的文件：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;# 自定义爱心标签云 #&#125;</span><br><span class="line">&#123;% include <span class="string">'tag-love.swig'</span> %&#125;</span><br></pre></td></tr></table></figure></div><p>引入的位置在上边说的球型云标签下方即可，像这样</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">  &lt;div class="post-body&#123;% if theme.han %&#125; han-init-context&#123;% endif %&#125;&#123;% if page.direction &amp;&amp; page.direction.toLowerCase() <span class="comment">=== 'rtl' %&#125; rtl&#123;% endif %&#125;"&gt;</span></span><br><span class="line">    &#123;# tagcloud page support #&#125;</span><br><span class="line">    &#123;% if page.type <span class="comment">=== "tags" %&#125;</span></span><br><span class="line">      &lt;div class="tag-cloud"&gt;</span><br><span class="line">        &lt;div class="tag-cloud-title"&gt;</span><br><span class="line">            &#123;&#123; _p('counter.tag_cloud', site.tags.length) &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class="tag-cloud-tags"&gt;</span><br><span class="line">          &#123;&#123; tagcloud(&#123;min_font: 10, max_font: 15, amount: 300, color: true, start_color: '#ccc', end_color: '#111'&#125;) &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">     &#123;% include 'tagcanvas.swig' %&#125;</span><br><span class="line">     </span><br><span class="line"><span class="addition">+    &#123;# 自定义爱心标签云 #&#125;</span></span><br><span class="line"><span class="addition">+    &#123;% include 'tag-love.swig' %&#125;</span></span><br><span class="line">      </span><br><span class="line">   &#123;% elif page.type <span class="comment">=== 'categories' %&#125;</span></span><br><span class="line">   ......</span><br></pre></td></tr></table></figure></div><div class="note danger"><p>注意：部分样式需要根据你的主题进行调整，标签数量最好在 15 个以上，效果会明显一些。</p></div><p>hexo 三连后，查看下效果吧：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/19/5.gif" alt="uABKAA.gif"></p><p>另外，原有的标签可在 next/layout/page.swig 中设置为不显示，像这样加上 hidden 属性：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tag-cloud-tags"</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">  &#123;&#123; tagcloud(&#123;min_font: 10, max_font: 15, amount: 300, color: true, start_color: '#ccc', end_color: '#111'&#125;) &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>效果在 Chrome 还可以，在 Safari 就有点变形，其他浏览器因为电脑没装就暂时没测。</p><h4 id="球型标签云"><a href="#球型标签云" class="headerlink" title="球型标签云"></a>球型标签云</h4><p>给上边的心形标签云加上链接后，点击的效果差强人意，于是又开始捣鼓其它方案。在 <a href="https://www.17sucai.com/pins/31438.html" target="_blank" rel="noopener">17素材网</a> 发现一款不错的标签云，又开始忙起来了~哈哈。修改了部分 JS 代码，效果如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/19/6.gif" alt="uABS0J.gif"></p><p>立体感很强，球背面的标签也能选中。下面说一下在 NexT 中具体的整合步骤。</p><ol><li>在 next/layout/ 目录下，新建 tag-bubble.swig 文件，内容如下：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line">    margin: 0 auto;</span><br><span class="line"><span class="css">    <span class="selector-tag">padding</span><span class="selector-pseudo">:0</span>;</span></span><br><span class="line">    width: 700px;</span><br><span class="line">    min-width: 100px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.tagbubble</span> &#123;</span></span><br><span class="line">    position: relative;</span><br><span class="line">    margin-top: 300px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.tagbubble</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">    display: block;</span><br><span class="line">    border-radius: 50%;</span><br><span class="line"><span class="css">    <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">    font-weight: bold;</span><br><span class="line">    font-size: 14px;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    text-align: center;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.b0</span>&#123;</span></span><br><span class="line">      width: 95px;</span><br><span class="line">      height: 90px;</span><br><span class="line">      line-height: 90px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.b1</span>&#123;</span></span><br><span class="line">      width: 70px;</span><br><span class="line">      height: 70px;</span><br><span class="line">      line-height: 55px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.b2</span>&#123;</span></span><br><span class="line">      width: 60px;</span><br><span class="line">      height: 60px;</span><br><span class="line">      line-height: 60px;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.b3</span>&#123;</span></span><br><span class="line">      width: 45px;</span><br><span class="line">      height: 45px;</span><br><span class="line">      line-height: 40px;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="selector-class">.c0</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#d1e5fd</span> 0%, <span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#d1e5fd</span> 0%,<span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#d1e5fd</span> 0%,<span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#d1e5fd</span> 0%,<span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#d1e5fd</span> 0%,<span class="selector-id">#3d86f4</span> 100%);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.c1</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#b9f8ff</span> 0%, <span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#b9f8ff</span> 0%,<span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#b9f8ff</span> 0%,<span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#b9f8ff</span> 0%,<span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#b9f8ff</span> 0%,<span class="selector-id">#1de7ff</span> 100%);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.c2</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fff4e2</span> 0%, <span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fff4e2</span> 0%,<span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fff4e2</span> 0%,<span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fff4e2</span> 0%,<span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#fff4e2</span> 0%,<span class="selector-id">#ffd79c</span> 100%);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.c3</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fef4fa</span> 0%, <span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fef4fa</span> 0%,<span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fef4fa</span> 0%,<span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fef4fa</span> 0%,<span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#fef4fa</span> 0%,<span class="selector-id">#fbbae0</span> 100%);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.c4</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fedc90</span> 0%, <span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fedc90</span> 0%,<span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fedc90</span> 0%,<span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#fedc90</span> 0%,<span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#fedc90</span> 0%,<span class="selector-id">#ffb515</span> 100%);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.c5</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#bcf7ca</span> 0%, <span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#bcf7ca</span> 0%,<span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#bcf7ca</span> 0%,<span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#bcf7ca</span> 0%,<span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#bcf7ca</span> 0%,<span class="selector-id">#1fda4b</span> 100%);</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="css">  <span class="selector-class">.c6</span>&#123;</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-moz-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#f7cdf8</span> 0%, <span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-webkit-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#f7cdf8</span> 0%,<span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-o-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#f7cdf8</span> 0%,<span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">-ms-linear-gradient</span>(<span class="selector-tag">top</span>, <span class="selector-id">#f7cdf8</span> 0%,<span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line"><span class="css">      <span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">bottom</span>, <span class="selector-id">#f7cdf8</span> 0%,<span class="selector-id">#db43e7</span> 100%);</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">  <span class="comment">/* 移动端样式 */</span></span></span><br><span class="line"><span class="css">  <span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>)&#123;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line">        width: 10px;</span><br><span class="line"><span class="css">        <span class="selector-tag">margin-left</span><span class="selector-pseudo">:20px</span>;</span></span><br><span class="line">        min-width: 0px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.tagbubble</span>&#123;</span></span><br><span class="line">        width: 300px;</span><br><span class="line">        min-width: 0px;</span><br><span class="line">        margin-top: 200px;</span><br><span class="line">        margin-left: 10px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.tagbubble</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">      font-size: 13px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.b0</span>&#123;</span></span><br><span class="line">        width: 65px;</span><br><span class="line">        height: 65px;</span><br><span class="line">        line-height: 60px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.b1</span>&#123;</span></span><br><span class="line">        width: 50px;</span><br><span class="line">        height: 50px;</span><br><span class="line">        line-height: 45px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.b2</span>&#123;</span></span><br><span class="line">        width: 40px;</span><br><span class="line">        height: 40px;</span><br><span class="line">        line-height: 40px;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="css">    <span class="selector-class">.b3</span>&#123;</span></span><br><span class="line">        width: 35px;</span><br><span class="line">        height: 35px;</span><br><span class="line">        line-height: 35px;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tagbubble"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> alltags = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'tag-cloud-tags'</span>);</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">var</span> tags = alltags[<span class="number">0</span>].getElementsByTagName(<span class="string">'a'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> bo = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> co = <span class="keyword">new</span> <span class="built_in">Array</span>();</span></span><br><span class="line"><span class="actionscript">     <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span></span><br><span class="line"><span class="actionscript">        bo.push(<span class="string">"b"</span> + i);</span></span><br><span class="line">     &#125;</span><br><span class="line"><span class="actionscript">     <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">7</span>;i++)&#123;</span></span><br><span class="line"><span class="actionscript">        co.push(<span class="string">"c"</span> + i);</span></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"><span class="javascript">     <span class="keyword">var</span> divDom = <span class="built_in">document</span>.querySelector(<span class="string">'.tagbubble'</span>)</span></span><br><span class="line"><span class="actionscript">     <span class="comment">//var divDom = document.getElementsByClassName('tagbubble')[0];</span></span></span><br><span class="line"><span class="actionscript">     <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;tags.length;i++)&#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> atag = <span class="built_in">document</span>.createElement(<span class="string">'a'</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> boStyle = bo[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">4</span>)];</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> coStyle = co[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">7</span>)];</span></span><br><span class="line">        if(tags[i].innerText.length &gt; 10)&#123;</span><br><span class="line"><span class="actionscript">            boStyle = <span class="string">"b0"</span>;</span></span><br><span class="line"><span class="actionscript">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(tags[i].innerText.length &gt; <span class="number">5</span> &amp;&amp; tags[i].innerText.length &lt; <span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="actionscript">            boStyle = <span class="string">"b1"</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="actionscript">        atag.setAttribute(<span class="string">"class"</span>, boStyle+<span class="string">" "</span>+coStyle);</span></span><br><span class="line"><span class="actionscript">        atag.setAttribute(<span class="string">"href"</span>, tags[i].href);</span></span><br><span class="line">        atag.innerText = tags[i].innerText;</span><br><span class="line">        divDom.appendChild(atag);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">browserRedirect</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> sUserAgent = navigator.userAgent.toLowerCase();</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsIpad = sUserAgent.match(<span class="regexp">/ipad/i</span>) == <span class="string">"ipad"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsIphoneOs = sUserAgent.match(<span class="regexp">/iphone os/i</span>) == <span class="string">"iphone os"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsMidp = sUserAgent.match(<span class="regexp">/midp/i</span>) == <span class="string">"midp"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsUc7 = sUserAgent.match(<span class="regexp">/rv:1.2.3.4/i</span>) == <span class="string">"rv:1.2.3.4"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsUc = sUserAgent.match(<span class="regexp">/ucweb/i</span>) == <span class="string">"ucweb"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsAndroid = sUserAgent.match(<span class="regexp">/android/i</span>) == <span class="string">"android"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsCE = sUserAgent.match(<span class="regexp">/windows ce/i</span>) == <span class="string">"windows ce"</span>;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> bIsWM = sUserAgent.match(<span class="regexp">/windows mobile/i</span>) == <span class="string">"windows mobile"</span>;</span></span><br><span class="line">        if (bIsIpad || bIsIphoneOs || bIsMidp || bIsUc7 || bIsUc || bIsAndroid || bIsCE || bIsWM) &#123;</span><br><span class="line"><span class="actionscript">            <span class="comment">//移动端页面</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="number">80</span>;</span></span><br><span class="line"><span class="actionscript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="comment">//pc端页面</span></span></span><br><span class="line"><span class="actionscript">            <span class="keyword">return</span> <span class="number">150</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> tagRadius = browserRedirect();</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript">    <span class="comment">/*3D标签云*/</span></span></span><br><span class="line">    tagcloud(&#123;</span><br><span class="line"><span class="actionscript">        selector: <span class="string">".tagbubble"</span>,   <span class="comment">//元素选择器</span></span></span><br><span class="line"><span class="actionscript">        fontsize: <span class="number">14</span>,             <span class="comment">//基本字体大小, 单位px</span></span></span><br><span class="line"><span class="actionscript">        radius: tagRadius,        <span class="comment">//滚动半径, 单位px 页面宽度和高度的五分之一</span></span></span><br><span class="line"><span class="actionscript">        mspeed: <span class="string">"slow"</span>,           <span class="comment">//滚动最大速度, 取值: slow, normal(默认), fast</span></span></span><br><span class="line"><span class="actionscript">        ispeed: <span class="string">"slow"</span>,           <span class="comment">//滚动初速度, 取值: slow, normal(默认), fast</span></span></span><br><span class="line"><span class="actionscript">        direction: <span class="number">135</span>,           <span class="comment">//初始滚动方向, 取值角度(顺时针360): 0对应top, 90对应left, 135对应right-bottom(默认)...</span></span></span><br><span class="line"><span class="actionscript">        keep: <span class="literal">false</span>               <span class="comment">//鼠标移出组件后是否继续随鼠标滚动, 取值: false, true(默认) 对应 减速至初速度滚动, 随鼠标滚动</span></span></span><br><span class="line">    &#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><ol start="2"><li>在 next/source/js/src/ 目录下，新建其依赖的 bubble.js，内容如下：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* 3d标签云</span></span><br><span class="line"><span class="comment">* 功能：鼠标移入标签，当前标签静止放大</span></span><br><span class="line"><span class="comment">* 说明：</span></span><br><span class="line"><span class="comment">* */</span></span><br><span class="line"><span class="built_in">window</span>.tagcloud = (<span class="function"><span class="keyword">function</span>(<span class="params">win, doc</span>) </span>&#123; <span class="comment">// ns</span></span><br><span class="line">    <span class="comment">// 判断对象</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">isObject</span> (<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Object</span>.prototype.toString.call(obj) === <span class="string">'[object Object]'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">TagCloud</span> (<span class="params">options</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> self = <span class="keyword">this</span>;</span><br><span class="line"></span><br><span class="line">        self.config = TagCloud._getConfig(options);</span><br><span class="line">        self.box = self.config.element;  <span class="comment">//组件元素</span></span><br><span class="line">        self.fontsize = self.config.fontsize; <span class="comment">//平均字体大小</span></span><br><span class="line">        self.radius = self.config.radius; <span class="comment">//滚动半径</span></span><br><span class="line">        self.depth = <span class="number">2</span> * self.radius;   <span class="comment">//滚动深度</span></span><br><span class="line">        self.size = <span class="number">2</span> * self.radius;    <span class="comment">//随鼠标滚动变速作用区域</span></span><br><span class="line"></span><br><span class="line">        self.mspeed = TagCloud._getMsSpeed(self.config.mspeed);</span><br><span class="line">        self.ispeed = TagCloud._getIsSpeed(self.config.ispeed);</span><br><span class="line">        self.items = self._getItems();</span><br><span class="line"></span><br><span class="line">        self.direction = self.config.direction;   <span class="comment">//初始滚动方向</span></span><br><span class="line">        self.keep = self.config.keep; <span class="comment">//鼠标移出后是否保持之前滚动</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//初始化</span></span><br><span class="line">        self.active = <span class="literal">false</span>;   <span class="comment">//是否为激活状态</span></span><br><span class="line">        self.lasta = <span class="number">1</span>;</span><br><span class="line">        self.lastb = <span class="number">1</span>;</span><br><span class="line">        self.mouseX0 = self.ispeed * <span class="built_in">Math</span>.sin(self.direction * <span class="built_in">Math</span>.PI / <span class="number">180</span>);    <span class="comment">//鼠标与滚动圆心x轴初始距离</span></span><br><span class="line">        self.mouseY0 = -self.ispeed * <span class="built_in">Math</span>.cos(self.direction * <span class="built_in">Math</span>.PI / <span class="number">180</span>);   <span class="comment">//鼠标与滚动圆心y轴初始距离</span></span><br><span class="line">        self.mouseX = self.mouseX0;   <span class="comment">//鼠标与滚动圆心x轴距离</span></span><br><span class="line">        self.mouseY = self.mouseY0;   <span class="comment">//鼠标与滚动圆心y轴距离</span></span><br><span class="line">        self.index = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//鼠标移入</span></span><br><span class="line">        TagCloud._on(self.box, <span class="string">'mouseover'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            self.active = <span class="literal">true</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//鼠标移出</span></span><br><span class="line">        TagCloud._on(self.box, <span class="string">'mouseout'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            self.active = <span class="literal">false</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//鼠标在内移动</span></span><br><span class="line">        TagCloud._on(self.keep ? win : self.box, <span class="string">'mousemove'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">ev</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> oEvent = win.event || ev;</span><br><span class="line">            <span class="keyword">var</span> boxPosition = self.box.getBoundingClientRect();</span><br><span class="line">            self.mouseX = (oEvent.clientX - (boxPosition.left + self.box.offsetWidth / <span class="number">2</span>)) / <span class="number">5</span>;</span><br><span class="line">            self.mouseY = (oEvent.clientY - (boxPosition.top + self.box.offsetHeight / <span class="number">2</span>)) / <span class="number">5</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len = self.items.length; j &lt; len; j++) &#123;</span><br><span class="line">            self.items[j].element.index=j;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//鼠标移出子元素,当前元素静止放大</span></span><br><span class="line">            self.items[j].element.onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                self.index = <span class="keyword">this</span>.index;</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//鼠标移出子元素,当前元素继续滚动</span></span><br><span class="line">            self.items[j].element.onmouseout = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                self.index = <span class="number">-1</span>;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定时更新</span></span><br><span class="line">        TagCloud.boxs.push(self.box);</span><br><span class="line">        self.update(self);    <span class="comment">//初始更新</span></span><br><span class="line">        self.box.style.visibility = <span class="string">"visible"</span>;</span><br><span class="line">        self.box.style.position = <span class="string">"relative"</span>;</span><br><span class="line">        <span class="comment">// self.box.style.minHeight = 1.2 * self.size + "px";</span></span><br><span class="line">        <span class="comment">// self.box.style.minWidth = 2.5 * self.size + "px";</span></span><br><span class="line">        self.box.style.minHeight = <span class="number">0</span> * self.size + <span class="string">"px"</span>;</span><br><span class="line">        self.box.style.minWidth = <span class="number">0</span> * self.size + <span class="string">"px"</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len = self.items.length; j &lt; len; j++) &#123;</span><br><span class="line">            self.items[j].element.style.position = <span class="string">"absolute"</span>;</span><br><span class="line">            self.items[j].element.style.zIndex = j + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        self.up = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            self.update(self);</span><br><span class="line">        &#125;, <span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//实例</span></span><br><span class="line">    TagCloud.boxs = []; <span class="comment">//实例元素数组</span></span><br><span class="line">    <span class="comment">// 静态方法们</span></span><br><span class="line">    TagCloud._set = <span class="function"><span class="keyword">function</span> (<span class="params">element</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (TagCloud.boxs.indexOf(element) == <span class="number">-1</span>) &#123;<span class="comment">//ie8不支持数组的indexOf方法</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加数组IndexOf方法</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">Array</span>.prototype.indexOf)&#123;</span><br><span class="line">        <span class="built_in">Array</span>.prototype.indexOf = <span class="function"><span class="keyword">function</span>(<span class="params">elt <span class="regexp">/*, from*/</span></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> len = <span class="keyword">this</span>.length &gt;&gt;&gt; <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">var</span> <span class="keyword">from</span> = <span class="built_in">Number</span>(<span class="built_in">arguments</span>[<span class="number">1</span>]) || <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">from</span> = (<span class="keyword">from</span> &lt; <span class="number">0</span>)</span><br><span class="line">                ? <span class="built_in">Math</span>.ceil(<span class="keyword">from</span>)</span><br><span class="line">                : <span class="built_in">Math</span>.floor(<span class="keyword">from</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">from</span> &lt; <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">from</span> += len;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (; <span class="keyword">from</span> &lt; len; <span class="keyword">from</span>++)&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">from</span> <span class="keyword">in</span> <span class="keyword">this</span> &amp;&amp; <span class="keyword">this</span>[<span class="keyword">from</span>] === elt)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">from</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    TagCloud._getConfig = <span class="function"><span class="keyword">function</span> (<span class="params">config</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> defaultConfig = &#123;   <span class="comment">//默认值</span></span><br><span class="line">            fontsize: <span class="number">16</span>,       <span class="comment">//基本字体大小, 单位px</span></span><br><span class="line">            radius: <span class="number">60</span>,         <span class="comment">//滚动半径, 单位px</span></span><br><span class="line">            mspeed: <span class="string">"normal"</span>,   <span class="comment">//滚动最大速度, 取值: slow, normal(默认), fast</span></span><br><span class="line">            ispeed: <span class="string">"normal"</span>,   <span class="comment">//滚动初速度, 取值: slow, normal(默认), fast</span></span><br><span class="line">            direction: <span class="number">135</span>,     <span class="comment">//初始滚动方向, 取值角度(顺时针360): 0对应top, 90对应left, 135对应right-bottom(默认)...</span></span><br><span class="line">            keep: <span class="literal">true</span>          <span class="comment">//鼠标移出组件后是否继续随鼠标滚动, 取值: false, true(默认) 对应 减速至初速度滚动, 随鼠标滚动</span></span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(isObject(config)) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> config) &#123;</span><br><span class="line">                <span class="keyword">if</span>(config.hasOwnProperty(i)) &#123;<span class="comment">//hasOwnProperty()用来判断一个属性是定义在对象本身而不是继承自原型链</span></span><br><span class="line">                    defaultConfig[i] = config[i]; <span class="comment">//用户配置</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> defaultConfig;<span class="comment">// 配置 Merge</span></span><br><span class="line">    &#125;;</span><br><span class="line">    TagCloud._getMsSpeed = <span class="function"><span class="keyword">function</span> (<span class="params">mspeed</span>) </span>&#123;    <span class="comment">//滚动最大速度</span></span><br><span class="line">        <span class="keyword">var</span> speedMap = &#123;</span><br><span class="line">            slow: <span class="number">1.5</span>, </span><br><span class="line">            normal: <span class="number">3</span>,</span><br><span class="line">            fast: <span class="number">5</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> speedMap[mspeed] || <span class="number">3</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    TagCloud._getIsSpeed = <span class="function"><span class="keyword">function</span> (<span class="params">ispeed</span>) </span>&#123;    <span class="comment">//滚动初速度</span></span><br><span class="line">        <span class="keyword">var</span> speedMap = &#123;</span><br><span class="line">            slow: <span class="number">10</span>,</span><br><span class="line">            normal: <span class="number">25</span>,</span><br><span class="line">            fast: <span class="number">50</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> speedMap[ispeed] || <span class="number">25</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">    TagCloud._getSc = <span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="built_in">Math</span>.PI / <span class="number">180</span>;</span><br><span class="line">        <span class="comment">//数组顺序0,1,2,3表示asin,acos,bsin,bcos</span></span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="built_in">Math</span>.sin(a * l),</span><br><span class="line">            <span class="built_in">Math</span>.cos(a * l),</span><br><span class="line">            <span class="built_in">Math</span>.sin(b * l),</span><br><span class="line">            <span class="built_in">Math</span>.cos(b * l)</span><br><span class="line">        ];</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    TagCloud._on = <span class="function"><span class="keyword">function</span> (<span class="params">ele, eve, handler, cap</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (ele.addEventListener) &#123;</span><br><span class="line">            ele.addEventListener(eve, handler, cap);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ele.attachEvent) &#123;</span><br><span class="line">            ele.attachEvent(<span class="string">'on'</span> + eve, handler);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ele[<span class="string">'on'</span> + eve] = handler;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 原型方法</span></span><br><span class="line">    TagCloud.prototype = &#123;</span><br><span class="line">        <span class="keyword">constructor</span>: TagCloud, // 反向引用构造器</span><br><span class="line"></span><br><span class="line">        update: function () &#123;</span><br><span class="line">            <span class="keyword">var</span> self = <span class="keyword">this</span>, a, b;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!self.active &amp;&amp; !self.keep) &#123;</span><br><span class="line">                self.mouseX = <span class="built_in">Math</span>.abs(self.mouseX - self.mouseX0) &lt; <span class="number">1</span> ? self.mouseX0 : (self.mouseX + self.mouseX0) / <span class="number">2</span>;   <span class="comment">//重置鼠标与滚动圆心x轴距离</span></span><br><span class="line">                self.mouseY = <span class="built_in">Math</span>.abs(self.mouseY - self.mouseY0) &lt; <span class="number">1</span> ? self.mouseY0 : (self.mouseY + self.mouseY0) / <span class="number">2</span>;   <span class="comment">//重置鼠标与滚动圆心y轴距离</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            a = -(<span class="built_in">Math</span>.min(<span class="built_in">Math</span>.max(-self.mouseY, -self.size), self.size) / self.radius ) * self.mspeed;</span><br><span class="line">            b = (<span class="built_in">Math</span>.min(<span class="built_in">Math</span>.max(-self.mouseX, -self.size), self.size) / self.radius ) * self.mspeed;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">Math</span>.abs(a) &lt;= <span class="number">0.01</span> &amp;&amp; <span class="built_in">Math</span>.abs(b) &lt;= <span class="number">0.01</span>) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line"></span><br><span class="line">            self.lasta = a;</span><br><span class="line">            self.lastb = b;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> sc = TagCloud._getSc(a, b);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> j = <span class="number">0</span>, len = self.items.length; j &lt; len; j++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> rx1 = self.items[j].x,</span><br><span class="line">                    ry1 = self.items[j].y*sc[<span class="number">1</span>] + self.items[j].z*(-sc[<span class="number">0</span>]),</span><br><span class="line">                    rz1 = self.items[j].y*sc[<span class="number">0</span>] + self.items[j].z*sc[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">var</span> rx2 = rx1 * sc[<span class="number">3</span>] + rz1 * sc[<span class="number">2</span>],</span><br><span class="line">                    ry2 = ry1,</span><br><span class="line">                    rz2 = rz1 * sc[<span class="number">3</span>] - rx1 * sc[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span>(self.index==j)&#123;</span><br><span class="line"></span><br><span class="line">                    self.items[j].scale = <span class="number">1</span>; <span class="comment">//取值范围0.6 ~ 3</span></span><br><span class="line">                    self.items[j].fontsize = <span class="number">16</span>;</span><br><span class="line">                    self.items[j].alpha = <span class="number">1</span>;</span><br><span class="line">                    self.items[j].element.style.zIndex = <span class="number">99</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">var</span> per = self.depth / (self.depth + rz2);</span><br><span class="line">                    self.items[j].x = rx2;</span><br><span class="line">                    self.items[j].y = ry2;</span><br><span class="line">                    self.items[j].z = rz2;</span><br><span class="line"></span><br><span class="line">                    self.items[j].scale = per; <span class="comment">//取值范围0.6 ~ 3</span></span><br><span class="line">                    self.items[j].fontsize = <span class="built_in">Math</span>.ceil(per * <span class="number">2</span>) + self.fontsize - <span class="number">6</span>;</span><br><span class="line">                    self.items[j].alpha = <span class="number">1.5</span> * per - <span class="number">0.5</span>;</span><br><span class="line">                    self.items[j].element.style.zIndex = <span class="built_in">Math</span>.ceil(per*<span class="number">10</span><span class="number">-5</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//self.items[j].element.style.fontSize = self.items[j].fontsize + "px";//字体变大小</span></span><br><span class="line">                self.items[j].element.style.left = self.items[j].x + (self.box.offsetWidth - self.items[j].offsetWidth) / <span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">                self.items[j].element.style.top = self.items[j].y + (self.box.offsetHeight - self.items[j].offsetHeight) / <span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">                self.items[j].element.style.filter = <span class="string">"alpha(opacity="</span> + <span class="number">100</span> * self.items[j].alpha + <span class="string">")"</span>;</span><br><span class="line">                self.items[j].element.style.opacity = self.items[j].alpha;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        _getItems: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> self = <span class="keyword">this</span>,</span><br><span class="line">                items = [],</span><br><span class="line">                element = self.box.children, <span class="comment">// children 全部是Element</span></span><br><span class="line">                length = element.length,</span><br><span class="line">                item;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">                item = &#123;&#125;;</span><br><span class="line">                item.angle = &#123;&#125;;</span><br><span class="line">                item.angle.phi = <span class="built_in">Math</span>.acos(<span class="number">-1</span> + (<span class="number">2</span> * i + <span class="number">1</span>) / length);</span><br><span class="line">                item.angle.theta = <span class="built_in">Math</span>.sqrt((length + <span class="number">1</span>) * <span class="built_in">Math</span>.PI) * item.angle.phi;</span><br><span class="line">                item.element = element[i];</span><br><span class="line">                item.offsetWidth = item.element.offsetWidth;</span><br><span class="line">                item.offsetHeight = item.element.offsetHeight;</span><br><span class="line">                item.x = self.radius * <span class="number">1.5</span> * <span class="built_in">Math</span>.cos(item.angle.theta) * <span class="built_in">Math</span>.sin(item.angle.phi);</span><br><span class="line">                item.y = self.radius * <span class="number">1.5</span> * <span class="built_in">Math</span>.sin(item.angle.theta) * <span class="built_in">Math</span>.sin(item.angle.phi);</span><br><span class="line">                item.z = self.radius * <span class="number">1.5</span> * <span class="built_in">Math</span>.cos(item.angle.phi);</span><br><span class="line">                item.element.style.left = item.x + (self.box.offsetWidth - item.offsetWidth) / <span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">                item.element.style.top = item.y + (self.box.offsetHeight - item.offsetHeight) / <span class="number">2</span> + <span class="string">"px"</span>;</span><br><span class="line">                items.push(item);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> items;   <span class="comment">//单元素数组</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!doc.querySelectorAll) &#123;<span class="comment">//ie7不支持querySelectorAll，所以要重新定义</span></span><br><span class="line">        doc.querySelectorAll = <span class="function"><span class="keyword">function</span> (<span class="params">selectors</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> style = doc.createElement(<span class="string">'style'</span>), elements = [], element;</span><br><span class="line">            doc.documentElement.firstChild.appendChild(style);</span><br><span class="line">            doc._qsa = [];</span><br><span class="line"></span><br><span class="line">            style.styleSheet.cssText = selectors + <span class="string">'&#123;x-qsa:expression(document._qsa &amp;&amp; document._qsa.push(this))&#125;'</span>;</span><br><span class="line">            <span class="built_in">window</span>.scrollBy(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">            style.parentNode.removeChild(style);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> (doc._qsa.length) &#123;</span><br><span class="line">                element = doc._qsa.shift();</span><br><span class="line">                element.style.removeAttribute(<span class="string">'x-qsa'</span>);</span><br><span class="line">                elements.push(element);</span><br><span class="line">            &#125;</span><br><span class="line">            doc._qsa = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">return</span> elements;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">options</span>) </span>&#123; <span class="comment">// factory</span></span><br><span class="line">        options = options || &#123;&#125;; <span class="comment">// 短路语法</span></span><br><span class="line">        <span class="keyword">var</span> selector = options.selector || <span class="string">'.tagcloud'</span>, <span class="comment">//默认选择class为tagcloud的元素</span></span><br><span class="line">            elements = doc.querySelectorAll(selector),</span><br><span class="line">            instance = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> index = <span class="number">0</span>, len = elements.length; index &lt; len; index++) &#123;</span><br><span class="line">            options.element = elements[index];</span><br><span class="line">            <span class="keyword">if</span> (!!TagCloud._set(options.element)) &#123;</span><br><span class="line">                instance.push(<span class="keyword">new</span> TagCloud(options));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">&#125;)(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure></div><ol start="3"><li>在 next/layout/_layout.swig 中，引入上边的 bubble.js，引入位置在 <code>head</code> 标签内，比如这样：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&#123;% set html_class = 'theme-next ' + theme.scheme %&#125;</span><br><span class="line">&#123;% if theme.motion.enable %&#125;</span><br><span class="line">  &#123;% set html_class = html_class + ' use-motion' %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&lt;html class="&#123;&#123; html_class | lower &#125;&#125;" lang="&#123;&#123; config.language &#125;&#125;"&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &#123;% include '_partials/head.swig' %&#125;</span><br><span class="line">  &lt;title&gt;&#123;% block title %&#125;&#123;% endblock %&#125;&lt;/title&gt;</span><br><span class="line">  </span><br><span class="line"><span class="addition">+  &lt;!-- 球型气泡标签云 --&gt;</span></span><br><span class="line"><span class="addition">+  &lt;script type="text/javascript" src="/js/src/bubble.js"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">  &#123;% include '_third-party/analytics/index.swig' %&#125;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure></div><ol start="4"><li>在 next/layout/page.swig 中，引入 tag-bubble.swig，位置在 tag-love.swig 下方即可。</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include 'tag-bubble.swig' %&#125;</span><br></pre></td></tr></table></figure></div><p>这样就配置完成了，重启看下效果吧！觉得不错的话，可以在文章下方给个好（da）评（shang）哦~</p><div class="note success"><p><a href="https://github.com/leafjame/hexo-theme-next5-leaf" target="_blank" rel="noopener">本站</a> 已集成 5 种标签页样式，可动态配置，欢迎 star、fork</p></div>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 自定义 </tag>
            
            <tag> hexo-tag-cloud </tag>
            
            <tag> 标签 </tag>
            
            <tag> 标签云 </tag>
            
            <tag> 心形 </tag>
            
            <tag> 球型 </tag>
            
            <tag> 气泡 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT主题美化2.0</title>
      <link href="/posts/2114475547.html"/>
      <url>/posts/2114475547.html</url>
      
        <content type="html"><![CDATA[<p>前期，对网站一番魔改，视觉效果全面提升。功能诸如主页轮播图、评论邮件通知、标签页美化、归档页美化、相册、文章推荐等。小改的地方包括页面分享功能、鼠标样式、类知乎卡片页…关于魔改，仁者见仁智者见智，在此记录一下相关功能的具体实现。</p><a id="more"></a><div class="note success"><p>PS：<a href="https://github.com/leafjame/hexo-theme-next5-leaf" target="_blank" rel="noopener">本站</a> 已集成以下所有功能，全动态配置，欢迎 star、fork ！</p></div><h4 id="主页轮播图"><a href="#主页轮播图" class="headerlink" title="主页轮播图"></a>主页轮播图</h4><ol><li><p>在 /themes/next/layout/_macro/ 目录下，新建 carousel.swig 文件：</p><a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/share/swig/carousel.swig" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>carousel.swig</a></li><li><p>在 /themes/next/layout/index.swig 中，找到</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br></pre></td></tr></table></figure></div><p>在其下方引入新建的 carousel.swig 文件：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--轮播图--&gt;</span></span><br><span class="line">&#123;% include '_macro/carousel.swig' %&#125;</span><br></pre></td></tr></table></figure></div><ol start="3"><li>在主题配置文件末尾添加：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Home carousel map, from means link, img means picture</span></span><br><span class="line"><span class="attr">carousel:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item:</span> <span class="string">[</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line">      <span class="attr">'link':</span> <span class="string">'文章链接地址'</span><span class="string">,</span></span><br><span class="line">      <span class="attr">'img':</span> <span class="string">'图片链接地址'</span></span><br><span class="line">    <span class="string">&#125;,</span></span><br><span class="line">    <span class="string">&#123;</span></span><br><span class="line">      <span class="attr">'link':</span> <span class="string">'文章链接地址'</span><span class="string">,</span></span><br><span class="line">      <span class="attr">'img':</span> <span class="string">'图片链接地址'</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line">  <span class="string">]</span></span><br></pre></td></tr></table></figure></div><p>轮播图相应的实现逻辑，可参考 Bootstrap 官方 Carousel 实现：</p><p><a href="https://getbootstrap.com/docs/4.0/components/carousel/" class="LinkCard" target="_blank" rel="noopener">Bootstrap Carousel</a></p><p><strong>可能遇到的问题</strong></p><ol><li>the requested content cannot be loaded. please try again later</li></ol><p>如点击轮播图出现</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/1.jpg" alt="KPg5Ax.jpg"></p><p>可在 /themes/next/source/js/src/utils.js 的 wrapImageWithFancyBox 方法中增加以下第 8 行代码:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> wrapImageWithFancyBox: function () &#123;</span><br><span class="line">    $('.content img')</span><br><span class="line">      .not('[hidden]')</span><br><span class="line">      .not('.group-picture img, .post-gallery img')</span><br><span class="line">      .each(function () &#123;</span><br><span class="line">        var $image = $(this);</span><br><span class="line">        /*解决fancybox和图片链接冲突*/</span><br><span class="line"><span class="addition">+       if ($(this).hasClass('nofancybox')) return;</span></span><br><span class="line"></span><br><span class="line">        var imageTitle = $image.attr('title');</span><br><span class="line">        var $imageWrapLink = $image.parent('a');</span><br><span class="line"></span><br><span class="line">        if ($imageWrapLink.size() &lt; 1) &#123;</span><br><span class="line">        var imageLink = ($image.attr('data-original')) ? this.getAttribute('data-original') : this.getAttribute('src');</span><br><span class="line">          $imageWrapLink = $image.wrap('&lt;a href="' + imageLink + '"&gt;&lt;/a&gt;').parent('a');</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $imageWrapLink.addClass('fancybox fancybox.image');</span><br><span class="line">        $imageWrapLink.attr('rel', 'group');</span><br><span class="line"></span><br><span class="line">        if (imageTitle) &#123;</span><br><span class="line">          $imageWrapLink.append('&lt;p class="image-caption"&gt;' + imageTitle + '&lt;/p&gt;');</span><br><span class="line"></span><br><span class="line">          //make sure img title tag will show correctly in fancybox</span><br><span class="line">          $imageWrapLink.attr('title', imageTitle);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">    $('.fancybox').fancybox(&#123;</span><br><span class="line">      helpers: &#123;</span><br><span class="line">        overlay: &#123;</span><br><span class="line">          locked: false</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></div><p>然后，在 carousel.swig 中，为 img 标签加上：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class="nofancybox"</span><br></pre></td></tr></table></figure></div><ol start="2"><li>轮播图锚点（被困扰 N 久）</li></ol><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/2.gif" alt="nlOMHU.gif"></p><p>点击轮播图左右导航按钮时，a 标签的 href 会锚点到 <code>myCarousel</code> 处，引起页面滚动。可将 href 属性改成 data-target，如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"left carousel-control"</span> <span class="attr">data-target</span>=<span class="string">"#myCarousel"</span> <span class="attr">href</span>=<span class="string">"javascript:void(0);"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">data-slide</span>=<span class="string">"prev"</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p>以下是本站 carousel.swig 和图标：</p><a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/share/swig/carousel_new.swig" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>carousel.swig</a> <a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/icon/icon-slides.png" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>icon-slides</a><div class="note danger"><p><font color="yellow;">注意：</font>部分图片需自己制作，样式微调</p></div><h4 id="valine-admin"><a href="#valine-admin" class="headerlink" title="valine-admin"></a>valine-admin</h4><p>刚建站那会，使用了多款评论插件，从 gitalk 到 livere（来必力）到 valine，一路折腾，最终找到了更喜欢的 valine-admin</p><blockquote><p>Valine Admin 是 Valine 评论系统的扩展和增强，主要实现评论邮件通知、评论管理、垃圾评论过滤等功能。支持完全自定义的邮件通知模板，基于 Akismet API 实现准确的垃圾评论过滤</p></blockquote><p>Hexo NexT主题整合步骤如下：</p><ol><li><p>下载 <a href="https://github.com/DesertsP/Valine/releases" target="_blank" rel="noopener">Valine.min.js</a> 文件，放到 /themes/next/source/js/src/ 下，也可以上传到自己的服务器或主机上（或者直接使用别人提供的外链）。</p></li><li><p>修改 /themes/next/layout/_third-party/comments/valine.swig 代码如下：</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.valine.enable and theme.valine.appid and theme.valine.appkey %&#125;</span><br><span class="line">  &lt;script src=<span class="string">"//cdn1.lncld.net/static/js/3.0.4/av-min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script src="/</span>js/src/Valine.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;!-- https://deserts.io/diy-a-comment-system/ --&gt;</span></span><br><span class="line"><span class="string">  &lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    new Valine(&#123;</span></span><br><span class="line"><span class="string">        lang: 'zh-cn',</span></span><br><span class="line"><span class="string">        admin_email: '793458585@qq.com', //博主邮箱</span></span><br><span class="line"><span class="string">        el: '#comments' ,</span></span><br><span class="line"><span class="string">        appId: '&#123;&#123; theme.valine.appid &#125;&#125;',</span></span><br><span class="line"><span class="string">        appKey: '&#123;&#123; theme.valine.appkey &#125;&#125;',</span></span><br><span class="line"><span class="string">        emoticon_url: 'https://cloud.panjunwen.com/alu',</span></span><br><span class="line"><span class="string">        emoticon_list: ["</span>吐.png<span class="string">","</span>喷血.png<span class="string">","</span>狂汗.png<span class="string">","</span>不说话.png<span class="string">","</span>汗.png<span class="string">","</span>坐等.png<span class="string">","</span>献花.png<span class="string">","</span>不高兴.png<span class="string">","</span>中刀.png<span class="string">","</span>害羞.png<span class="string">","</span>皱眉.png<span class="string">","</span>小眼睛.png<span class="string">","</span>中指.png<span class="string">","</span>尴尬.png<span class="string">","</span>瞅你.png<span class="string">","</span>想一想.png<span class="string">","</span>中枪.png<span class="string">","</span>得意.png<span class="string">","</span>肿包.png<span class="string">","</span>扇耳光.png<span class="string">","</span>亲亲.png<span class="string">","</span>惊喜.png<span class="string">","</span>脸红.png<span class="string">","</span>无所谓.png<span class="string">","</span>便便.png<span class="string">","</span>愤怒.png<span class="string">","</span>蜡烛.png<span class="string">","</span>献黄瓜.png<span class="string">","</span>内伤.png<span class="string">","</span>投降.png<span class="string">","</span>观察.png<span class="string">","</span>看不见.png<span class="string">","</span>击掌.png<span class="string">","</span>抠鼻.png<span class="string">","</span>邪恶.png<span class="string">","</span>看热闹.png<span class="string">","</span>口水.png<span class="string">","</span>抽烟.png<span class="string">","</span>锁眉.png<span class="string">","</span>装大款.png<span class="string">","</span>吐舌.png<span class="string">","</span>无奈.png<span class="string">","</span>长草.png<span class="string">","</span>赞一个.png<span class="string">","</span>呲牙.png<span class="string">","</span>无语.png<span class="string">","</span>阴暗.png<span class="string">","</span>不出所料.png<span class="string">","</span>咽气.png<span class="string">","</span>期待.png<span class="string">","</span>高兴.png<span class="string">","</span>吐血倒地.png<span class="string">","</span>哭泣.png<span class="string">","</span>欢呼.png<span class="string">","</span>黑线.png<span class="string">","</span>喜极而泣.png<span class="string">","</span>喷水.png<span class="string">","</span>深思.png<span class="string">","</span>鼓掌.png<span class="string">","</span>暗地观察.png<span class="string">"],</span></span><br><span class="line"><span class="string">        placeholder: '&#123;&#123; theme.valine.placeholder &#125;&#125;',</span></span><br><span class="line"><span class="string">  &#125;);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  &lt;/script&gt;</span></span><br><span class="line"><span class="string">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure></div><p>主题配置文件中的 valine 可这样配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span>  <span class="string">your</span> <span class="string">appid</span> <span class="comment">#&lt;app_id&gt;</span></span><br><span class="line">  <span class="attr">appkey:</span> <span class="string">your</span> <span class="string">appkey</span> <span class="comment">#&lt;app_key&gt;</span></span><br><span class="line">  <span class="attr">notify:</span> <span class="literal">false</span> <span class="comment"># mail notifier # 关闭，使用valine-admin发邮件</span></span><br><span class="line">  <span class="attr">verify:</span> <span class="literal">false</span> <span class="comment"># Verification code</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">'&amp;#x270d;写评论'</span>  <span class="comment"># comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># gravatar style</span></span><br><span class="line">  <span class="attr">guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># pagination size</span></span><br></pre></td></tr></table></figure></div><p>这样就完成 valine 替换，不过文章标题下方的评论数会不显示，这功能作者目前没有实现，只能先隐藏，详细教程可参考：</p><p><a href="https://deserts.io/diy-a-comment-system/" class="LinkCard" target="_blank" rel="noopener">Valine: 评论系统</a></p><p>有关 Valine Admin 邮件通知功能，可参考：</p><p><a href="https://deserts.io/valine-admin-document/" class="LinkCard" target="_blank" rel="noopener">Valine Admin 配置手册</a></p><p>我使用的是<strong>国际版 Leancloud</strong>，要对应于北京时间，可相应减8小时，例如我是这样配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 北京时间每天早8点检查过去24小时内漏发的通知邮件并补发</span><br><span class="line">0 0 0 * * ?</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 每天早0点到晚23点每隔30分钟访问云引擎</span><br><span class="line">0 0/30 0-23 * * ?</span><br></pre></td></tr></table></figure></div><blockquote><p>可根据后边的『下次执行时间』进行调整。</p></blockquote><p>附上我个人正在使用的邮件模板和邮件主题</p><p><strong>MAIL_TEMPLATE_ADMIN</strong>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-radius: 10px 10px 10px 10px;font-size:13px; color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;"</span>&gt;</span>您的<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color: #ffffff;"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span> 『$&#123;SITE_NAME&#125;』 <span class="tag">&lt;/<span class="name">a</span>&gt;</span>上有了新的评论 <span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin:40px auto;width:90%"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>"$&#123;NICK&#125;"<span class="tag">&lt;/<span class="name">strong</span>&gt;</span> 发表评论：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span>$&#123;COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"$&#123;POST_URL&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>[查看详情]<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">text-decoration</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><strong>MAIL_TEMPLATE</strong>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"border-radius: 10px 10px 10px 10px;font-size:13px;color: #555555;width: 666px;font-family:'Century Gothic','Trebuchet MS','Hiragino Sans GB',微软雅黑,'Microsoft Yahei',Tahoma,Helvetica,Arial,'SimSun',sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;"</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none;color: #ffffff;"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span>『$&#123;SITE_NAME&#125;』<span class="tag">&lt;/<span class="name">a</span>&gt;</span>上的留言有新回复啦！！！<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin:40px auto;width:90%"</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>"<span class="tag">&lt;<span class="name">strong</span>&gt;</span>$&#123;PARENT_NICK&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>" 同学，您曾发表评论：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span>$&#123;PARENT_COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>"<span class="tag">&lt;<span class="name">strong</span>&gt;</span>$&#123;NICK&#125;<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>" 给您的回复如下：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;"</span>&gt;</span>$&#123;COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>您可以点击：<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"$&#123;POST_URL&#125;"</span>&gt;</span>[回复的完整内容] <span class="tag">&lt;/<span class="name">a</span>&gt;</span>进行查看。欢迎再次光临<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">"text-decoration:none; color:#12addb"</span> <span class="attr">href</span>=<span class="string">"$&#123;SITE_URL&#125;"</span>&gt;</span> 『$&#123;SITE_NAME&#125;』<span class="tag">&lt;/<span class="name">a</span>&gt;</span>！！！<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">text-decoration</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><p><strong>MAIL_SUBJECT_ADMIN</strong>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">叮咚！『$&#123;SITE_NAME&#125;』上有了新评论！</span><br></pre></td></tr></table></figure></div><p><strong>MAIL_SUBJECT</strong>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;PARENT_NICK&#125;，您在『$&#123;SITE_NAME&#125;』上的评论收到了回复</span><br></pre></td></tr></table></figure></div><p>另外：点击邮件中的链接跳转至相应评论，可在 /themes/next/layout/_third-party/comments/valine.swig 中添加如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.location.hash)&#123;</span><br><span class="line">        <span class="keyword">var</span> checkExist = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">if</span> ($(<span class="built_in">window</span>.location.hash).length) &#123;</span><br><span class="line">              $(<span class="string">'html, body'</span>).animate(&#123;<span class="attr">scrollTop</span>: $(<span class="built_in">window</span>.location.hash).offset().top<span class="number">-90</span>&#125;, <span class="number">1000</span>);</span><br><span class="line">              clearInterval(checkExist);</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p>具体效果，可在下方的评论区体验哦~</p><h4 id="彩色标签页"><a href="#彩色标签页" class="headerlink" title="彩色标签页"></a>彩色标签页</h4><p>在 /themes/next/layout/ 目录下，新增 tag-color.swig 文件，填入如下内容：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">     <span class="keyword">var</span> alltags = <span class="built_in">document</span>.getElementsByClassName(<span class="string">'tag-cloud-tags'</span>);</span><br><span class="line">     <span class="keyword">var</span> tags = alltags[<span class="number">0</span>].getElementsByTagName(<span class="string">'a'</span>);</span><br><span class="line">     <span class="keyword">for</span> (<span class="keyword">var</span> i = tags.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">       <span class="keyword">var</span> r=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">130</span>);</span><br><span class="line">       <span class="keyword">var</span> g=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">100</span>);</span><br><span class="line">       <span class="keyword">var</span> b=<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">75</span>+<span class="number">80</span>);</span><br><span class="line">       tags[i].style.background = <span class="string">"rgb("</span>+r+<span class="string">","</span>+g+<span class="string">","</span>+b+<span class="string">")"</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;style&gt;</span></span><br><span class="line"><span class="regexp">  .tag-cloud-tags&#123;</span></span><br><span class="line"><span class="regexp">    /</span>*font-family: Helvetica, Tahoma, Arial;*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">    /</span>*font-weight: <span class="number">100</span>;*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">    text-align: center;</span></span><br><span class="line"><span class="regexp">    counter-reset: tags;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">  .tag-cloud-tags a&#123;</span></span><br><span class="line"><span class="regexp">    border-radius: 6px;</span></span><br><span class="line"><span class="regexp">    padding-right: 5px;</span></span><br><span class="line"><span class="regexp">    padding-left: 5px;</span></span><br><span class="line"><span class="regexp">    margin: 8px 5px 0px 0px;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">  .tag-cloud-tags a:before&#123;</span></span><br><span class="line"><span class="regexp">    content: "🔖";</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">  .tag-cloud-tags a:hover&#123;</span></span><br><span class="line"><span class="regexp">     box-shadow: 0px 5px 15px 0px rgba(0,0,0,.4);</span></span><br><span class="line"><span class="regexp">     transform: scale(1.1);</span></span><br><span class="line"><span class="regexp">     /</span>*box-shadow: <span class="number">10</span>px <span class="number">10</span>px <span class="number">15</span>px <span class="number">2</span>px rgba(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">.12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6</span>px <span class="number">0</span> rgba(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);*<span class="regexp">/</span></span><br><span class="line"><span class="regexp">     transition-duration: 0.15s;</span></span><br><span class="line"><span class="regexp">  &#125;</span></span><br><span class="line"><span class="regexp">&lt;/</span>style&gt;</span><br></pre></td></tr></table></figure></div><p>在同级目录的 page.swig 中引入 tag-color.swig</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    &lt;div class="tag-cloud"&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 目前共计xxx个标签</span><br><span class="line">        &lt;div class="tag-cloud-title"&gt;</span><br><span class="line">            &#123;&#123; _p('counter.tag_cloud', site.tags.length) &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        --&gt;</span><br><span class="line">    </span><br><span class="line">        &lt;div class="tag-cloud-tags"&gt;</span><br><span class="line">          &#123;&#123; tagcloud(&#123;min_font: 10, max_font: 15, amount: 300, color: true, start_color: '#ccc', end_color: '#111'&#125;) &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line"><span class="addition">+     &#123;% include 'tag-color.swig' %&#125;</span></span><br><span class="line">    </span><br><span class="line">    &#123;% elif page.type <span class="comment">=== 'categories' %&#125;</span></span><br><span class="line">      &lt;div class="category-all-page"&gt;</span><br><span class="line">        &lt;div class="category-all-title"&gt;</span><br><span class="line">            &#123;&#123; _p('counter.categories', site.categories.length) &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;div class="category-all"&gt;</span><br><span class="line">          &#123;&#123; list_categories() &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br></pre></td></tr></table></figure></div><p>hexo 三连，打开 <a href="https://www.liaofuzhan.com/tags/">我的标签页</a> 看看效果吧</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/3.jpg" alt="KP2ivQ.jpg"></p><div class="note info"><p>以下是文章底部的标签样式</p></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*文章底部标签样式*/</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-tags</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">12</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line">  <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">12</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">12</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Comic Sans MS'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">2s</span> ease-out;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line"></span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">padding</span>: 1<span class="selector-tag">px</span> 3<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 8<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">100</span>,<span class="number">154</span>,<span class="number">182</span>,<span class="number">0.902</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>), <span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.19</span>);</span><br><span class="line">    <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>), <span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.19</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>), <span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.19</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>代码拷入 /themes/next/source/css/_custom/custom.styl 即可，效果参考文章末尾处的标签。其它自定义标签样式，可参考：</p><p><a href="https://www.liaofuzhan.com/posts/4158923031.html" class="LinkCard">Hexo NexT主题之自定义标签页</a></p><h4 id="归档页美化"><a href="#归档页美化" class="headerlink" title="归档页美化"></a>归档页美化</h4><ol><li>修改 /themes/next/layout/_macro/post-collapse.swig 后的代码如下：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;% macro render(post) %&#125;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">article</span> <span class="attr">class</span>=<span class="string">"my-post post-type-&#123;&#123; post.type | default('normal') &#125;&#125;"</span> <span class="attr">itemscope</span> <span class="attr">itemtype</span>=<span class="string">"http://schema.org/Article"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">"my-post-header"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"my-post-meta"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">time</span> <span class="attr">class</span>=<span class="string">"my-post-time"</span> <span class="attr">itemprop</span>=<span class="string">"dateCreated"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">datetime</span>=<span class="string">"&#123;&#123; moment(post.date).format() &#125;&#125;"</span></span></span><br><span class="line"><span class="tag">              <span class="attr">content</span>=<span class="string">"&#123;&#123; date(post.date, config.date_format) &#125;&#125;"</span> &gt;</span></span><br><span class="line">          &#123;&#123; date(post.date, 'MM-DD') &#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">time</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">&#123;%</span> <span class="attr">if</span> <span class="attr">theme.seo</span> %&#125;<span class="attr">h3</span>&#123;% <span class="attr">else</span> %&#125;<span class="attr">h2</span>&#123;% <span class="attr">endif</span> %&#125; <span class="attr">class</span>=<span class="string">"my-post-title"</span>&gt;</span></span><br><span class="line">        &#123;% if post.link %&#125;&#123;# Link posts #&#125;</span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"my-post-title-link post-title-link-external"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(post.link) &#125;&#125;"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span></span><br><span class="line">            &#123;&#123; post.title or post.link &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-external-link"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% else %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"my-post-title-link"</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(post.path) &#125;&#125;"</span> <span class="attr">itemprop</span>=<span class="string">"url"</span>&gt;</span></span><br><span class="line">              &#123;% if post.type === 'picture' %&#125;</span><br><span class="line">                &#123;&#123; post.content &#125;&#125;</span><br><span class="line">              &#123;% else %&#125;</span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">itemprop</span>=<span class="string">"name"</span>&gt;</span>&#123;&#123; post.title | default(__('post.untitled')) &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">              &#123;% endif %&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">&#123;%</span> <span class="attr">if</span> <span class="attr">theme.seo</span> %&#125;<span class="attr">h3</span>&#123;% <span class="attr">else</span> %&#125;<span class="attr">h2</span>&#123;% <span class="attr">endif</span> %&#125;&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure></div><p>主要修改：一是将 post-meta 这个 div 移到前面 header 标签下；二是将所有的 class 属性都加上 <strong>my-</strong>，例如 my-post-meta，这样改动是为了不影响其它页面引用的样式。</p><ol start="2"><li>在 /themes/next/source/css/_custom/custom.styl 新增如下样式：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 归档页样式 began */</span></span><br><span class="line"><span class="selector-class">.page-archive</span> <span class="selector-class">.archive-page-counter</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 16<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post-time</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">11px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mypost</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-o-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-ms-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.my-post-title-link</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"📚"</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font</span>: normal normal normal <span class="number">14px</span>/<span class="number">1</span> FontAwesome;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">width</span>: 260<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-left</span>: 18<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  //display:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.my-post-title-link</span>&#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post-title</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">4.5rem</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4c4948</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">8rem</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    //margin-left: 4rem;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post-header</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: top;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-o-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-ms-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line">//.my-post-title-link&#123;</span><br><span class="line">//  font-size: 16px;</span><br><span class="line">//  font-weight: 500;</span><br><span class="line">//&#125;</span><br><span class="line"><span class="selector-class">.my-post-meta</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#99a9bf</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#114142</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.post-block</span><span class="selector-class">.tag</span> <span class="selector-class">.collection-title</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#3f3f3f</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#b4e8fa</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">1.5px</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#3f3f3f</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 18<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-list-link</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span><br><span class="line">  //display:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 归档页样式 end */</span></span><br></pre></td></tr></table></figure></div><p>根据需要调整对应的样式，效果可查看：</p><p><a href="https://www.liaofuzhan.com/archives" class="LinkCard">归档页样式效果</a></p><h4 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h4><p>相册功能可参考<a href="https://me.idealli.com/post/73ad4183.html" target="_blank" rel="noopener">兰州小红鸡</a>，使用的是腾讯云 cos 作为相册存储桶。实名认证后，赠送 50GB 标准存储容量，有效期 6 个月，但是访问或下载对象产生的外网下行流量是单独计费的，可以购买 COS 下行流量包，具体可参考官网。</p><p>相册调试开始的这两天，我每天刷掉了 5G 左右的流量，费用大概 5 块钱吧，欠费第二天就被禁用了，需要充值缴费，要么删数据。腾讯嘛，你懂的。虽然流量也不是很贵，但对我这种负债的人来说，还是想想其他办法吧，主要是免费的用惯了，哈哈~</p><p>期间也考虑使用七牛云图床，对象存储的<a href="https://developer.qiniu.com/sdk#official-sdk" target="_blank" rel="noopener">官方 SDK</a> 挺全，也能通过 api 获取到图片。主要是不想整这么复杂，再者我还没绑定域名，其融合 CDN 加速域名会在 30 个自然日后自动回收。当然了，它的 CDN-HTTP 流量也是按量收费，貌似没腾讯的贵。基本是类似的一个套路吧。</p><p>考虑到自己这相册也不常用，放上些个性化图片就行，无需经常更新，所以就选择用免费的图床链接来实现。完整代码：</p><a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/share/md/photo.md" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>index.md</a><p>部分逻辑参考小红鸡的做法，这里代码做了简化，将图片标题、链接写成 json 格式即可。自定义排序，拷贝代码到你的网站即可看到效果，其他样式按需修改，效果：</p><p><a href="https://www.liaofuzhan.com/photos/" class="LinkCard">我的相册——时光留影</a></p><h4 id="文章推荐"><a href="#文章推荐" class="headerlink" title="文章推荐"></a>文章推荐</h4><p>文章结束时，开启相关文章推荐功能，会根据文章标签的相关度推荐相关的文章，效果像这样：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/4.jpg" alt="KP2m5V.jpg"></p><ol><li>该功能需要依赖 <a href="https://github.com/tea3/hexo-related-popular-posts" target="_blank" rel="noopener">hexo-related-popular-posts</a> 插件：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-related-popular-posts --save</span><br></pre></td></tr></table></figure></div><ol start="2"><li>在 /themes/next/layout/_macro/ 目录下，新建 post-related.swig 文件，内容如下：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">set</span> popular_posts = popular_posts_json(theme.related_posts.params, post) %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> popular_posts.json and popular_posts.json.length &gt; <span class="number">0</span> %&#125;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"popular-posts-header"</span>&gt;</span><br><span class="line">    &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-&#123;&#123; theme.related_posts.icon &#125;&#125;"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">    &#123;&#123; theme.related_posts.title | default(__('post.related_posts')) &#125;&#125;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line"> &lt;details&gt;</span><br><span class="line">   &lt;summary&gt;点击查看&lt;<span class="regexp">/summary&gt;</span></span><br><span class="line"><span class="regexp">     &lt;ul class="popular-posts"&gt;</span></span><br><span class="line"><span class="regexp">     &#123;% for popular_post in popular_posts.json %&#125;</span></span><br><span class="line"><span class="regexp">       &lt;li class="popular-posts-item"&gt;</span></span><br><span class="line"><span class="regexp">         &#123;% if popular_post.date and popular_post.date != '' %&#125;</span></span><br><span class="line"><span class="regexp">           &lt;div class="popular-posts-date"&gt;&#123;&#123; popular_post.date &#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">         &#123;% endif %&#125;</span><br><span class="line">         &#123;% <span class="keyword">if</span> popular_post.img &amp;&amp; popular_post.img != <span class="string">''</span> %&#125;</span><br><span class="line">           &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"popular-posts-img"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; popular_post.img &#125;&#125;"</span> /&gt;</span></span>&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">         &#123;% endif %&#125;</span></span><br><span class="line"><span class="regexp">         &lt;div class="popular-posts-title"&gt;&lt;a href="&#123;&#123; popular_post.path &#125;&#125;" rel="bookmark"&gt;&#123;&#123; popular_post.title &#125;&#125;&lt;/</span>a&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">         &#123;% if popular_post.excerpt &amp;&amp; popular_post.excerpt != '' %&#125;</span></span><br><span class="line"><span class="regexp">           &lt;div class="popular-posts-excerpt"&gt;&lt;p&gt;&#123;&#123; popular_post.excerpt &#125;&#125;&lt;/</span>p&gt;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">         &#123;% endif %&#125;</span></span><br><span class="line"><span class="regexp">       &lt;/</span>li&gt;</span><br><span class="line">     &#123;% endfor %&#125;</span><br><span class="line">     &lt;<span class="regexp">/ul&gt;</span></span><br><span class="line"><span class="regexp"> &lt;/</span>details&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><p>在同级别的 post.swig 中 <strong>END POST BODY</strong> 上方（POST 文章末尾）引入：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!-- 相关文章推荐 --&gt;</span><br><span class="line">&#123;% <span class="keyword">if</span> theme.related_posts.enable and (theme.related_posts.display_in_home or not is_index) %&#125;</span><br><span class="line">     &#123;% include <span class="string">'post-related.swig'</span> <span class="keyword">with</span> &#123; <span class="attr">post</span>: post &#125; %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><ol start="3"><li>主题配置文件末尾加入如下配置：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Dependencies: https://github.com/tea3/hexo-related-popular-posts</span></span><br><span class="line"><span class="attr">related_posts:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">相关文章</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">graduation-cap</span></span><br><span class="line">  <span class="attr">display_in_home:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">params:</span></span><br><span class="line">    <span class="attr">maxCount:</span> <span class="number">10</span></span><br><span class="line">    <span class="comment">#PPMixingRate: 0.0</span></span><br><span class="line">    <span class="comment">#isDate: false</span></span><br><span class="line">    <span class="comment">#isImage: false</span></span><br><span class="line">    <span class="comment">#isExcerpt: false</span></span><br></pre></td></tr></table></figure></div><ol start="4"><li>可选配置，在 /themes/next/source/css/_custom/custom.styl 中添加：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*相关文章推荐 pc样式设置*/</span></span><br><span class="line"><span class="selector-tag">summary</span>&#123;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">  +mobile() &#123;/*手机端*/</span><br><span class="line">    <span class="selector-tag">font-size</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-top</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">details</span>&#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">details</span> <span class="selector-class">.popular-posts</span>&#123;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">      <span class="selector-tag">margin</span>: 5<span class="selector-tag">px</span> <span class="selector-tag">-12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.popular-posts-header</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">  +mobile() &#123;/*手机端*/</span><br><span class="line">    <span class="selector-tag">font-size</span>: 18<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-top</span>: 25<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.popular-posts</span> <span class="selector-class">.popular-posts-item</span> <span class="selector-class">.popular-posts-title</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#999</span>;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="shareJS-分享"><a href="#shareJS-分享" class="headerlink" title="shareJS 分享"></a>shareJS 分享</h4><p>之前用的百度分享样式不大美观，加载不稳定，不支持 https（虽然改好了）等多种原因，遂使用 <a href="https://github.com/overtrue/share.js" target="_blank" rel="noopener">shareJS</a> 进行了替换，文档里提供了多种安装方式，简单说下我的步骤。</p><ol><li><p>github 下载 zip 文件，将解压的文件夹 dist 放到 next/source/ 目录</p></li><li><p>在 next/layout/_layout.swig 中 body 标签内部引入：</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--share.js--&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"/dist/css/share.min.css"</span>&gt;</span><br><span class="line">&lt;script src=<span class="string">"/dist/js/social-share.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><ol start="3"><li>在 /themes/next/layout/_partials/share/ 目录下新增 sharejs.swig 文件，添加如下代码：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-weibo-title</span>=<span class="string">"分享到微博"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-qq-title</span>=<span class="string">"分享到QQ"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-douban-title</span>=<span class="string">"分享到豆瓣"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"social-share"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">class</span>=<span class="string">"share-component"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">&#123;#</span></span><br><span class="line"><span class="tag">  <span class="attr">data-disabled</span>=<span class="string">"twitter,facebook"</span></span></span><br><span class="line"><span class="tag">#&#125;</span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">  <span class="attr">data-disabled</span>=<span class="string">"qzone,google+,linkedin"</span></span></span><br><span class="line"><span class="tag">  <span class="attr">data-description</span>=<span class="string">"Share.js - 一键分享到微博，QQ空间，腾讯微博，人人，豆瓣..."</span>&gt;</span></span><br><span class="line">   分享到：</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><ol start="4"><li>在 /themes/next/layout/post.swig 中 <code>&lt;div class=&quot;post-spread&quot;&gt;</code> 标签内部 endif 前引入：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.share_js %&#125;</span><br><span class="line"> &#123;% include <span class="string">'_partials/share/sharejs.swig'</span> %&#125;</span><br></pre></td></tr></table></figure></div><ol start="4"><li>主题配置文件增加：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">share_js:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><h4 id="鼠标样式"><a href="#鼠标样式" class="headerlink" title="鼠标样式"></a>鼠标样式</h4><p>在 /themes/next/source/css/_custom/custom.styl 添加样式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 鼠标样式 */</span></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(/images/default.cur),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:link</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(/images/pointer.cur),auto</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>用到的两个文件：default.cur、pointer.cur 位于 images 目录下，因为是 .cur 这种静态光标文件，编辑器打开是一堆 <a href="http://ascii.911cha.com/" target="_blank" rel="noopener">ASCII 码</a>，这里就不贴了，直接附上链接，当然，你也可以在浏览器里获取。</p><a class="btn" href="https://www.liaofuzhan.com/images/default.cur"><i class="fa fa-download fa-lg fa-fw"></i>default.cur</a> <a class="btn" href="https://www.liaofuzhan.com/images/pointer.cur"><i class="fa fa-download fa-lg fa-fw"></i>pointer.cur</a><h4 id="鼠标点击特效（4种）"><a href="#鼠标点击特效（4种）" class="headerlink" title="鼠标点击特效（4种）"></a>鼠标点击特效（4种）</h4><p>常用的 4 种特效为大家所列如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/5.jpg" alt="鼠标点击特效"></p><p>在主题 _config.yml 中添加动态配置项：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cursor_effect:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">love</span>  <span class="comment"># fireworks：礼花 | explosion：爆炸 | love：浮出爱心 | text：浮出文字</span></span><br></pre></td></tr></table></figure></div><p>在 /themes/next/layout/_custom/custom.swig 中，添加如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.cursor_effect %&#125;</span><br><span class="line">  &#123;% if theme.cursor_effect.type == "fireworks" %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/cursor/fireworks.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == "explosion" %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">class</span>=<span class="string">"fireworks"</span> <span class="attr">style</span>=<span class="string">"position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/animejs/2.2.0/anime.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/cursor/explosion.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == "love" %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/cursor/love.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == "text" %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/js/cursor/text.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><p>如果是第一次使用这个 custom.swig，则需要在 /themes/next/layout/_layout.swig 中引入</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include '_custom/custom.swig' %&#125;</span><br></pre></td></tr></table></figure></div><p>这里主要用到 /themes/next/source/js/cursor/ 目录的 4 个 JS 文件，下边分别贴一下代码</p><h5 id="fireworks-js"><a href="#fireworks-js" class="headerlink" title="fireworks.js"></a>fireworks.js</h5><a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/share/js/fireworks.js" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>fireworks.js</a><h5 id="explosion-min-js"><a href="#explosion-min-js" class="headerlink" title="explosion.min.js"></a>explosion.min.js</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;<span class="string">"use strict"</span>;<span class="function"><span class="keyword">function</span> <span class="title">updateCoords</span>(<span class="params">e</span>)</span>&#123;pointerX=(e.clientX||e.touches[<span class="number">0</span>].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[<span class="number">0</span>].clientY-canvasEl.getBoundingClientRect().top&#125;<span class="function"><span class="keyword">function</span> <span class="title">setParticuleDirection</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> t=anime.random(<span class="number">0</span>,<span class="number">360</span>)*<span class="built_in">Math</span>.PI/<span class="number">180</span>,a=anime.random(<span class="number">50</span>,<span class="number">180</span>),n=[<span class="number">-1</span>,<span class="number">1</span>][anime.random(<span class="number">0</span>,<span class="number">1</span>)]*a;<span class="keyword">return</span>&#123;<span class="attr">x</span>:e.x+n*<span class="built_in">Math</span>.cos(t),<span class="attr">y</span>:e.y+n*<span class="built_in">Math</span>.sin(t)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticule</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=colors[anime.random(<span class="number">0</span>,colors.length<span class="number">-1</span>)],a.radius=anime.random(<span class="number">16</span>,<span class="number">32</span>),a.endPos=setParticuleDirection(a),a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">createCircle</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a=&#123;&#125;;<span class="keyword">return</span> a.x=e,a.y=t,a.color=<span class="string">"#F00"</span>,a.radius=<span class="number">0.1</span>,a.alpha=<span class="number">0.5</span>,a.lineWidth=<span class="number">6</span>,a.draw=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,<span class="number">0</span>,<span class="number">2</span>*<span class="built_in">Math</span>.PI,!<span class="number">0</span>),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=<span class="number">1</span>&#125;,a&#125;<span class="function"><span class="keyword">function</span> <span class="title">renderParticule</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> t=<span class="number">0</span>;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">animateParticules</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> a=createCircle(e,t),n=[],i=<span class="number">0</span>;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;<span class="attr">targets</span>:n,<span class="attr">x</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.x&#125;,<span class="attr">y</span>:<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> e.endPos.y&#125;,<span class="attr">radius</span>:<span class="number">0.1</span>,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule&#125;).add(&#123;<span class="attr">targets</span>:a,<span class="attr">radius</span>:anime.random(<span class="number">80</span>,<span class="number">160</span>),<span class="attr">lineWidth</span>:<span class="number">0</span>,<span class="attr">alpha</span>:&#123;<span class="attr">value</span>:<span class="number">0</span>,<span class="attr">easing</span>:<span class="string">"linear"</span>,<span class="attr">duration</span>:anime.random(<span class="number">600</span>,<span class="number">800</span>)&#125;,<span class="attr">duration</span>:anime.random(<span class="number">1200</span>,<span class="number">1800</span>),<span class="attr">easing</span>:<span class="string">"easeOutExpo"</span>,<span class="attr">update</span>:renderParticule,<span class="attr">offset</span>:<span class="number">0</span>&#125;)&#125;<span class="function"><span class="keyword">function</span> <span class="title">debounce</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">var</span> a;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>,i=<span class="built_in">arguments</span>;clearTimeout(a),a=setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;e.apply(n,i)&#125;,t)&#125;&#125;<span class="keyword">var</span> canvasEl=<span class="built_in">document</span>.querySelector(<span class="string">".fireworks"</span>);<span class="keyword">if</span>(canvasEl)&#123;<span class="keyword">var</span> ctx=canvasEl.getContext(<span class="string">"2d"</span>),numberOfParticules=<span class="number">30</span>,pointerX=<span class="number">0</span>,pointerY=<span class="number">0</span>,tap=<span class="string">"mousedown"</span>,colors=[<span class="string">"#FF1461"</span>,<span class="string">"#18FF92"</span>,<span class="string">"#5A87FF"</span>,<span class="string">"#FBF38C"</span>],setCanvasSize=debounce(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvasEl.width=<span class="number">2</span>*<span class="built_in">window</span>.innerWidth,canvasEl.height=<span class="number">2</span>*<span class="built_in">window</span>.innerHeight,canvasEl.style.width=<span class="built_in">window</span>.innerWidth+<span class="string">"px"</span>,canvasEl.style.height=<span class="built_in">window</span>.innerHeight+<span class="string">"px"</span>,canvasEl.getContext(<span class="string">"2d"</span>).scale(<span class="number">2</span>,<span class="number">2</span>)&#125;,<span class="number">500</span>),render=anime(&#123;<span class="attr">duration</span>:<span class="number">1</span>/<span class="number">0</span>,<span class="attr">update</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;ctx.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvasEl.width,canvasEl.height)&#125;&#125;);<span class="built_in">document</span>.addEventListener(tap,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="string">"sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"toggle-sidebar"</span>!==e.target.id&amp;&amp;<span class="string">"A"</span>!==e.target.nodeName&amp;&amp;<span class="string">"IMG"</span>!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!<span class="number">1</span>),setCanvasSize(),<span class="built_in">window</span>.addEventListener(<span class="string">"resize"</span>,setCanvasSize,!<span class="number">1</span>)&#125;;</span><br></pre></td></tr></table></figure></div><h5 id="love-min-js"><a href="#love-min-js" class="headerlink" title="love.min.js"></a>love.min.js</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure></div><h5 id="text-js"><a href="#text-js" class="headerlink" title="text.js"></a>text.js</h5><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">  $(<span class="string">"body"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="string">"富强"</span>, <span class="string">"民主"</span>, <span class="string">"文明"</span>, <span class="string">"和谐"</span>, <span class="string">"自由"</span>, <span class="string">"平等"</span>, <span class="string">"公正"</span> ,<span class="string">"法治"</span>, <span class="string">"爱国"</span>, <span class="string">"敬业"</span>, <span class="string">"诚信"</span>, <span class="string">"友善"</span>);</span><br><span class="line">    <span class="keyword">var</span> $i = $(<span class="string">"&lt;span/&gt;"</span>).text(a[a_idx]);</span><br><span class="line">    <span class="keyword">var</span> x = e.pageX,</span><br><span class="line">      y = e.pageY;</span><br><span class="line">    $i.css(&#123;</span><br><span class="line">      <span class="string">"z-index"</span>: <span class="number">99999</span>,</span><br><span class="line">      <span class="string">"top"</span>: y - <span class="number">28</span>,</span><br><span class="line">      <span class="string">"left"</span>: x - a[a_idx].length * <span class="number">8</span>,</span><br><span class="line">      <span class="string">"position"</span>: <span class="string">"absolute"</span>,</span><br><span class="line">      <span class="string">"color"</span>: <span class="string">"#ff7a45"</span></span><br><span class="line">    &#125;);</span><br><span class="line">    $(<span class="string">"body"</span>).append($i);</span><br><span class="line">    $i.animate(&#123;</span><br><span class="line">      <span class="string">"top"</span>: y - <span class="number">180</span>,</span><br><span class="line">      <span class="string">"opacity"</span>: <span class="number">0</span></span><br><span class="line">    &#125;, <span class="number">1500</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      $i.remove();</span><br><span class="line">    &#125;);</span><br><span class="line">    a_idx = (a_idx + <span class="number">1</span>) % a.length;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><h4 id="打字特效-（评论、留言）"><a href="#打字特效-（评论、留言）" class="headerlink" title="打字特效 （评论、留言）"></a>打字特效 （评论、留言）</h4><p>此功能主要通过 JS 监听页面的 input 输入框事件来实现。首先在主题 _config.yml 中添加动态配置项</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">typing_effect:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">colorful:</span> <span class="literal">true</span>  <span class="comment"># 礼花</span></span><br><span class="line">  <span class="attr">shake:</span> <span class="literal">false</span>  <span class="comment"># 震动</span></span><br></pre></td></tr></table></figure></div><p>在 /themes/next/layout/_custom/custom.swig 中引入依赖</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.typing_effect %&#125;</span><br><span class="line">  &lt;script src=<span class="string">"/js/src/activate-power-mode.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script&gt;</span></span><br><span class="line"><span class="regexp">    POWERMODE.colorful = &#123;&#123; theme.typing_effect.colorful &#125;&#125;;</span></span><br><span class="line"><span class="regexp">    POWERMODE.shake = &#123;&#123; theme.typing_effect.shake &#125;&#125;;</span></span><br><span class="line"><span class="regexp">    document.body.addEventListener('input', POWERMODE);</span></span><br><span class="line"><span class="regexp">  &lt;/</span>script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><p>其中的 activate-power-mode.min.js 位于 /themes/next/source/js/src/ 目录，代码如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">webpackUniversalModuleDefinition</span>(<span class="params">root,factory</span>)</span>&#123;<span class="keyword">if</span>(<span class="keyword">typeof</span> exports===<span class="string">'object'</span>&amp;&amp;<span class="keyword">typeof</span> <span class="built_in">module</span>===<span class="string">'object'</span>)<span class="built_in">module</span>.exports=factory();<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> define===<span class="string">'function'</span>&amp;&amp;define.amd)define([],factory);<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">typeof</span> exports===<span class="string">'object'</span>)exports[<span class="string">"POWERMODE"</span>]=factory();<span class="keyword">else</span> root[<span class="string">"POWERMODE"</span>]=factory()&#125;)(<span class="keyword">this</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span>(<span class="function"><span class="keyword">function</span>(<span class="params">modules</span>)</span>&#123;<span class="keyword">var</span> installedModules=&#123;&#125;;<span class="function"><span class="keyword">function</span> <span class="title">__webpack_require__</span>(<span class="params">moduleId</span>)</span>&#123;<span class="keyword">if</span>(installedModules[moduleId])<span class="keyword">return</span> installedModules[moduleId].exports;<span class="keyword">var</span> <span class="built_in">module</span>=installedModules[moduleId]=&#123;<span class="attr">exports</span>:&#123;&#125;,<span class="attr">id</span>:moduleId,<span class="attr">loaded</span>:<span class="literal">false</span>&#125;;modules[moduleId].call(<span class="built_in">module</span>.exports,<span class="built_in">module</span>,<span class="built_in">module</span>.exports,__webpack_require__);<span class="built_in">module</span>.loaded=<span class="literal">true</span>;<span class="keyword">return</span> <span class="built_in">module</span>.exports&#125;__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.p=<span class="string">""</span>;<span class="keyword">return</span> __webpack_require__(<span class="number">0</span>)&#125;)([<span class="function"><span class="keyword">function</span>(<span class="params">module,exports,__webpack_require__</span>)</span>&#123;<span class="string">'use strict'</span>;<span class="keyword">var</span> canvas=<span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);canvas.width=<span class="built_in">window</span>.innerWidth;canvas.height=<span class="built_in">window</span>.innerHeight;canvas.style.cssText=<span class="string">'position:fixed;top:0;left:0;pointer-events:none;z-index:999999'</span>;<span class="built_in">window</span>.addEventListener(<span class="string">'resize'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;canvas.width=<span class="built_in">window</span>.innerWidth;canvas.height=<span class="built_in">window</span>.innerHeight&#125;);<span class="built_in">document</span>.body.appendChild(canvas);<span class="keyword">var</span> context=canvas.getContext(<span class="string">'2d'</span>);<span class="keyword">var</span> particles=[];<span class="keyword">var</span> particlePointer=<span class="number">0</span>;POWERMODE.shake=<span class="literal">true</span>;<span class="function"><span class="keyword">function</span> <span class="title">getRandom</span>(<span class="params">min,max</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">Math</span>.random()*(max-min)+min&#125;<span class="function"><span class="keyword">function</span> <span class="title">getColor</span>(<span class="params">el</span>)</span>&#123;<span class="keyword">if</span>(POWERMODE.colorful)&#123;<span class="keyword">var</span> u=getRandom(<span class="number">0</span>,<span class="number">360</span>);<span class="keyword">return</span><span class="string">'hsla('</span>+getRandom(u<span class="number">-10</span>,u+<span class="number">10</span>)+<span class="string">', 100%, '</span>+getRandom(<span class="number">50</span>,<span class="number">80</span>)+<span class="string">'%, '</span>+<span class="number">1</span>+<span class="string">')'</span>&#125;<span class="keyword">else</span>&#123;<span class="keyword">return</span> <span class="built_in">window</span>.getComputedStyle(el).color&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">getCaret</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> el=<span class="built_in">document</span>.activeElement;<span class="keyword">var</span> bcr;<span class="keyword">if</span>(el.tagName===<span class="string">'TEXTAREA'</span>||(el.tagName===<span class="string">'INPUT'</span>&amp;&amp;el.getAttribute(<span class="string">'type'</span>)===<span class="string">'text'</span>))&#123;<span class="keyword">var</span> offset=__webpack_require__(<span class="number">1</span>)(el,el.selectionStart);bcr=el.getBoundingClientRect();<span class="keyword">return</span>&#123;<span class="attr">x</span>:offset.left+bcr.left,<span class="attr">y</span>:offset.top+bcr.top,<span class="attr">color</span>:getColor(el)&#125;&#125;<span class="keyword">var</span> selection=<span class="built_in">window</span>.getSelection();<span class="keyword">if</span>(selection.rangeCount)&#123;<span class="keyword">var</span> range=selection.getRangeAt(<span class="number">0</span>);<span class="keyword">var</span> startNode=range.startContainer;<span class="keyword">if</span>(startNode.nodeType===<span class="built_in">document</span>.TEXT_NODE)&#123;startNode=startNode.parentNode&#125;bcr=range.getBoundingClientRect();<span class="keyword">return</span>&#123;<span class="attr">x</span>:bcr.left,<span class="attr">y</span>:bcr.top,<span class="attr">color</span>:getColor(startNode)&#125;&#125;<span class="keyword">return</span>&#123;<span class="attr">x</span>:<span class="number">0</span>,<span class="attr">y</span>:<span class="number">0</span>,<span class="attr">color</span>:<span class="string">'transparent'</span>&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">createParticle</span>(<span class="params">x,y,color</span>)</span>&#123;<span class="keyword">return</span>&#123;<span class="attr">x</span>:x,<span class="attr">y</span>:y,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:color,<span class="attr">velocity</span>:&#123;<span class="attr">x</span>:<span class="number">-1</span>+<span class="built_in">Math</span>.random()*<span class="number">2</span>,<span class="attr">y</span>:<span class="number">-3.5</span>+<span class="built_in">Math</span>.random()*<span class="number">2</span>&#125;&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">POWERMODE</span>(<span class="params"></span>)</span>&#123;&#123;<span class="keyword">var</span> caret=getCaret();<span class="keyword">var</span> numParticles=<span class="number">5</span>+<span class="built_in">Math</span>.round(<span class="built_in">Math</span>.random()*<span class="number">10</span>);<span class="keyword">while</span>(numParticles--)&#123;particles[particlePointer]=createParticle(caret.x,caret.y,caret.color);particlePointer=(particlePointer+<span class="number">1</span>)%<span class="number">500</span>&#125;&#125;&#123;<span class="keyword">if</span>(POWERMODE.shake)&#123;<span class="keyword">var</span> intensity=<span class="number">1</span>+<span class="number">2</span>*<span class="built_in">Math</span>.random();<span class="keyword">var</span> x=intensity*(<span class="built_in">Math</span>.random()&gt;<span class="number">0.5</span>?<span class="number">-1</span>:<span class="number">1</span>);<span class="keyword">var</span> y=intensity*(<span class="built_in">Math</span>.random()&gt;<span class="number">0.5</span>?<span class="number">-1</span>:<span class="number">1</span>);<span class="built_in">document</span>.body.style.marginLeft=x+<span class="string">'px'</span>;<span class="built_in">document</span>.body.style.marginTop=y+<span class="string">'px'</span>;setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">document</span>.body.style.marginLeft=<span class="string">''</span>;<span class="built_in">document</span>.body.style.marginTop=<span class="string">''</span>&#125;,<span class="number">75</span>)&#125;&#125;&#125;;POWERMODE.colorful=<span class="literal">false</span>;<span class="function"><span class="keyword">function</span> <span class="title">loop</span>(<span class="params"></span>)</span>&#123;requestAnimationFrame(loop);context.clearRect(<span class="number">0</span>,<span class="number">0</span>,canvas.width,canvas.height);<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;particles.length;++i)&#123;<span class="keyword">var</span> particle=particles[i];<span class="keyword">if</span>(particle.alpha&lt;=<span class="number">0.1</span>)<span class="keyword">continue</span>;particle.velocity.y+=<span class="number">0.075</span>;particle.x+=particle.velocity.x;particle.y+=particle.velocity.y;particle.alpha*=<span class="number">0.96</span>;context.globalAlpha=particle.alpha;context.fillStyle=particle.color;context.fillRect(<span class="built_in">Math</span>.round(particle.x<span class="number">-1.5</span>),<span class="built_in">Math</span>.round(particle.y<span class="number">-1.5</span>),<span class="number">3</span>,<span class="number">3</span>)&#125;&#125;requestAnimationFrame(loop);<span class="built_in">module</span>.exports=POWERMODE&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">module,exports</span>)</span>&#123;(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> properties=[<span class="string">'direction'</span>,<span class="string">'boxSizing'</span>,<span class="string">'width'</span>,<span class="string">'height'</span>,<span class="string">'overflowX'</span>,<span class="string">'overflowY'</span>,<span class="string">'borderTopWidth'</span>,<span class="string">'borderRightWidth'</span>,<span class="string">'borderBottomWidth'</span>,<span class="string">'borderLeftWidth'</span>,<span class="string">'borderStyle'</span>,<span class="string">'paddingTop'</span>,<span class="string">'paddingRight'</span>,<span class="string">'paddingBottom'</span>,<span class="string">'paddingLeft'</span>,<span class="string">'fontStyle'</span>,<span class="string">'fontVariant'</span>,<span class="string">'fontWeight'</span>,<span class="string">'fontStretch'</span>,<span class="string">'fontSize'</span>,<span class="string">'fontSizeAdjust'</span>,<span class="string">'lineHeight'</span>,<span class="string">'fontFamily'</span>,<span class="string">'textAlign'</span>,<span class="string">'textTransform'</span>,<span class="string">'textIndent'</span>,<span class="string">'textDecoration'</span>,<span class="string">'letterSpacing'</span>,<span class="string">'wordSpacing'</span>,<span class="string">'tabSize'</span>,<span class="string">'MozTabSize'</span>];<span class="keyword">var</span> isFirefox=<span class="built_in">window</span>.mozInnerScreenX!=<span class="literal">null</span>;<span class="function"><span class="keyword">function</span> <span class="title">getCaretCoordinates</span>(<span class="params">element,position,options</span>)</span>&#123;<span class="keyword">var</span> debug=options&amp;&amp;options.debug||<span class="literal">false</span>;<span class="keyword">if</span>(debug)&#123;<span class="keyword">var</span> el=<span class="built_in">document</span>.querySelector(<span class="string">'#input-textarea-caret-position-mirror-div'</span>);<span class="keyword">if</span>(el)&#123;el.parentNode.removeChild(el)&#125;&#125;<span class="keyword">var</span> div=<span class="built_in">document</span>.createElement(<span class="string">'div'</span>);div.id=<span class="string">'input-textarea-caret-position-mirror-div'</span>;<span class="built_in">document</span>.body.appendChild(div);<span class="keyword">var</span> style=div.style;<span class="keyword">var</span> computed=<span class="built_in">window</span>.getComputedStyle?getComputedStyle(element):element.currentStyle;style.whiteSpace=<span class="string">'pre-wrap'</span>;<span class="keyword">if</span>(element.nodeName!==<span class="string">'INPUT'</span>)style.wordWrap=<span class="string">'break-word'</span>;style.position=<span class="string">'absolute'</span>;<span class="keyword">if</span>(!debug)style.visibility=<span class="string">'hidden'</span>;properties.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">prop</span>)</span>&#123;style[prop]=computed[prop]&#125;);<span class="keyword">if</span>(isFirefox)&#123;<span class="keyword">if</span>(element.scrollHeight&gt;<span class="built_in">parseInt</span>(computed.height))style.overflowY=<span class="string">'scroll'</span>&#125;<span class="keyword">else</span>&#123;style.overflow=<span class="string">'hidden'</span>&#125;div.textContent=element.value.substring(<span class="number">0</span>,position);<span class="keyword">if</span>(element.nodeName===<span class="string">'INPUT'</span>)div.textContent=div.textContent.replace(<span class="regexp">/\s/g</span>,<span class="string">"\u00a0"</span>);<span class="keyword">var</span> span=<span class="built_in">document</span>.createElement(<span class="string">'span'</span>);span.textContent=element.value.substring(position)||<span class="string">'.'</span>;div.appendChild(span);<span class="keyword">var</span> coordinates=&#123;<span class="attr">top</span>:span.offsetTop+<span class="built_in">parseInt</span>(computed[<span class="string">'borderTopWidth'</span>]),<span class="attr">left</span>:span.offsetLeft+<span class="built_in">parseInt</span>(computed[<span class="string">'borderLeftWidth'</span>])&#125;;<span class="keyword">if</span>(debug)&#123;span.style.backgroundColor=<span class="string">'#aaa'</span>&#125;<span class="keyword">else</span>&#123;<span class="built_in">document</span>.body.removeChild(div)&#125;<span class="keyword">return</span> coordinates&#125;<span class="keyword">if</span>(<span class="keyword">typeof</span> <span class="built_in">module</span>!=<span class="string">"undefined"</span>&amp;&amp;<span class="keyword">typeof</span> <span class="built_in">module</span>.exports!=<span class="string">"undefined"</span>)&#123;<span class="built_in">module</span>.exports=getCaretCoordinates&#125;<span class="keyword">else</span>&#123;<span class="built_in">window</span>.getCaretCoordinates=getCaretCoordinates&#125;&#125;())&#125;])&#125;);</span><br></pre></td></tr></table></figure></div><h4 id="代码块复制功能"><a href="#代码块复制功能" class="headerlink" title="代码块复制功能"></a>代码块复制功能</h4><p>依赖 <a href="https://clipboardjs.com/" target="_blank" rel="noopener">clipboard.js</a> 实现，个性化配置可参考官方文档。在 /themes/next/layout/_custom/custom.swig 引入下载的 JS</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/clipboard.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">" src="</span>/js/src/clipboard-use.js<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></div><p>位于 /themes/next/source/js/src/ 目录下的 clipboard.min.js 和 clipboard-use.js 代码分别如下</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*!</span></span><br><span class="line"><span class="comment"> * clipboard.min.js v2.0.4</span></span><br><span class="line"><span class="comment"> * https://zenorocha.github.io/clipboard.js</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * Licensed MIT © Zeno Rocha</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="string">"object"</span>==<span class="keyword">typeof</span> exports&amp;&amp;<span class="string">"object"</span>==<span class="keyword">typeof</span> <span class="built_in">module</span>?<span class="built_in">module</span>.exports=e():<span class="string">"function"</span>==<span class="keyword">typeof</span> define&amp;&amp;define.amd?define([],e):<span class="string">"object"</span>==<span class="keyword">typeof</span> exports?exports.ClipboardJS=e():t.ClipboardJS=e()&#125;(<span class="keyword">this</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">n</span>)</span>&#123;<span class="keyword">var</span> o=&#123;&#125;;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(o[t])<span class="keyword">return</span> o[t].exports;<span class="keyword">var</span> e=o[t]=&#123;<span class="attr">i</span>:t,<span class="attr">l</span>:!<span class="number">1</span>,<span class="attr">exports</span>:&#123;&#125;&#125;;<span class="keyword">return</span> n[t].call(e.exports,e,e.exports,r),e.l=!<span class="number">0</span>,e.exports&#125;<span class="keyword">return</span> r.m=n,r.c=o,r.d=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;r.o(t,e)||<span class="built_in">Object</span>.defineProperty(t,e,&#123;<span class="attr">enumerable</span>:!<span class="number">0</span>,<span class="attr">get</span>:n&#125;)&#125;,r.r=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="string">"undefined"</span>!=<span class="keyword">typeof</span> <span class="built_in">Symbol</span>&amp;&amp;<span class="built_in">Symbol</span>.toStringTag&amp;&amp;<span class="built_in">Object</span>.defineProperty(t,<span class="built_in">Symbol</span>.toStringTag,&#123;<span class="attr">value</span>:<span class="string">"Module"</span>&#125;),<span class="built_in">Object</span>.defineProperty(t,<span class="string">"__esModule"</span>,&#123;<span class="attr">value</span>:!<span class="number">0</span>&#125;)&#125;,r.t=<span class="function"><span class="keyword">function</span>(<span class="params">e,t</span>)</span>&#123;<span class="keyword">if</span>(<span class="number">1</span>&amp;t&amp;&amp;(e=r(e)),<span class="number">8</span>&amp;t)<span class="keyword">return</span> e;<span class="keyword">if</span>(<span class="number">4</span>&amp;t&amp;&amp;<span class="string">"object"</span>==<span class="keyword">typeof</span> e&amp;&amp;e&amp;&amp;e.__esModule)<span class="keyword">return</span> e;<span class="keyword">var</span> n=<span class="built_in">Object</span>.create(<span class="literal">null</span>);<span class="keyword">if</span>(r.r(n),<span class="built_in">Object</span>.defineProperty(n,<span class="string">"default"</span>,&#123;<span class="attr">enumerable</span>:!<span class="number">0</span>,<span class="attr">value</span>:e&#125;),<span class="number">2</span>&amp;t&amp;&amp;<span class="string">"string"</span>!=<span class="keyword">typeof</span> e)<span class="keyword">for</span>(<span class="keyword">var</span> o <span class="keyword">in</span> e)r.d(n,o,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> e[t]&#125;.bind(<span class="literal">null</span>,o));<span class="keyword">return</span> n&#125;,r.n=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=t&amp;&amp;t.__esModule?<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> t.default&#125;:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> t&#125;;<span class="keyword">return</span> r.d(e,<span class="string">"a"</span>,e),e&#125;,r.o=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">Object</span>.prototype.hasOwnProperty.call(t,e)&#125;,r.p=<span class="string">""</span>,r(r.s=<span class="number">0</span>)&#125;([<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="string">"use strict"</span>;<span class="keyword">var</span> r=<span class="string">"function"</span>==<span class="keyword">typeof</span> <span class="built_in">Symbol</span>&amp;&amp;<span class="string">"symbol"</span>==<span class="keyword">typeof</span> <span class="built_in">Symbol</span>.iterator?<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> t&#125;:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> t&amp;&amp;<span class="string">"function"</span>==<span class="keyword">typeof</span> <span class="built_in">Symbol</span>&amp;&amp;t.constructor===<span class="built_in">Symbol</span>&amp;&amp;t!==<span class="built_in">Symbol</span>.prototype?<span class="string">"symbol"</span>:<span class="keyword">typeof</span> t&#125;,i=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;e.length;n++)&#123;<span class="keyword">var</span> o=e[n];o.enumerable=o.enumerable||!<span class="number">1</span>,o.configurable=!<span class="number">0</span>,<span class="string">"value"</span><span class="keyword">in</span> o&amp;&amp;(o.writable=!<span class="number">0</span>),<span class="built_in">Object</span>.defineProperty(t,o.key,o)&#125;&#125;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="keyword">return</span> e&amp;&amp;o(t.prototype,e),n&amp;&amp;o(t,n),t&#125;&#125;(),a=o(n(<span class="number">1</span>)),c=o(n(<span class="number">3</span>)),u=o(n(<span class="number">4</span>));<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> t&amp;&amp;t.__esModule?t:&#123;<span class="attr">default</span>:t&#125;&#125;<span class="keyword">var</span> l=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t,e</span>)</span>&#123;!<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(!(t <span class="keyword">instanceof</span> e))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">"Cannot call a class as a function"</span>)&#125;(<span class="keyword">this</span>,o);<span class="keyword">var</span> n=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(!t)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">ReferenceError</span>(<span class="string">"this hasn't been initialised - super() hasn't been called"</span>);<span class="keyword">return</span>!e||<span class="string">"object"</span>!=<span class="keyword">typeof</span> e&amp;&amp;<span class="string">"function"</span>!=<span class="keyword">typeof</span> e?t:e&#125;(<span class="keyword">this</span>,(o.__proto__||<span class="built_in">Object</span>.getPrototypeOf(o)).call(<span class="keyword">this</span>));<span class="keyword">return</span> n.resolveOptions(e),n.listenClick(t),n&#125;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(<span class="string">"function"</span>!=<span class="keyword">typeof</span> e&amp;&amp;<span class="literal">null</span>!==e)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">"Super expression must either be null or a function, not "</span>+<span class="keyword">typeof</span> e);t.prototype=<span class="built_in">Object</span>.create(e&amp;&amp;e.prototype,&#123;<span class="attr">constructor</span>:&#123;<span class="attr">value</span>:t,<span class="attr">enumerable</span>:!<span class="number">1</span>,<span class="attr">writable</span>:!<span class="number">0</span>,<span class="attr">configurable</span>:!<span class="number">0</span>&#125;&#125;),e&amp;&amp;(<span class="built_in">Object</span>.setPrototypeOf?<span class="built_in">Object</span>.setPrototypeOf(t,e):t.__proto__=e)&#125;(o,c.default),i(o,[&#123;<span class="attr">key</span>:<span class="string">"resolveOptions"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="number">0</span>&lt;<span class="built_in">arguments</span>.length&amp;&amp;<span class="keyword">void</span> <span class="number">0</span>!==<span class="built_in">arguments</span>[<span class="number">0</span>]?<span class="built_in">arguments</span>[<span class="number">0</span>]:&#123;&#125;;<span class="keyword">this</span>.action=<span class="string">"function"</span>==<span class="keyword">typeof</span> t.action?t.action:<span class="keyword">this</span>.defaultAction,<span class="keyword">this</span>.target=<span class="string">"function"</span>==<span class="keyword">typeof</span> t.target?t.target:<span class="keyword">this</span>.defaultTarget,<span class="keyword">this</span>.text=<span class="string">"function"</span>==<span class="keyword">typeof</span> t.text?t.text:<span class="keyword">this</span>.defaultText,<span class="keyword">this</span>.container=<span class="string">"object"</span>===r(t.container)?t.container:<span class="built_in">document</span>.body&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"listenClick"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">this</span>;<span class="keyword">this</span>.listener=(<span class="number">0</span>,u.default)(t,<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> e.onClick(t)&#125;)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"onClick"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=t.delegateTarget||t.currentTarget;<span class="keyword">this</span>.clipboardAction&amp;&amp;(<span class="keyword">this</span>.clipboardAction=<span class="literal">null</span>),<span class="keyword">this</span>.clipboardAction=<span class="keyword">new</span> a.default(&#123;<span class="attr">action</span>:<span class="keyword">this</span>.action(e),<span class="attr">target</span>:<span class="keyword">this</span>.target(e),<span class="attr">text</span>:<span class="keyword">this</span>.text(e),<span class="attr">container</span>:<span class="keyword">this</span>.container,<span class="attr">trigger</span>:e,<span class="attr">emitter</span>:<span class="keyword">this</span>&#125;)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"defaultAction"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> s(<span class="string">"action"</span>,t)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"defaultTarget"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=s(<span class="string">"target"</span>,t);<span class="keyword">if</span>(e)<span class="keyword">return</span> <span class="built_in">document</span>.querySelector(e)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"defaultText"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> s(<span class="string">"text"</span>,t)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"destroy"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.listener.destroy(),<span class="keyword">this</span>.clipboardAction&amp;&amp;(<span class="keyword">this</span>.clipboardAction.destroy(),<span class="keyword">this</span>.clipboardAction=<span class="literal">null</span>)&#125;&#125;],[&#123;<span class="attr">key</span>:<span class="string">"isSupported"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="number">0</span>&lt;<span class="built_in">arguments</span>.length&amp;&amp;<span class="keyword">void</span> <span class="number">0</span>!==<span class="built_in">arguments</span>[<span class="number">0</span>]?<span class="built_in">arguments</span>[<span class="number">0</span>]:[<span class="string">"copy"</span>,<span class="string">"cut"</span>],e=<span class="string">"string"</span>==<span class="keyword">typeof</span> t?[t]:t,n=!!<span class="built_in">document</span>.queryCommandSupported;<span class="keyword">return</span> e.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;n=n&amp;&amp;!!<span class="built_in">document</span>.queryCommandSupported(t)&#125;),n&#125;&#125;]),o&#125;();<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> n=<span class="string">"data-clipboard-"</span>+t;<span class="keyword">if</span>(e.hasAttribute(n))<span class="keyword">return</span> e.getAttribute(n)&#125;t.exports=l&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="string">"use strict"</span>;<span class="keyword">var</span> o,r=<span class="string">"function"</span>==<span class="keyword">typeof</span> <span class="built_in">Symbol</span>&amp;&amp;<span class="string">"symbol"</span>==<span class="keyword">typeof</span> <span class="built_in">Symbol</span>.iterator?<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">typeof</span> t&#125;:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> t&amp;&amp;<span class="string">"function"</span>==<span class="keyword">typeof</span> <span class="built_in">Symbol</span>&amp;&amp;t.constructor===<span class="built_in">Symbol</span>&amp;&amp;t!==<span class="built_in">Symbol</span>.prototype?<span class="string">"symbol"</span>:<span class="keyword">typeof</span> t&#125;,i=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> n=<span class="number">0</span>;n&lt;e.length;n++)&#123;<span class="keyword">var</span> o=e[n];o.enumerable=o.enumerable||!<span class="number">1</span>,o.configurable=!<span class="number">0</span>,<span class="string">"value"</span><span class="keyword">in</span> o&amp;&amp;(o.writable=!<span class="number">0</span>),<span class="built_in">Object</span>.defineProperty(t,o.key,o)&#125;&#125;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="keyword">return</span> e&amp;&amp;o(t.prototype,e),n&amp;&amp;o(t,n),t&#125;&#125;(),a=n(<span class="number">2</span>),c=(o=a)&amp;&amp;o.__esModule?o:&#123;<span class="attr">default</span>:o&#125;;<span class="keyword">var</span> u=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">e</span>(<span class="params">t</span>)</span>&#123;!<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(!(t <span class="keyword">instanceof</span> e))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">"Cannot call a class as a function"</span>)&#125;(<span class="keyword">this</span>,e),<span class="keyword">this</span>.resolveOptions(t),<span class="keyword">this</span>.initSelection()&#125;<span class="keyword">return</span> i(e,[&#123;<span class="attr">key</span>:<span class="string">"resolveOptions"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="number">0</span>&lt;<span class="built_in">arguments</span>.length&amp;&amp;<span class="keyword">void</span> <span class="number">0</span>!==<span class="built_in">arguments</span>[<span class="number">0</span>]?<span class="built_in">arguments</span>[<span class="number">0</span>]:&#123;&#125;;<span class="keyword">this</span>.action=t.action,<span class="keyword">this</span>.container=t.container,<span class="keyword">this</span>.emitter=t.emitter,<span class="keyword">this</span>.target=t.target,<span class="keyword">this</span>.text=t.text,<span class="keyword">this</span>.trigger=t.trigger,<span class="keyword">this</span>.selectedText=<span class="string">""</span>&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"initSelection"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.text?<span class="keyword">this</span>.selectFake():<span class="keyword">this</span>.target&amp;&amp;<span class="keyword">this</span>.selectTarget()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"selectFake"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="keyword">this</span>,e=<span class="string">"rtl"</span>==<span class="built_in">document</span>.documentElement.getAttribute(<span class="string">"dir"</span>);<span class="keyword">this</span>.removeFake(),<span class="keyword">this</span>.fakeHandlerCallback=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> t.removeFake()&#125;,<span class="keyword">this</span>.fakeHandler=<span class="keyword">this</span>.container.addEventListener(<span class="string">"click"</span>,<span class="keyword">this</span>.fakeHandlerCallback)||!<span class="number">0</span>,<span class="keyword">this</span>.fakeElem=<span class="built_in">document</span>.createElement(<span class="string">"textarea"</span>),<span class="keyword">this</span>.fakeElem.style.fontSize=<span class="string">"12pt"</span>,<span class="keyword">this</span>.fakeElem.style.border=<span class="string">"0"</span>,<span class="keyword">this</span>.fakeElem.style.padding=<span class="string">"0"</span>,<span class="keyword">this</span>.fakeElem.style.margin=<span class="string">"0"</span>,<span class="keyword">this</span>.fakeElem.style.position=<span class="string">"absolute"</span>,<span class="keyword">this</span>.fakeElem.style[e?<span class="string">"right"</span>:<span class="string">"left"</span>]=<span class="string">"-9999px"</span>;<span class="keyword">var</span> n=<span class="built_in">window</span>.pageYOffset||<span class="built_in">document</span>.documentElement.scrollTop;<span class="keyword">this</span>.fakeElem.style.top=n+<span class="string">"px"</span>,<span class="keyword">this</span>.fakeElem.setAttribute(<span class="string">"readonly"</span>,<span class="string">""</span>),<span class="keyword">this</span>.fakeElem.value=<span class="keyword">this</span>.text,<span class="keyword">this</span>.container.appendChild(<span class="keyword">this</span>.fakeElem),<span class="keyword">this</span>.selectedText=(<span class="number">0</span>,c.default)(<span class="keyword">this</span>.fakeElem),<span class="keyword">this</span>.copyText()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"removeFake"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.fakeHandler&amp;&amp;(<span class="keyword">this</span>.container.removeEventListener(<span class="string">"click"</span>,<span class="keyword">this</span>.fakeHandlerCallback),<span class="keyword">this</span>.fakeHandler=<span class="literal">null</span>,<span class="keyword">this</span>.fakeHandlerCallback=<span class="literal">null</span>),<span class="keyword">this</span>.fakeElem&amp;&amp;(<span class="keyword">this</span>.container.removeChild(<span class="keyword">this</span>.fakeElem),<span class="keyword">this</span>.fakeElem=<span class="literal">null</span>)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"selectTarget"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.selectedText=(<span class="number">0</span>,c.default)(<span class="keyword">this</span>.target),<span class="keyword">this</span>.copyText()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"copyText"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> e=<span class="keyword">void</span> <span class="number">0</span>;<span class="keyword">try</span>&#123;e=<span class="built_in">document</span>.execCommand(<span class="keyword">this</span>.action)&#125;<span class="keyword">catch</span>(t)&#123;e=!<span class="number">1</span>&#125;<span class="keyword">this</span>.handleResult(e)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"handleResult"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">this</span>.emitter.emit(t?<span class="string">"success"</span>:<span class="string">"error"</span>,&#123;<span class="attr">action</span>:<span class="keyword">this</span>.action,<span class="attr">text</span>:<span class="keyword">this</span>.selectedText,<span class="attr">trigger</span>:<span class="keyword">this</span>.trigger,<span class="attr">clearSelection</span>:<span class="keyword">this</span>.clearSelection.bind(<span class="keyword">this</span>)&#125;)&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"clearSelection"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.trigger&amp;&amp;<span class="keyword">this</span>.trigger.focus(),<span class="built_in">window</span>.getSelection().removeAllRanges()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"destroy"</span>,<span class="attr">value</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">this</span>.removeFake()&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"action"</span>,<span class="attr">set</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="number">0</span>&lt;<span class="built_in">arguments</span>.length&amp;&amp;<span class="keyword">void</span> <span class="number">0</span>!==<span class="built_in">arguments</span>[<span class="number">0</span>]?<span class="built_in">arguments</span>[<span class="number">0</span>]:<span class="string">"copy"</span>;<span class="keyword">if</span>(<span class="keyword">this</span>._action=t,<span class="string">"copy"</span>!==<span class="keyword">this</span>._action&amp;&amp;<span class="string">"cut"</span>!==<span class="keyword">this</span>._action)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Invalid "action" value, use either "copy" or "cut"'</span>)&#125;,<span class="attr">get</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">this</span>._action&#125;&#125;,&#123;<span class="attr">key</span>:<span class="string">"target"</span>,<span class="attr">set</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">if</span>(<span class="keyword">void</span> <span class="number">0</span>!==t)&#123;<span class="keyword">if</span>(!t||<span class="string">"object"</span>!==(<span class="keyword">void</span> <span class="number">0</span>===t?<span class="string">"undefined"</span>:r(t))||<span class="number">1</span>!==t.nodeType)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Invalid "target" value, use a valid Element'</span>);<span class="keyword">if</span>(<span class="string">"copy"</span>===<span class="keyword">this</span>.action&amp;&amp;t.hasAttribute(<span class="string">"disabled"</span>))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute'</span>);<span class="keyword">if</span>(<span class="string">"cut"</span>===<span class="keyword">this</span>.action&amp;&amp;(t.hasAttribute(<span class="string">"readonly"</span>)||t.hasAttribute(<span class="string">"disabled"</span>)))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes'</span>);<span class="keyword">this</span>._target=t&#125;&#125;,<span class="attr">get</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">this</span>._target&#125;&#125;]),e&#125;();t.exports=u&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;t.exports=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e;<span class="keyword">if</span>(<span class="string">"SELECT"</span>===t.nodeName)t.focus(),e=t.value;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">"INPUT"</span>===t.nodeName||<span class="string">"TEXTAREA"</span>===t.nodeName)&#123;<span class="keyword">var</span> n=t.hasAttribute(<span class="string">"readonly"</span>);n||t.setAttribute(<span class="string">"readonly"</span>,<span class="string">""</span>),t.select(),t.setSelectionRange(<span class="number">0</span>,t.value.length),n||t.removeAttribute(<span class="string">"readonly"</span>),e=t.value&#125;<span class="keyword">else</span>&#123;t.hasAttribute(<span class="string">"contenteditable"</span>)&amp;&amp;t.focus();<span class="keyword">var</span> o=<span class="built_in">window</span>.getSelection(),r=<span class="built_in">document</span>.createRange();r.selectNodeContents(t),o.removeAllRanges(),o.addRange(r),e=o.toString()&#125;<span class="keyword">return</span> e&#125;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;&#125;n.prototype=&#123;<span class="attr">on</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="keyword">var</span> o=<span class="keyword">this</span>.e||(<span class="keyword">this</span>.e=&#123;&#125;);<span class="keyword">return</span>(o[t]||(o[t]=[])).push(&#123;<span class="attr">fn</span>:e,<span class="attr">ctx</span>:n&#125;),<span class="keyword">this</span>&#125;,<span class="attr">once</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="keyword">var</span> o=<span class="keyword">this</span>;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;o.off(t,r),e.apply(n,<span class="built_in">arguments</span>)&#125;<span class="keyword">return</span> r._=e,<span class="keyword">this</span>.on(t,r,n)&#125;,<span class="attr">emit</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=[].slice.call(<span class="built_in">arguments</span>,<span class="number">1</span>),n=((<span class="keyword">this</span>.e||(<span class="keyword">this</span>.e=&#123;&#125;))[t]||[]).slice(),o=<span class="number">0</span>,r=n.length;o&lt;r;o++)n[o].fn.apply(n[o].ctx,e);<span class="keyword">return</span> <span class="keyword">this</span>&#125;,<span class="attr">off</span>:<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">var</span> n=<span class="keyword">this</span>.e||(<span class="keyword">this</span>.e=&#123;&#125;),o=n[t],r=[];<span class="keyword">if</span>(o&amp;&amp;e)<span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>,a=o.length;i&lt;a;i++)o[i].fn!==e&amp;&amp;o[i].fn._!==e&amp;&amp;r.push(o[i]);<span class="keyword">return</span> r.length?n[t]=r:<span class="keyword">delete</span> n[t],<span class="keyword">this</span>&#125;&#125;,t.exports=n&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="keyword">var</span> d=n(<span class="number">5</span>),h=n(<span class="number">6</span>);t.exports=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="keyword">if</span>(!t&amp;&amp;!e&amp;&amp;!n)<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">"Missing required arguments"</span>);<span class="keyword">if</span>(!d.string(e))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">"Second argument must be a String"</span>);<span class="keyword">if</span>(!d.fn(n))<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">"Third argument must be a Function"</span>);<span class="keyword">if</span>(d.node(t))<span class="keyword">return</span> s=e,f=n,(l=t).addEventListener(s,f),&#123;<span class="attr">destroy</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;l.removeEventListener(s,f)&#125;&#125;;<span class="keyword">if</span>(d.nodeList(t))<span class="keyword">return</span> a=t,c=e,u=n,<span class="built_in">Array</span>.prototype.forEach.call(a,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t.addEventListener(c,u)&#125;),&#123;<span class="attr">destroy</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="built_in">Array</span>.prototype.forEach.call(a,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t.removeEventListener(c,u)&#125;)&#125;&#125;;<span class="keyword">if</span>(d.string(t))<span class="keyword">return</span> o=t,r=e,i=n,h(<span class="built_in">document</span>.body,o,r,i);<span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">TypeError</span>(<span class="string">"First argument must be a String, HTMLElement, HTMLCollection, or NodeList"</span>);<span class="keyword">var</span> o,r,i,a,c,u,l,s,f&#125;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">t,n</span>)</span>&#123;n.node=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span>!==t&amp;&amp;t <span class="keyword">instanceof</span> HTMLElement&amp;&amp;<span class="number">1</span>===t.nodeType&#125;,n.nodeList=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">var</span> e=<span class="built_in">Object</span>.prototype.toString.call(t);<span class="keyword">return</span> <span class="keyword">void</span> <span class="number">0</span>!==t&amp;&amp;(<span class="string">"[object NodeList]"</span>===e||<span class="string">"[object HTMLCollection]"</span>===e)&amp;&amp;<span class="string">"length"</span><span class="keyword">in</span> t&amp;&amp;(<span class="number">0</span>===t.length||n.node(t[<span class="number">0</span>]))&#125;,n.string=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span><span class="string">"string"</span>==<span class="keyword">typeof</span> t||t <span class="keyword">instanceof</span> <span class="built_in">String</span>&#125;,n.fn=<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span><span class="string">"[object Function]"</span>===<span class="built_in">Object</span>.prototype.toString.call(t)&#125;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n</span>)</span>&#123;<span class="keyword">var</span> a=n(<span class="number">7</span>);<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">t,e,n,o,r</span>)</span>&#123;<span class="keyword">var</span> i=<span class="function"><span class="keyword">function</span>(<span class="params">e,n,t,o</span>)</span>&#123;<span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;t.delegateTarget=a(t.target,n),t.delegateTarget&amp;&amp;o.call(e,t)&#125;&#125;.apply(<span class="keyword">this</span>,<span class="built_in">arguments</span>);<span class="keyword">return</span> t.addEventListener(n,i,r),&#123;<span class="attr">destroy</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;t.removeEventListener(n,i,r)&#125;&#125;&#125;t.exports=<span class="function"><span class="keyword">function</span>(<span class="params">t,e,n,o,r</span>)</span>&#123;<span class="keyword">return</span><span class="string">"function"</span>==<span class="keyword">typeof</span> t.addEventListener?i.apply(<span class="literal">null</span>,<span class="built_in">arguments</span>):<span class="string">"function"</span>==<span class="keyword">typeof</span> n?i.bind(<span class="literal">null</span>,<span class="built_in">document</span>).apply(<span class="literal">null</span>,<span class="built_in">arguments</span>):(<span class="string">"string"</span>==<span class="keyword">typeof</span> t&amp;&amp;(t=<span class="built_in">document</span>.querySelectorAll(t)),<span class="built_in">Array</span>.prototype.map.call(t,<span class="function"><span class="keyword">function</span>(<span class="params">t</span>)</span>&#123;<span class="keyword">return</span> i(t,e,n,o,r)&#125;))&#125;&#125;,<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">if</span>(<span class="string">"undefined"</span>!=<span class="keyword">typeof</span> Element&amp;&amp;!Element.prototype.matches)&#123;<span class="keyword">var</span> n=Element.prototype;n.matches=n.matchesSelector||n.mozMatchesSelector||n.msMatchesSelector||n.oMatchesSelector||n.webkitMatchesSelector&#125;t.exports=<span class="function"><span class="keyword">function</span>(<span class="params">t,e</span>)</span>&#123;<span class="keyword">for</span>(;t&amp;&amp;<span class="number">9</span>!==t.nodeType;)&#123;<span class="keyword">if</span>(<span class="string">"function"</span>==<span class="keyword">typeof</span> t.matches&amp;&amp;t.matches(e))<span class="keyword">return</span> t;t=t.parentNode&#125;&#125;&#125;])&#125;);</span><br></pre></td></tr></table></figure></div><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*页面载入完成后，创建复制按钮*/</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span> (<span class="params">e, t, a</span>) </span>&#123;</span><br><span class="line">  <span class="comment">/* code */</span></span><br><span class="line">  <span class="keyword">var</span> initCopyCode = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> copyHtml = <span class="string">''</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;button class="btn-copy" data-clipboard-snippet=""&gt;'</span>;</span><br><span class="line">    <span class="comment">//fa fa-globe可以去字体库替换自己想要的图标</span></span><br><span class="line">    copyHtml += <span class="string">'  &lt;i class="fa fa-clipboard"&gt;&lt;/i&gt;&lt;span&gt;复制&lt;/span&gt;'</span>;</span><br><span class="line">    copyHtml += <span class="string">'&lt;/button&gt;'</span>;</span><br><span class="line">    $(<span class="string">".highlight .code pre"</span>).before(copyHtml);</span><br><span class="line">    <span class="keyword">new</span> ClipboardJS(<span class="string">'.btn-copy'</span>, &#123;</span><br><span class="line">      target: <span class="function"><span class="keyword">function</span>(<span class="params">trigger</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> trigger.nextElementSibling;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  initCopyCode();</span><br><span class="line">&#125;(<span class="built_in">window</span>, <span class="built_in">document</span>);</span><br></pre></td></tr></table></figure></div><p>可根据需要在 /themes/next/source/css/_custom/custom.styl 加 CSS</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.highlight</span>&#123;</span><br><span class="line">  //position: relative;</span><br><span class="line">  <span class="selector-tag">position</span>: <span class="selector-tag">static</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">highlight-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#008b89</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(#fcfcfc,#eee);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d5d5d5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">-webkit-user-select</span>: none;</span><br><span class="line">  <span class="attribute">-moz-user-select</span>: none;</span><br><span class="line">  <span class="attribute">-ms-user-select</span>: none;</span><br><span class="line">  <span class="attribute">user-select</span>: none;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-o-transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-copy</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h4 id="类知乎卡片链接"><a href="#类知乎卡片链接" class="headerlink" title="类知乎卡片链接"></a>类知乎卡片链接</h4><ol><li>在 /themes/next/source/js/src/ 下新建 linkcard.js ，内容如下：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> LinkCards=<span class="built_in">document</span>.getElementsByClassName(<span class="string">'LinkCard'</span>);</span><br><span class="line">  <span class="keyword">if</span>(LinkCards.length != <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> LinkCard=LinkCards[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">var</span> link=LinkCard.href;</span><br><span class="line">    <span class="keyword">var</span> title=LinkCard.innerText;</span><br><span class="line">    LinkCard.innerHTML=<span class="string">"&lt;style type=text/css&gt;.LinkCard,.LinkCard:hover&#123;text-decoration:none;border:none!important;color:inherit!important&#125;.LinkCard&#123;position:relative;display:block;margin:5px auto;width:330px;box-sizing:border-box;border-radius:12px;max-width:100%;overflow:hidden;color:inherit;text-decoration:none&#125;.ztext&#123;word-break:break-word;line-height:1.6&#125;.LinkCard-backdrop&#123;position:absolute;top:0;left:0;right:0;bottom:0;background-repeat:no-repeat;-webkit-filter:blur(20px);filter:blur(20px);background-size:cover;background-position:center&#125;.LinkCard,.LinkCard:hover&#123;text-decoration:none;border:none!important;color:inherit!important&#125;.LinkCard-content&#123;position:relative;display:flex;align-items:center;justify-content:space-between;padding:12px;border-radius:inherit;background-color:rgba(246,246,246,0.88)&#125;.LinkCard-text&#123;overflow:hidden;width:260px;&#125;.LinkCard-title&#123;white-space: nowrap;display:-webkit-box;-webkit-line-clamp:2;overflow:hidden;text-overflow:ellipsis;max-height:calc(16px * 1.25 * 2);font-size:16px;font-weight:500;line-height:1.25;color:#1a1a1a&#125;@media(max-width: 767px)&#123;.LinkCard-title&#123;font-size:13px;&#125;&#125;.LinkCard-meta&#123;display:flex;margin-top:4px;font-size:14px;line-height:20px;color:#999;white-space:nowrap&#125;.LinkCard-imageCell&#123;margin-left:28px;border-radius:30px;width:70px;&#125;.LinkCard-image&#123;display:block;width:60px;height:auto;border-radius:inherit&#125;&lt;/style&gt;&lt;span class=LinkCard-backdrop style=background-image:url(https://zhstatic.zhihu.com/assets/zhihu/editor/zhihu-card-default.svg)&gt;&lt;/span&gt;&lt;span class=LinkCard-content&gt;&lt;span class=LinkCard-text&gt;&lt;span class=LinkCard-title&gt;"</span>+title+<span class="string">"&lt;/span&gt;&lt;span class=LinkCard-meta&gt;&lt;span style=display:inline-flex;align-items:center&gt;&lt;svg class="</span>+<span class="string">"'Zi Zi--InsertLink'"</span>+<span class="string">" fill=currentColor viewBox="</span>+<span class="string">"'0 0 24 24'"</span>+<span class="string">" width=17 height=17&gt;&lt;path d="</span>+<span class="string">"'M6.77 17.23c-.905-.904-.94-2.333-.08-3.193l3.059-3.06-1.192-1.19-3.059 3.058c-1.489 1.489-1.427 3.954.138 5.519s4.03 1.627 5.519.138l3.059-3.059-1.192-1.192-3.059 3.06c-.86.86-2.289.824-3.193-.08zm3.016-8.673l1.192 1.192 3.059-3.06c.86-.86 2.289-.824 3.193.08.905.905.94 2.334.08 3.194l-3.059 3.06 1.192 1.19 3.059-3.058c1.489-1.489 1.427-3.954-.138-5.519s-4.03-1.627-5.519-.138L9.786 8.557zm-1.023 6.68c.33.33.863.343 1.177.029l5.34-5.34c.314-.314.3-.846-.03-1.176-.33-.33-.862-.344-1.176-.03l-5.34 5.34c-.314.314-.3.846.03 1.177z'"</span>+<span class="string">" fill-rule=evenodd&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;"</span>+link+<span class="string">"&lt;/span&gt;&lt;/span&gt;&lt;span class=LinkCard-imageCell&gt;&lt;img class=LinkCard-image alt=图标 src=/images/linkcard.png&gt;&lt;/span&gt;&lt;/span&gt;"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = LinkCards.length - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--) &#123;</span><br><span class="line">      LinkCard=LinkCards[i];</span><br><span class="line">      title=LinkCard.innerText;</span><br><span class="line">      link=LinkCard.href;</span><br><span class="line">      LinkCard.innerHTML=<span class="string">"&lt;span class=LinkCard-backdrop style=background-image:url(https://zhstatic.zhihu.com/assets/zhihu/editor/zhihu-card-default.svg)&gt;&lt;/span&gt;&lt;span class=LinkCard-content&gt;&lt;span class=LinkCard-text&gt;&lt;span class=LinkCard-title&gt;"</span>+title+<span class="string">"&lt;/span&gt;&lt;span class=LinkCard-meta&gt;&lt;span style=display:inline-flex;align-items:center&gt;&lt;svg class="</span>+<span class="string">"'Zi Zi--InsertLink'"</span>+<span class="string">" fill=currentColor viewBox="</span>+<span class="string">"'0 0 24 24'"</span>+<span class="string">" width=17 height=17&gt;&lt;path d="</span>+<span class="string">"'M6.77 17.23c-.905-.904-.94-2.333-.08-3.193l3.059-3.06-1.192-1.19-3.059 3.058c-1.489 1.489-1.427 3.954.138 5.519s4.03 1.627 5.519.138l3.059-3.059-1.192-1.192-3.059 3.06c-.86.86-2.289.824-3.193-.08zm3.016-8.673l1.192 1.192 3.059-3.06c.86-.86 2.289-.824 3.193.08.905.905.94 2.334.08 3.194l-3.059 3.06 1.192 1.19 3.059-3.058c1.489-1.489 1.427-3.954-.138-5.519s-4.03-1.627-5.519-.138L9.786 8.557zm-1.023 6.68c.33.33.863.343 1.177.029l5.34-5.34c.314-.314.3-.846-.03-1.176-.33-.33-.862-.344-1.176-.03l-5.34 5.34c-.314.314-.3.846.03 1.177z'"</span>+<span class="string">" fill-rule=evenodd&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;"</span>+link+<span class="string">"&lt;/span&gt;&lt;/span&gt;&lt;span class=LinkCard-imageCell&gt;&lt;img class=LinkCard-image alt=图标 src=/images/linkcard.png&gt;&lt;/span&gt;&lt;/span&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>需要修改 /images/linkcard.png 为你自己的图片。附上我在用的：<a class="btn" href="https://www.liaofuzhan.com/images/linkcard.png"><i class="fa fa-download fa-lg fa-fw"></i>linkcard.png</a></p><ol start="2"><li>在 /themes/next/layout/_layout.swig 中 body 结束标签前，引入刚才新建的 js：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/linkcard.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p>使用方式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"https://www.liaofuzhan.com/photos/"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"LinkCard"</span>&gt;我的相册——时光留影&lt;<span class="regexp">/a&gt;</span></span><br></pre></td></tr></table></figure></div><p>效果：</p><p><a href="https://www.liaofuzhan.com/photos/" class="LinkCard">我的相册——时光留影</a></p><h4 id="文章首字下沉"><a href="#文章首字下沉" class="headerlink" title="文章首字下沉"></a>文章首字下沉</h4><p>在 themes/next/source/css/_custom/custom.styl 中添加如下样式</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post-body</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:first-child</span><span class="selector-pseudo">::first-letter</span>&#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line"><span class="comment">/* height: 32px;*/</span></span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">42px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">margin-top</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-right</span>: 4<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 26<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">line-height</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这是设置 <code>class = post-body</code> 这个 div 下的第一个 p 标签的样式，数值按需调整，效果：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/6.jpg" alt="Me2j8x.jpg"></p><h4 id="文章评分功能"><a href="#文章评分功能" class="headerlink" title="文章评分功能"></a>文章评分功能</h4><p>NexT 主题中已经集成了<a href="https://widgetpack.com" target="_blank" rel="noopener">widgetpack</a> 的星级评分功能，只需注册账号后，修改主题配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Star rating support to each article.</span></span><br><span class="line"><span class="comment"># To get your ID visit https://widgetpack.com</span></span><br><span class="line"><span class="attr">rating:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">id:</span>  <span class="string">your</span> <span class="string">id</span>  <span class="comment">#&lt;app_id&gt;</span></span><br><span class="line">  <span class="attr">color:</span>  <span class="string">ff9800</span></span><br></pre></td></tr></table></figure></div><p>可以在 widgetpack 控制台中修改评分认证</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/7.jpg" alt="KPgc3F.jpg"></p><p>有三个选项，根据需要设置。</p><h4 id="canvas粒子时钟"><a href="#canvas粒子时钟" class="headerlink" title="canvas粒子时钟"></a>canvas粒子时钟</h4><p>网上看到一款不错的 <a href="https://www.cnblogs.com/xiaohuochai/p/6368039.html" target="_blank" rel="noopener">canvas 粒子时钟</a>，遂整合到自己网站中来了，操作步骤：</p><ol><li><p>在 /themes/next/layout/_custom/ 目录下，新建 clock.swig 文件，内容如下：</p><a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/share/swig/clock.swig" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>clock.swig</a></li><li><p>在 /themes/next/layout/_macro/sidebar.swig 中引入：</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include '../_custom/clock.swig' %&#125;</span><br></pre></td></tr></table></figure></div><p>可根据自己的偏好来设置具体位置，我是加在了侧栏的末尾：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/8.gif" alt="uiJDPJ.gif"></p><p>另一款样式可参考：</p><p><a href="https://www.html5tricks.com/html5-canvas-dance-time.html" class="LinkCard" target="_blank" rel="noopener">HTML5 Canvas 实现会跳舞的时间动画</a></p><h4 id="网站运行时间"><a href="#网站运行时间" class="headerlink" title="网站运行时间"></a>网站运行时间</h4><ol><li>在 /themes/next/layout/_custom/ 下新建 runtime.swig，拷贝如下内容：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"days"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">"javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">show_date_time</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">window</span>.setTimeout(<span class="string">"show_date_time()"</span>, <span class="number">1000</span>);</span></span><br><span class="line"><span class="javascript">BirthDay=<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"08/07/2019 20:00:00"</span>);</span></span><br><span class="line"><span class="javascript">today=<span class="keyword">new</span> <span class="built_in">Date</span>();</span></span><br><span class="line">timeold=(today.getTime()-BirthDay.getTime());</span><br><span class="line">sectimeold=timeold/1000</span><br><span class="line"><span class="javascript">secondsold=<span class="built_in">Math</span>.floor(sectimeold);</span></span><br><span class="line">msPerDay=24*60*60*1000</span><br><span class="line">e_daysold=timeold/msPerDay</span><br><span class="line"><span class="javascript">daysold=<span class="built_in">Math</span>.floor(e_daysold);</span></span><br><span class="line">e_hrsold=(e_daysold-daysold)*24;</span><br><span class="line"><span class="javascript">hrsold=setzero(<span class="built_in">Math</span>.floor(e_hrsold));</span></span><br><span class="line">e_minsold=(e_hrsold-hrsold)*60;</span><br><span class="line"><span class="javascript">minsold=setzero(<span class="built_in">Math</span>.floor((e_hrsold-hrsold)*<span class="number">60</span>));</span></span><br><span class="line"><span class="javascript">seconds=setzero(<span class="built_in">Math</span>.floor((e_minsold-minsold)*<span class="number">60</span>));</span></span><br><span class="line"><span class="javascript"><span class="built_in">document</span>.getElementById(<span class="string">'days'</span>).innerHTML=<span class="string">"已运行"</span>+daysold+<span class="string">"天"</span>+hrsold+<span class="string">"时"</span>+minsold+<span class="string">"分"</span>+seconds+<span class="string">"秒"</span>;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">setzero</span><span class="params">(i)</span></span>&#123;</span></span><br><span class="line">if (i&lt;10)</span><br><span class="line"><span class="actionscript">&#123;i=<span class="string">"0"</span> + i&#125;;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">return</span> i;</span></span><br><span class="line">&#125;</span><br><span class="line">show_date_time();</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></div><blockquote><p>修改 BirthDay 为你建站的时间</p></blockquote><ol start="2"><li>在 /themes/next/layout/_macro/sidebar.swig 中引入：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include '../_custom/runtime.swig' %&#125;</span><br></pre></td></tr></table></figure></div><h4 id="网站动态背景图片"><a href="#网站动态背景图片" class="headerlink" title="网站动态背景图片"></a>网站动态背景图片</h4><p>在 /themes/next/source/css/_custom/custom.styl 中设置 body 属性</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="built_in">url</span>(https://source.unsplash.com/random/<span class="number">1600</span>x900);</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">  <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>其中的 url 可根据 <a href="https://source.unsplash.com" target="_blank" rel="noopener">Unsplash Source</a> 这个网站来生成，比如随机选择、根据指定用户选择等等，效果：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/9.jpg" alt="KPrR8H.jpg"></p><p>其它的背景点击特效—波浪、线条、水纹波动等，可以在主题 _config.yml 中 canvas 系列进行设置，如 canvas_nest、canvas_ribbon。 motion 配置项则是设置诸如侧栏、文章标题的加载动画。</p><h4 id="网站-logo-炫彩效果"><a href="#网站-logo-炫彩效果" class="headerlink" title="网站 logo 炫彩效果"></a>网站 logo 炫彩效果</h4><p>PC 端只显示在左上角 logo 位置，移动端效果如下</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/10.gif" alt="移动端效果"></p><p>我使用的是 NexT 5 的 Pisces（主题 _config.yml 中 scheme 配置），主要设置样式为 site-meta，其它的主题类型需要自己调整。在 /themes/next/source/css/_custom/custom.styl 中添加以下 css ，如果之前已经设置了，根据情况进行替换：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-title</span>&#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    to right,</span><br><span class="line">    orangered,</span><br><span class="line">    orange,</span><br><span class="line">    gold,</span><br><span class="line">    lightgreen,</span><br><span class="line">    cyan,</span><br><span class="line">    dodgerblue,</span><br><span class="line">    mediumpurple,</span><br><span class="line">    hotpink,</span><br><span class="line">    orangered</span><br><span class="line">  );</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">110vw</span>;</span><br><span class="line">  <span class="attribute">-webkit-background-clip</span>: text;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>); <span class="comment">/* transparent IE 不支持 */</span></span><br><span class="line">  <span class="attribute">animation</span>: sliding <span class="number">30s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> sliding&#123;</span><br><span class="line">  <span class="selector-tag">to</span>&#123;</span><br><span class="line">    <span class="attribute">background-position</span>:  -<span class="number">2000vw</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-meta</span>,</span><br><span class="line"><span class="selector-class">.site-subtitle</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>); <span class="comment">/* transparent IE 不支持 */</span></span><br><span class="line">  <span class="attribute">animation</span>: hue <span class="number">1.5s</span> linear infinite;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to right bottom, rgb(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>), <span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">128</span>,<span class="number">0</span>), <span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">0</span>), <span class="built_in">rgb</span>(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>), <span class="built_in">rgb</span>(<span class="number">0</span>,<span class="number">255</span>,<span class="number">128</span>), <span class="built_in">rgb</span>(<span class="number">0</span>,<span class="number">255</span>,<span class="number">255</span>), <span class="built_in">rgb</span>(<span class="number">0</span>,<span class="number">128</span>,<span class="number">255</span>), <span class="built_in">rgb</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">255</span>), <span class="built_in">rgb</span>(<span class="number">128</span>,<span class="number">0</span>,<span class="number">255</span>), <span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">255</span>), <span class="built_in">rgb</span>(<span class="number">255</span>,<span class="number">0</span>,<span class="number">128</span>));</span><br><span class="line">  <span class="attribute">-webkit-background-clip</span>: text;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> hue &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">      <span class="attribute">filter</span>: <span class="built_in">hue-rotate</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">      <span class="attribute">filter</span>: <span class="built_in">hue-rotate</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-meta</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ecf9f8</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">padding</span>: 10<span class="selector-tag">px</span> 0;</span><br><span class="line">    <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(90<span class="selector-tag">deg</span>,<span class="selector-id">#f79533</span> 0,<span class="selector-id">#f37055</span> 15%,<span class="selector-id">#ef4e7b</span> 30%,<span class="selector-id">#a166ab</span> 44%,<span class="selector-id">#5073b8</span> 58%,<span class="selector-id">#1098ad</span> 72%,<span class="selector-id">#07b39b</span> 86%,<span class="selector-id">#6dba82</span> 100%)!<span class="selector-tag">important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>其它炫彩字体效果可参考：</p><p><a href="https://blog.csdn.net/whqet/article/details/25051237" class="LinkCard" target="_blank" rel="noopener">CSS 3 立体文字最佳实践</a></p><h4 id="旋转魔方（个性化返回顶部）"><a href="#旋转魔方（个性化返回顶部）" class="headerlink" title="旋转魔方（个性化返回顶部）"></a>旋转魔方（个性化返回顶部）</h4><p>效果 1 ：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/11.gif" alt="K9t8nH.gif"></p><p>效果 2 ：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/12.gif" alt="K9tGBd.gif"></p><p>之前回到顶部功能使用的是一张图片，大屏幕下计算会有问题，然后自己就在魔方里加了个方法来实现，正好移动端也能用。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/13.jpg" alt="KP2qiV.jpg"></p><p>说一下这个猫的配置吧，给有需要的朋友。只需在 /themes/next/source/css/_custom/custom.styl 添加如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.back-to-top</span> &#123;</span><br><span class="line">  //right: 60px;</span><br><span class="line">  width: 70px;  //图片素材宽度</span><br><span class="line">  height: 900px;  //图片素材高度</span><br><span class="line">  <span class="selector-tag">top</span>: <span class="selector-tag">-900px</span>;</span><br><span class="line">  <span class="selector-tag">bottom</span>: <span class="selector-tag">unset</span>;</span><br><span class="line">  <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span> <span class="selector-tag">ease-in-out</span>;</span><br><span class="line">  background: url("/images/scroll.png");</span><br><span class="line">  //隐藏箭头图标</span><br><span class="line">  &gt; <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;<span class="selector-class">.back-to-top-on</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: unset;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100vh</span> &lt; (<span class="number">900px</span> + <span class="number">200px</span>) ? <span class="built_in">calc</span>( <span class="number">100vh</span> - <span class="number">900px</span> - <span class="number">200px</span> ) : <span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>然后修改 background 里的 url 为图片地址。 <a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/1/14.jpg" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>下载图片</a> 保存为 scroll.png 放到 /themes/next/source/images/ 目录即可。</p><h5 id="魔方一"><a href="#魔方一" class="headerlink" title="魔方一"></a>魔方一</h5><p>在 <a href="http://www.100sucai.com/" target="_blank" rel="noopener">100素材网</a> 看到的，自己修改了下大小就放网站里来了。在 /themes/next/layout/_custom/ 下新建 cube-mini.swig（名字随便吧 -.- ），内容如下：</p><a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/share/swig/cube-mini.swig" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>cube-mini.swig</a><p>当然，也可以直接扒 100 素材网的样式再修改。</p><h5 id="魔方二"><a href="#魔方二" class="headerlink" title="魔方二"></a>魔方二</h5><p>样式来自 <a href="https://blog.csdn.net/FE_dev/article/details/75142505" target="_blank" rel="noopener">FEWY</a>，初始时魔方比较大，我已调整。在 /themes/next/layout/_custom/ 下新建 cube-hollow.swig，内容如下：</p><a class="btn" href="https://cdn.jsdelivr.net/gh/leafjame/cdn/share/swig/cube-hollow.swig" target="_blank" rel="noopener"><i class="fa fa-download fa-lg fa-fw"></i>cube-hollow.swig</a><h5 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h5><ol><li>在 /themes/next/layout/_custom/custom.swig 中引入新建的文件</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 旋转魔方 --&gt;</span></span><br><span class="line">&#123;% if theme.cube.enable %&#125;</span><br><span class="line">   &#123;% if theme.cube.type == "mini" %&#125;</span><br><span class="line">      &#123;% include 'cube-mini.swig' %&#125;</span><br><span class="line">   &#123;% elseif theme.cube.type == "hollow" %&#125;</span><br><span class="line">      &#123;% include 'cube-hollow.swig' %&#125;</span><br><span class="line">   &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><ol start="2"><li>在主题 _config.yml 中新建以下动态配置项</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cube:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">hollow</span> <span class="comment"># mini | hollow</span></span><br></pre></td></tr></table></figure></div><p>图片链接替换成你自己的，hexo 三连，移动端也有效果了，enjoy!</p><h4 id="一些建议"><a href="#一些建议" class="headerlink" title="一些建议"></a>一些建议</h4><h5 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h5><p>可以使用 <a href="https://baike.baidu.com/item/WebP/4073283" target="_blank" rel="noopener">WebP 格式</a> 的图片替代 JPG、PNG 等，比如这样： <a href="https://www.liaofuzhan.com/images/beichen.webp">示例图片</a>，在 Chrome 和 FireFox 都正常，IE 和 Safari 目前还不兼容，毕竟是谷歌推出的技术。我们也可通过修改 hexo 代码，增加 webp 图片支持，比如 <a href="https://blog.marryto.me/hexo-webp-support/" target="_blank" rel="noopener">这篇文章</a>，不过也有点麻烦 -.-!</p><p>下边推荐一个不错的网站，在线 JPG to WebP，再 WebP to JPG，图片就会被压缩，支持 GIF 、Video 等多种格式转换。</p><p><a href="https://ezgif.com/jpg-to-webp" class="LinkCard" target="_blank" rel="noopener">Online GIF maker and image editor</a></p><p>比如我上传本地 JPG 图片，下方显示：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File size: 509.99KiB, width: 1182px, height: 1182px, type: png</span><br></pre></td></tr></table></figure></div><p>转换成 webp 后，大小仅有 26 kb 左右，即上边的示例图片：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File size: 26.34KiB (-94.84%), width: 1182px, height: 1182px, frames: 1, type: webp</span><br></pre></td></tr></table></figure></div><p>拷贝转换后的 webp 图片地址，再选择 WebP to JPG 选项，粘贴进输入框，upload 后，在 image quality factor、Background color 默认情况下，转回 JPG ：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">File size: 59.33KiB (+125.26%), width: 1182px, height: 1182px, type: jpg</span><br></pre></td></tr></table></figure></div><p>相比 webp，图片又变大了，但相比原图，却是小了很多，压缩了好几倍，清晰度没什么太大变化。部分图片压缩效果可能没那么理想，比如本身就不大的图片，有时候反而还压大了。转 PNG 图片会大一些，可先转为 JPG，对清晰度要求不高的，可以尝试多转换几次。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 相册 </tag>
            
            <tag> 分享 </tag>
            
            <tag> 标签 </tag>
            
            <tag> 轮播图 </tag>
            
            <tag> valine </tag>
            
            <tag> valine-admin </tag>
            
            <tag> 邮件 </tag>
            
            <tag> 归档 </tag>
            
            <tag> 推荐 </tag>
            
            <tag> 鼠标 </tag>
            
            <tag> 知乎 </tag>
            
            <tag> 卡片 </tag>
            
            <tag> 评分 </tag>
            
            <tag> 魔方 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔—过节那点事</title>
      <link href="/posts/2291078664.html"/>
      <url>/posts/2291078664.html</url>
      
        <content type="html"><![CDATA[<p>结束了陪亲友的五天北京之行，终于能闲下来一会了，中秋节浑浑噩噩一过，又回到了原来的状态，记录下这期间所发生的一些琐事，生活还得继续…</p><h4 id="9月11日-多云-北京站"><a href="#9月11日-多云-北京站" class="headerlink" title="9月11日 多云 北京站"></a>9月11日 多云 北京站</h4><p>节前两天，女票买了回松原的动车票。眼看就要过节了，也没啥送的，就送她回家吧！当天正值911，和她聊了下这方面的事情，一问N不知，场面一度尴尬。</p><a id="more"></a><p>北京站熙熙攘攘的人群：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/1.jpg" alt="njJEqI.jpg"></p><p>晚上老干妈+大米饭+网站，耗到两点，激情满满！</p><h4 id="9月12日-多云-家里蹲"><a href="#9月12日-多云-家里蹲" class="headerlink" title="9月12日 多云 家里蹲"></a>9月12日 多云 家里蹲</h4><p>一个人在家自由啊，睡到自然醒。一天无事，捣鼓网站，做了些美化。晚上收到老弟从广东寄来的月饼，甚是感动。这次中通快递给力啊，两天时间硬是赶在节前送到。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/2.jpg" alt="njd9it.jpg"></p><p>咀香园月饼：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/3.jpg" alt="njdCJP.jpg"></p><p>第一次吃广式老字号月饼，哈哈，省得我自己去买了，反正附近超市月饼贼贵！</p><h4 id="9月13日-晴天-家里蹲"><a href="#9月13日-晴天-家里蹲" class="headerlink" title="9月13日 晴天 家里蹲"></a>9月13日 晴天 家里蹲</h4><p>今天是月饼节，起来晚了，随便吃了点，又开始捣鼓网站。女票和她妹子一早就去看房了，95平复式10楼的，均价小三千，首付6万，贷款23万左右（松原房价真不贵啊）。提前查了征信，没什么问题。昨天收到工行发的短信，提示贷款通过了。</p><p><a href="https://ipcrs.pbccrc.org.cn" class="LinkCard" target="_blank" rel="noopener">中国人民银行征信中心</a></p><p>女票也是傻得可爱，试了好几次都没查出来。然后一经我手就好了。银行的系统，你懂的，不能用谷歌浏览器来操作，不兼容！</p><p>晚上和父母通了视频，聊了些生活琐事，又是一年不在家过的中秋节，年纪大了开始有那么些的感慨了。老家阴天，但都会有贡月亮那么个仪式：一般是等圆亮正上空时，摘个柚子，削去顶部部分，插上几炷点着的香。把柚子从底部插在竹竿上立起来，后面的桌子上摆上几个月饼，一杯清水，一杯大米。贡完月亮就是小朋友最开心的时候了，因为可以放开了吃！月！饼！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/4.jpg" alt="n3VY59.png"></p><p>晚上自己一个人过节，不讲究那么多了，随便炒了点蒜苔，丸子冻的梆硬，so，一起吧！</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/5.jpg" alt="nj6irV.jpg"></p><h4 id="9月14日-晴天-北京西站"><a href="#9月14日-晴天-北京西站" class="headerlink" title="9月14日 晴天 北京西站"></a>9月14日 晴天 北京西站</h4><p>月饼节第二天一早，表姐一家人坐上了桂林—北京的高铁。晚上八点去接站，正好赶上14、15号天安门70周年演练，道路封闭了一段时间，呼啦啦的一大堆车，索性没耽误。晚上秋高气爽，月亮也久露真颜：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/6.jpg" alt="njcOhQ.jpg"></p><p>接到酒店，发现小孩的小米儿童手表丢了，然后我俩打车去定位的医院一顿找，对方无人接听，未果。回来11点多了，随便点了几个菜带回酒店吃，结束了匆匆的一天。</p><h4 id="9月15日-晴天-天安门"><a href="#9月15日-晴天-天安门" class="headerlink" title="9月15日 晴天 天安门"></a>9月15日 晴天 天安门</h4><p>由于是第一次来北京，所以还是把行程的第一站放在天安门吧，她们四个大人，两个小孩，所以大概说了一下注意事项，就出发了。14、15日天安门70周年演练，地铁封站，所以我们只能做到王府井下车，然后步行到天安门，途径北京饭店留了个影：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/7.jpg" alt="njRatS.jpg"></p><p>排队进天安门时，广场上空呼啸而过多架军机，正式开始了一早的演练。城楼两旁摆满了座椅，四周的架子也搭起来了：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/8.jpg" alt="njhFSg.jpg"></p><p>由于广场四周都未开放，我们选择先逛故宫。中午时分，在故宫门口买了几份三十好几的小盒饭，吃完就开始了我这忙碌的一天：拿她们的手机都给拍一遍，然后是我的相机。。还得看好四处乱跑的小屁孩！故宫的景点也是走马观花拍了一些：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/9.jpg" alt="nj4CH1.jpg"></p><p>乾清宫，正大光明匾：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/10.jpg" alt="nj49BR.jpg"></p><p>中途休息了一下，四点出了北门（演练，故宫四点闭馆），赶上清场都挤满了人，东西侧道路也封闭，禁止前往长安街方向，景山公园也没开放，故宫全景是看不了。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/11.jpg" alt="njTGon.jpg"></p><p>故宫一角：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/12.jpg" alt="njTYiq.jpg"></p><p>在公交站左等右等没有车，本想打算今晚去全聚德前门店吃烤鸭的，看来有点悬。女票下午6点到北京站，拿了一大箱吃的，得去接站。所以我们打算一起过去，顺道2号线，碰碰运气能不能去前门，不行就一起回家。终于等来了128路，坐到了崇文门，谁知地铁竟然封站到这里，范围也是够广的。没办法，只能走路去北京站，只有这站开放，人山人海啊。</p><p>接站后往回走，前门封站，最终还是没去成，期间要换乘一号线，然而复兴门也封站，我们提前了一站下车，出来后才知道公交停运，等了N久也打不到车。最后又是坐地铁换了6号线，离二环远了再打车回到家的。从故宫北门，硬是折腾了一大圈，才回到五棵松这边。历时5个多小时。回来我们自己做饭，一伙人吃了一顿，已是凌晨时分，结束了这闹腾的一天！</p><h4 id="9月16日-晴天-北京大学"><a href="#9月16日-晴天-北京大学" class="headerlink" title="9月16日 晴天 北京大学"></a>9月16日 晴天 北京大学</h4><p>怀有一颗北大心，带着孩子一起，坐运通114直达北大西门，这标志性校门处：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/13.jpg" alt="njvWlR.jpg"></p><p>好久不来了，连我这个不称职的<del>导游</del>都不知道，现在参观都需要在<strong>北京大学</strong>这个公众号里预约。难得来一次，没办法，只能在旁边找人花50元/人让带进去。期间也是等保安换班以后，带人的才有门路，你懂的。我们7人一行，分三拨终于是进去了。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/14.jpg" alt="njvf61.jpg"></p><p>感受下校园，走走停停，中午在<strong>北大最美时光咖啡厅</strong>吃了顿西餐，四点结束了北大之行，继续前往不远处的清华大学。西校门拍照的人也是络绎不绝，以致交通拥堵，目前也是不开放参观，我们在门口分别拍了照就离开了，前往下一站：奥林匹克公园。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/15.jpg" alt="njvRp9.jpg"></p><p>到奥林匹克公园时间正好，赶上夜幕降临</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/16.jpg" alt="nv3ID1.jpg"></p><p>买了鸟巢夜场门票，参观了空中走廊</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/17.jpg" alt="nv3hv9.jpg"></p><p>空中走廊照片：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/18.jpg" alt="nv8M5T.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/19.jpg" alt="nv8k8g.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/20.jpg" alt="nv8FPS.jpg"></p><p>逛下来已是九点，再在水立方拍了些照片就往回走了。到家11点多，女票提前睡了，吃饭不让叫她。我们就在附近的餐馆点了几个菜，吃完又是凌晨时分，回来洗洗睡，累趴的第二天行程结束。</p><h4 id="9月17日-晴天-八达岭"><a href="#9月17日-晴天-八达岭" class="headerlink" title="9月17日 晴天 八达岭"></a>9月17日 晴天 八达岭</h4><p>为了错开上班早高峰，赶了个大早，坐地铁一个半小时到达黄土店火车站，赶上了09:08的那趟S205小火车</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/21.jpg" alt="nvJ3u9.jpg"></p><p>途径詹天佑设计的人字形铁路，穿过春天时节花的海洋的山谷，于早上十点半抵达八达岭长城。售票窗口不怎么卖纸质门票了，都需要在手机上录入身份证信息进行订购，一些老年人、外国人可以在售票窗口买纸质票。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/22.jpg" alt="nvYRd1.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/23.jpg" alt="nvY2ZR.jpg"></p><p>天气不错，多拍了几张</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/24.jpg" alt="nvYIzD.jpg"></p><p>秋高气爽，墙外小风嗖嗖吹，适合登城。托老带小的，两点多左右抵达最高点—北八楼，拍照一番选择索道下山，票价一百，确实贵了，十分钟不到已抵达山脚下。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/25.jpg" alt="nvtyff.jpg"></p><p>买了几份自热米饭，和在西藏那会吃的一样，饭盒最下层有一包石灰粉，将水冲到里边，盖上盒盖，十来分钟的时间，生米也煮成了熟饭。还有自热火锅，简直是户外神器。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/26.jpg" alt="nvNd3T.jpg"></p><p>车上吃水果弄脏了衣服，表姐拿了一款除渍利器，沾上污渍一抹就掉，必备啊，好像某宝还没有的样子。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/27.jpg" alt="nvUyQS.jpg"></p><p>饭后坐四点多的火车回京，抵达黄土店站已是六点多，太阳准备下山了</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/28.jpg" alt="nvaFwd.jpg"></p><p>晚上尝试了一家东北菜馆，某人对拔丝地瓜好像情有独钟啊，哈哈~</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/29.jpg" alt="nvaieH.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/30.jpg" alt="nvakTA.jpg"></p><p>累趴的第三天在美食中完美结束。</p><h4 id="9月18日-晴天-前门"><a href="#9月18日-晴天-前门" class="headerlink" title="9月18日 晴天 前门"></a>9月18日 晴天 前门</h4><p>行程的最后一天，决定参观毛主席纪念堂，然后转转前门，感受一下老北京的胡同，品一下地道的北京烤鸭。真是计划赶不上变化，光在进天安门广场，安检排队就花了两个多小时。由于当天正值918，广场有活动，十点前都没怎么开放，以致于四周进广场的人排起了长龙。进到广场已是下午一点，纪念堂不再开放了，随便拍拍就出发去前门了。寄存了行李，逛了大栅栏、八大胡同，品尝了老北京炸酱面、卤煮、捏糖人。</p><p><img src="hhttps://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/31.jpg" alt="画浓妆等待合影的人"></p><p>逛到接近四点时，前往全聚德前门店排队，等候用餐。这是起源店，说是有百年历史了吧，所以还是选择了这里</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/32.jpg" alt="nvBIr8.jpg"></p><p>晚上点的烤鸭</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/33.jpg" alt="nvBaCR.jpg"></p><p>大厅收取10%的服务费，包间15%</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/34.jpg" alt="nvBtUJ.jpg"></p><p>服务还是很周到的，并没有出现网上说的那样，可能也是赶上淡季的原因吧。烤鸭趁热吃口感还是不错的，最后的鸭架可以选择打包带走。点的菜有点多，一下小一千没了，沾她们的光，我也是第一次来。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/35.jpg" alt="nvBhxP.jpg"></p><p>聚德前门店是“全聚德”的起源店，已经具有141年的历史。由于该店的特殊意义，建店初期的“全聚德”铺面老墙被原样移至大厅内，并在老墙后面依照旧式摆设恢复了“老铺”风貌，同时采用京味跑堂服务方式，传统的八仙桌、青色地砖、木制阁楼，老式的留声机、黑漆柜台，伴随着青衣小帽的伙计们热情的吆喝，传统怀旧的文化风貌尽收眼底。前门店的老墙、老铺、燕京八景、帝王间构成了独特的老店文化。——摘自《百度百科》</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/36.jpg" alt="nvsWG9.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/37.jpg" alt="nvsw2n.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/38.jpg" alt="nvBg5d.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/39.jpg" alt="nvBcUH.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/40.jpg" alt="nvB0v6.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/41.jpg" alt="nvBDKK.jpg"></p><p>五点半左右吃完烤鸭，正好快到降旗时间，遂往天安门广场溜达。有利位置已被占完，我们只能外围一点的看了。我是看过多次了，就负责给她们录些视频、拍拍照，直至广场清场。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/42.jpg" alt="nvcP3j.jpg"></p><p>之后一起逛了下特产店，买点带回老家。表姐硬要塞给我买地铁卡的钱，实在拗不过她。来也没请人家吃饭，倒是一路蹭玩蹭吃。。实在过意不去。她们订的19日早上七点回桂林的机票，晚上得提前去机场附近住下。送她们到了850路公交车站，车正好赶来，匆匆忙忙的也没顾得上说什么就告别了。我自个打道回府，结束累趴的第四天。</p><h4 id="9月19日-晴天-面试篇"><a href="#9月19日-晴天-面试篇" class="headerlink" title="9月19日 晴天 面试篇"></a>9月19日 晴天 面试篇</h4><p>在八达岭回来的车上，接到一个面试，预约的是19日下午两点，真有两把刷子（北京）科技有限公司，八通线高碑店站，北京东亿国际传媒产业园。</p><p>早上浑浑噩噩的睡到10点，起来收拾完出发已是12点，这会表姐她们正好抵达桂林。自己坐上地铁，一个多小时，两点准时达到，公司在一层的一个小屋子里，人不是很多，几十个人吧，面试官是一看就有点似曾相识的那种。首先作了自我介绍，然后说了一下项目经验，回答了最近项目的一些提问，比如ES跨表查询怎么做的。</p><p>聊到spring，问controller的怎么区分前台传递的参数，诸如json、xml，怎样映射到对应的对象上的，问了requestbody注解的原理。我提到了反射，根据pojo对象进行映射，没想起spring关键的HttpMessageConverter，原理性的东西给忘了。</p><p><a href="https://www.jianshu.com/p/333ed5ee958d" class="LinkCard" target="_blank" rel="noopener">【Spring】HttpMessageConverter的作用及替换</a></p><p>问了平常用的maven命令，deploy和package的区别，工作中是在idea里集成使用，具体细节还真没留意，只说到了部署和打包。</p><p><a href="https://blog.csdn.net/zhaojianting/article/details/80324533" class="LinkCard" target="_blank" rel="noopener">理解maven命令package、install、deploy的联系与区别</a></p><p>聊到这又问了springboot部署、启动相关的问题，怎样指定启动时不使用tomcat，都是一些实操给忘了，没回答上来。接着问了sharding-jdbc、mycat分库分表都怎么用，事务怎么处理，我当时脑子一抽，说事务已经给实现了呀，不用自己写代码，没想着面试官要问的是这里面事务的实现原理。</p><p>再后来，面试官说了个网上的例子，一张表里存了学生各科成绩，怎样用sql查出总分大于80分的学生。我说需要用到count、group by这些，面试官说这样查不出来，说我sql隔久不写生疏了。。细想一下，确实，sql外还得包一层select才行。</p><p>综合问的这些问题，面试官最后说了句不合适，说问的也不算偏吧，我回答的不够满意，好多东西都忘了，让回来好好准备，不到半小时结束了这次面试。</p><p>这几天跟着她们逛北京，面试这方面确实给疏忽了，累趴了回来躺着就着，面试当天也不怎么在状态，懵懵懂懂的就去了，造成面试不理想，自己在理论方面也还得加强、多深挖。这次面试也给自己敲了警钟，自己仍然很菜…很菜…菜… 奋斗吧，骚年~</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/20/43.jpg" alt="nxYbHs.png"></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 过节 </tag>
            
            <tag> 随笔 </tag>
            
            <tag> 北京 </tag>
            
            <tag> 中秋节 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT主题移动端样式适配</title>
      <link href="/posts/507826828.html"/>
      <url>/posts/507826828.html</url>
      
        <content type="html"><![CDATA[<p>个人网站搭建也有一段时间了，期间整合了挺多个性化功能，都是基于 PC 端而做的。最近在推自己小站时，朋友间的分享都是基于手机，然而 NexT 自有的样式在移动端的效果并不大理想，遂萌生了样式适配的想法。NexT 主题有预留给用户自定义 css 样式的文件：custom.styl，在这里可以添加自己喜欢的样式代码。</p><a id="more"></a><div class="note success"><p>本站主题已 Share 至 <a href="https://github.com/leafjame/hexo-theme-next5-leaf" target="_blank" rel="noopener">Github</a>，欢迎访问</p></div><p>手机端主页：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/22/1.jpg" alt="lD2Cfx.png"></p><p>其它的页面也做了美化，就不一一贴图了，具体效果可在手机端查看，以下是之前保存的截图链接地址</p><p><a href="https://github.com/leafjame/hexo-theme-next5-leaf/blob/master/README.pic.md" class="LinkCard" target="_blank" rel="noopener"></a></p><div class="note info"><p>本站基于 Hexo v3.9.0、 NexT v5.1.4 魔改，其它版本不敢保证都能兼容！</p></div><p>附上本站自定义的 <code>custom.styl</code> 文件，供参考</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#days</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">7</span>, <span class="number">179</span>, <span class="number">155</span>);</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*网站底部订阅图标*/</span></span><br><span class="line"><span class="selector-class">.subscribe-box</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">35</span>);</span><br><span class="line">  <span class="attribute">animation</span>: heartAnimate <span class="number">2s</span> ease-in-out infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subscribe-menu</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(/images/pointer.cur),auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(/images/wechat.svg);</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">24px</span> <span class="number">24px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subscribe-hover</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">35</span>);</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>(https://s2.ax1x.com/<span class="number">2019</span>/<span class="number">11</span>/<span class="number">02</span>/KLhDeA.th.jpg);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">150px</span> <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">35s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1024</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subscribe-description</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">3%</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">5%</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">5%</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">35s</span> <span class="built_in">cubic-bezier</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subscribe-menu</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.subscribe-hover</span> &#123;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">140px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.subscribe-menu</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.subscribe-description</span> &#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*菜单*/</span></span><br><span class="line"><span class="selector-class">.menu-item</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);</span><br><span class="line">  //border-radius: 3px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*近期文章*/</span></span><br><span class="line"><span class="selector-class">.my-links-of-blogroll-li</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);</span><br><span class="line">  <span class="comment">/* 动画效果 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>); <span class="comment">/* transparent IE 不支持 */</span></span><br><span class="line">  <span class="attribute">animation</span>: hue <span class="number">1.5s</span> linear infinite;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    to right,</span><br><span class="line">    #fffed4,</span><br><span class="line">    #fffede,</span><br><span class="line">    #fdffe2,</span><br><span class="line">    #f7ffec,</span><br><span class="line">    #ecfaf3,</span><br><span class="line">    #f1fffd,</span><br><span class="line">    #fafbff,</span><br><span class="line">    #f7fffc,</span><br><span class="line">    #fffee4</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 排行榜 */</span></span><br><span class="line"><span class="selector-class">.my-article-top</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">width</span>: 315<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 动画效果 */</span></span><br><span class="line">  <span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.1</span>); <span class="comment">/* transparent IE 不支持 */</span></span><br><span class="line">  <span class="selector-tag">animation</span>: <span class="selector-tag">hue</span> 1<span class="selector-class">.5s</span> <span class="selector-tag">linear</span> <span class="selector-tag">infinite</span>;</span><br><span class="line">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(</span><br><span class="line">    <span class="selector-tag">to</span> <span class="selector-tag">right</span>,</span><br><span class="line">    <span class="selector-id">#fffed4</span>,</span><br><span class="line">    <span class="selector-id">#fffede</span>,</span><br><span class="line">    <span class="selector-id">#fdffe2</span>,</span><br><span class="line">    <span class="selector-id">#f7ffec</span>,</span><br><span class="line">    <span class="selector-id">#ecfaf3</span>,</span><br><span class="line">    <span class="selector-id">#f1fffd</span>,</span><br><span class="line">    <span class="selector-id">#fafbff</span>,</span><br><span class="line">    <span class="selector-id">#f7fffc</span>,</span><br><span class="line">    <span class="selector-id">#fffee4</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*归档页样式优化 began*/</span></span><br><span class="line"><span class="selector-class">.page-archive</span> <span class="selector-class">.archive-page-counter</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 16<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post-time</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">11px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">padding-right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.mypost</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-o-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-ms-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.my-post-title-link</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">"📚"</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font</span>: normal normal normal <span class="number">14px</span>/<span class="number">1</span> FontAwesome;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">width</span>: 260<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-left</span>: 18<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* 动画效果 */</span></span><br><span class="line">  <span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.1</span>); <span class="comment">/* transparent IE 不支持 */</span></span><br><span class="line">  <span class="selector-tag">animation</span>: <span class="selector-tag">hue</span> 2<span class="selector-tag">s</span> <span class="selector-tag">linear</span> <span class="selector-tag">infinite</span>;</span><br><span class="line">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(</span><br><span class="line">    <span class="selector-tag">to</span> <span class="selector-tag">right</span>,</span><br><span class="line">    <span class="selector-id">#fffed4</span>,</span><br><span class="line">    <span class="selector-id">#fffede</span>,</span><br><span class="line">    <span class="selector-id">#fdffe2</span>,</span><br><span class="line">    <span class="selector-id">#f7ffec</span>,</span><br><span class="line">    <span class="selector-id">#ecfaf3</span>,</span><br><span class="line">    <span class="selector-id">#f1fffd</span>,</span><br><span class="line">    <span class="selector-id">#fafbff</span>,</span><br><span class="line">    <span class="selector-id">#f7fffc</span>,</span><br><span class="line">    <span class="selector-id">#fffee4</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-class">.my-post-title-link</span>&#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post-title</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">4.5rem</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4c4948</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: .<span class="number">8rem</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    //margin-left: 4rem;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post-header</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: top;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-o-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-ms-transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition</span>: all .<span class="number">2s</span> ease-in-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.my-post-meta</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#99a9bf</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#114142</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.post-block</span><span class="selector-class">.tag</span> <span class="selector-class">.collection-title</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#3f3f3f</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#b4e8fa</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">1.5px</span>;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#3f3f3f</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 18<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.category-list-link</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">15px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">104</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">0.1</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*归档页样式优化 end */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main</span>&#123;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.headband</span> &#123;</span><br><span class="line">  //display: none;</span><br><span class="line">  <span class="selector-tag">height</span>: 1<span class="selector-tag">px</span>;</span><br><span class="line">  background: $gainsboro;</span><br><span class="line">  +<span class="selector-tag">mobile</span>()&#123;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">  <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">  <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*评论数*/</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-comments-count</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*鼠标样式*/</span></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(/images/default.cur),auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-pseudo">:link</span> &#123;</span><br><span class="line">  <span class="attribute">cursor</span>: <span class="built_in">url</span>(/images/pointer.cur),auto</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*文章底部评分相关*/</span></span><br><span class="line"><span class="selector-class">.post-widgets</span> &#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*文章底部标签样式*/</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-tags</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">12</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line">  <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">12</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">3px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">12</span>), <span class="number">0</span> <span class="number">1px</span> <span class="number">2px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">24</span>);</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Comic Sans MS'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">transition</span>: .<span class="number">2s</span> ease-out;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line"></span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">padding</span>: 1<span class="selector-tag">px</span> 3<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 8<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">100</span>,<span class="number">154</span>,<span class="number">182</span>,<span class="number">0.902</span>);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>), <span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.19</span>);</span><br><span class="line">    <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>), <span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.19</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">16px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.2</span>), <span class="number">0</span> <span class="number">6px</span> <span class="number">20px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.19</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* pc主页文章添加阴影效果 */</span></span><br><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">203</span>, .<span class="number">5</span>);</span><br><span class="line">  <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">202</span>, <span class="number">203</span>, <span class="number">204</span>, .<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 1~4级标题设置 */</span></span><br><span class="line"><span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-tag">h2</span>,</span><br><span class="line"><span class="selector-tag">h3</span>,</span><br><span class="line"><span class="selector-tag">h4</span>,</span><br><span class="line"><span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">blockquote&#123;// PC端&gt;符号表示的内容样式</span><br><span class="line">  <span class="selector-tag">font-size</span>: 15<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">background</span>: <span class="selector-id">#d9efdc5e</span>;</span><br><span class="line">  <span class="selector-tag">border-left-color</span>: <span class="selector-id">#0fc53085</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tip</span>, <span class="selector-tag">blockquote</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">12px</span> <span class="number">24px</span> <span class="number">12px</span> <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">1em</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*文章页*/</span></span><br><span class="line"><span class="selector-class">.posts-expand</span>&#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">3px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>:<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-class">.fancybox</span> <span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> auto <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 一到六级标题设置 */</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h1</span>,</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span>,</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span>,</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h4</span>,</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h5</span>,</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h6</span> &#123;</span><br><span class="line">  <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">padding-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 隐藏返回顶部猫，使用魔方替代 */</span></span><br><span class="line"><span class="selector-class">.back-to-top</span> &#123;</span><br><span class="line">  width: 70px;  //图片素材宽度</span><br><span class="line">  height: 900px;  //图片素材高度</span><br><span class="line">  <span class="selector-tag">top</span>: <span class="selector-tag">-900px</span>;</span><br><span class="line">  <span class="selector-tag">bottom</span>: <span class="selector-tag">unset</span>;</span><br><span class="line">  <span class="selector-tag">transition</span>: <span class="selector-tag">all</span> <span class="selector-class">.5s</span> <span class="selector-tag">ease-in-out</span>;</span><br><span class="line">  background: url("/images/scroll.png");</span><br><span class="line">  &gt; <span class="selector-tag">i</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;<span class="selector-class">.back-to-top-on</span> &#123;</span><br><span class="line">    <span class="attribute">bottom</span>: unset;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100vh</span> &lt; (<span class="number">900px</span> + <span class="number">200px</span>) ? <span class="built_in">calc</span>( <span class="number">100vh</span> - <span class="number">900px</span> - <span class="number">200px</span> ) : <span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"><span class="comment">/*代码块复制按钮*/</span></span><br><span class="line"><span class="selector-class">.highlight</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: static;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">highlight-wrap</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#008b89</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.btn-copy</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(#fcfcfc,#eee);</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d5d5d5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">-webkit-user-select</span>: none;</span><br><span class="line">  <span class="attribute">-moz-user-select</span>: none;</span><br><span class="line">  <span class="attribute">-ms-user-select</span>: none;</span><br><span class="line">  <span class="attribute">user-select</span>: none;</span><br><span class="line">  <span class="attribute">-webkit-appearance</span>: none;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">-o-transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">transition</span>: opacity .<span class="number">3s</span> ease-in-out;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2px</span> <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn-copy</span> <span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.btn-copy</span>&#123;</span><br><span class="line">  <span class="attribute">opacity</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">.read-over&#123;//本文阅读结束</span><br><span class="line">  <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line">  <span class="selector-tag">margin-top</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">  <span class="selector-tag">color</span>: <span class="selector-id">#ea103d91</span>;</span><br><span class="line">  <span class="selector-tag">font-size</span><span class="selector-pseudo">:18px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.share_reward&#123;//pc打赏</span><br><span class="line">  <span class="selector-tag">margin</span>: 10<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">  <span class="selector-tag">width</span>: 90%;</span><br><span class="line">  <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line">&#125;</span><br><span class="line">#rewardButton &#123;//打赏</span><br><span class="line">  <span class="selector-tag">margin</span>: 15<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">code</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#c7254e</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#f9f2f4</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">1px</span> <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">word-break</span>: break-all;</span><br><span class="line">  <span class="attribute">border-radius</span>:<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*大代码块的自定义样式*/</span></span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">code</span>, <span class="selector-tag">pre</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d6d6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-body</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line">.post-body .note&#123;//提示条</span><br><span class="line">  <span class="selector-tag">font-size</span>: 15<span class="selector-tag">px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*文章标题字体*/</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*文章标题动态效果*/</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, #a166ab <span class="number">0%</span>, #ef4e7b <span class="number">25%</span>, #f37055 <span class="number">50%</span>, #ef4e7b <span class="number">75%</span>, #a166ab <span class="number">100%</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*文章大标题*/</span></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-title-link</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span>&#123;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span><span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.post-body</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0593d3</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#0593d3</span>;</span><br><span class="line">  //text-decoration: underline  // none || underline || blink || overline || line-through</span><br><span class="line">  &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fc6423</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#fc6423</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 精品文章 began */</span></span><br><span class="line"><span class="selector-class">.jingping</span>&#123;</span><br><span class="line">  <span class="attribute">background </span>: <span class="number">#00a8c3</span>;</span><br><span class="line">  <span class="attribute">padding</span>:<span class="number">2px</span> <span class="number">4px</span> <span class="number">2px</span> <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*  精品文章 end */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*热评文章 */</span></span><br><span class="line"><span class="selector-class">.ds-top-threads</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">padding-left</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">transition</span>: border-width <span class="number">0.2s</span> linear <span class="number">0s</span>, color <span class="number">0.2s</span> linear <span class="number">0s</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.ds-top-threads</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">8px</span> solid <span class="number">#4d768c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*相关文章推荐 pc样式设置*/</span></span><br><span class="line"><span class="selector-tag">summary</span>&#123;</span><br><span class="line">  <span class="attribute">outline</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span><br><span class="line">  +mobile() &#123;/*手机端*/</span><br><span class="line">    <span class="selector-tag">font-size</span>: 14<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-top</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">details</span>&#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">details</span> <span class="selector-class">.popular-posts</span>&#123;</span><br><span class="line">  +mobile() &#123;</span><br><span class="line">      <span class="selector-tag">margin</span>: 5<span class="selector-tag">px</span> <span class="selector-tag">-12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.popular-posts-header</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">45px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">900</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span><br><span class="line">  +mobile() &#123;/*手机端*/</span><br><span class="line">    <span class="selector-tag">font-size</span>: 18<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-top</span>: 25<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">ul</span><span class="selector-class">.popular-posts</span> <span class="selector-class">.popular-posts-item</span> <span class="selector-class">.popular-posts-title</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#999</span>;</span><br><span class="line">  &amp;:hover&#123;</span><br><span class="line">    <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.xiaohutong-img-class</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">960px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">660px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*友链页样式 begain --------&gt; */</span></span><br><span class="line"> <span class="selector-id">#links</span>&#123;</span><br><span class="line">   <span class="attribute">margin-top</span>: <span class="number">5rem</span>;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="selector-class">.links-content</span>&#123;</span><br><span class="line">  <span class="attribute">margin-top</span>:<span class="number">1rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.link-navigation</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">" "</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">transition-duration</span>: <span class="number">0.15s</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">1rem</span>;</span><br><span class="line">  <span class="attribute">display</span>:flex;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span><span class="selector-pseudo">:nth-child(odd)</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span><span class="selector-pseudo">:nth-child(even)</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.1</span>);</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.12</span>), <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.04</span>);</span><br><span class="line">  <span class="comment">/* 动画效果 */</span></span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>); <span class="comment">/* transparent IE 不支持 */</span></span><br><span class="line">  <span class="attribute">animation</span>: hue <span class="number">1.5s</span> linear infinite;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    to right,</span><br><span class="line">    #fffed4,</span><br><span class="line">    #fffede,</span><br><span class="line">    #fdffe2,</span><br><span class="line">    #f7ffec,</span><br><span class="line">    #ecfaf3,</span><br><span class="line">    #f1fffd,</span><br><span class="line">    #fafbff,</span><br><span class="line">    #f7fffc,</span><br><span class="line">    #fffee4</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> <span class="selector-tag">a</span>, <span class="selector-class">.card</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>:none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> <span class="selector-class">.ava</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">3rem</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">3rem</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">0</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">1em</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>:<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> <span class="selector-class">.card-header</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">236px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> <span class="selector-class">.card-header</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#2bbc8a</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> <span class="selector-class">.card-header</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#d480aa</span>;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.card</span> <span class="selector-class">.card-header</span> <span class="selector-class">.info</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>:normal;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#a3a3a3</span>;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.focus-links</span> &#123;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">position</span>: unset;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">7px</span> <span class="number">0</span> <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">11px</span>;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#42c02e</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">24px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">22px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#42c02e</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.focus-links</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#318024</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.friends-btn</span>&#123;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span><span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">35</span>);</span><br><span class="line">  <span class="attribute">border</span>: none<span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">transition-property</span>: unset;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.friends-btn</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>) <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, #a166ab <span class="number">0%</span>, #ef4e7b <span class="number">25%</span>, #f37055 <span class="number">50%</span>, #ef4e7b <span class="number">75%</span>, #a166ab <span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">margin</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*友链页样式 end    --------&gt; */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.menu</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.logo-line-before</span>,</span><br><span class="line"><span class="selector-class">.logo-line-after</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">15</span>, <span class="number">46</span>, <span class="number">65</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 网站标题 炫彩效果1 */</span></span><br><span class="line"><span class="selector-class">.site-title</span>&#123;</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    to right,</span><br><span class="line">    orangered,</span><br><span class="line">    orange,</span><br><span class="line">    gold,</span><br><span class="line">    lightgreen,</span><br><span class="line">    cyan,</span><br><span class="line">    dodgerblue,</span><br><span class="line">    mediumpurple,</span><br><span class="line">    hotpink,</span><br><span class="line">    orangered</span><br><span class="line">  );</span><br><span class="line">  <span class="comment">/*注意颜色得始终要相同,不然就会有突变颜色线条,影响视觉*/</span></span><br><span class="line">  <span class="attribute">background-size</span>: <span class="number">110vw</span>;</span><br><span class="line">  <span class="attribute">-webkit-background-clip</span>: text;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.1</span>); <span class="comment">/* transparent IE 不支持 */</span></span><br><span class="line">  <span class="attribute">animation</span>: sliding <span class="number">30s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> sliding&#123;</span><br><span class="line">  <span class="selector-tag">to</span>&#123;</span><br><span class="line">    <span class="attribute">background-position</span>:  -<span class="number">2000vw</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 网站副标题 炫彩效果2 */</span></span><br><span class="line"><span class="selector-class">.site-meta</span>, <span class="comment">/* 移动端炫动效果 */</span></span><br><span class="line"><span class="selector-class">.site-subtitle</span> &#123;</span><br><span class="line">  font-family: 'Apple Chancery', fantasy, 'Comic Sans MS', sans-serif; // Luminari</span><br><span class="line">  <span class="selector-tag">letter-spacing</span>: 2<span class="selector-tag">px</span>;</span><br><span class="line">  +<span class="selector-tag">mobile</span>()&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">color</span>: <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.1</span>); <span class="comment">/* transparent IE 不支持 */</span></span><br><span class="line">  <span class="selector-tag">animation</span>: <span class="selector-tag">hue</span> 1<span class="selector-class">.5s</span> <span class="selector-tag">linear</span> <span class="selector-tag">infinite</span>;</span><br><span class="line">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(<span class="selector-tag">to</span> <span class="selector-tag">right</span> <span class="selector-tag">bottom</span>, <span class="selector-tag">rgb</span>(255,0,0), <span class="selector-tag">rgb</span>(255,128,0), <span class="selector-tag">rgb</span>(255,255,0), <span class="selector-tag">rgb</span>(0,255,0), <span class="selector-tag">rgb</span>(0,255,128), <span class="selector-tag">rgb</span>(0,255,255), <span class="selector-tag">rgb</span>(0,128,255), <span class="selector-tag">rgb</span>(0,0,255), <span class="selector-tag">rgb</span>(128,0,255), <span class="selector-tag">rgb</span>(255,0,255), <span class="selector-tag">rgb</span>(255,0,128));</span><br><span class="line">  <span class="selector-tag">-webkit-background-clip</span>: <span class="selector-tag">text</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> hue &#123;</span><br><span class="line">  <span class="selector-tag">from</span> &#123;</span><br><span class="line">      <span class="attribute">filter</span>: <span class="built_in">hue-rotate</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">to</span> &#123;</span><br><span class="line">      <span class="attribute">filter</span>: <span class="built_in">hue-rotate</span>(-<span class="number">360deg</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-meta</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ecf9f8</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">padding</span>: 10<span class="selector-tag">px</span> 0;</span><br><span class="line">    <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(90<span class="selector-tag">deg</span>,<span class="selector-id">#f79533</span> 0,<span class="selector-id">#f37055</span> 15%,<span class="selector-id">#ef4e7b</span> 30%,<span class="selector-id">#a166ab</span> 44%,<span class="selector-id">#5073b8</span> 58%,<span class="selector-id">#1098ad</span> 72%,<span class="selector-id">#07b39b</span> 86%,<span class="selector-id">#6dba82</span> 100%)!<span class="selector-tag">important</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-meta</span> <span class="selector-class">.site-title</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">font-family</span>: Zapfino, <span class="string">'Comic Sans MS'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">letter-spacing</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0px</span> <span class="number">15px</span> <span class="number">0</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">margin</span>: 5<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> 0<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">letter-spacing</span>: 3<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 18<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer</span> &#123;</span><br><span class="line">  //background: none;</span><br><span class="line">  //font-size: 14px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.footer-inner</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'Comic Sans MS'</span>, sans-serif;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4c618f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 尾部不蒜子访客统计 */</span></span><br><span class="line"><span class="selector-class">.site-uv</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attribute">margin-right</span>: -<span class="number">13px</span>;</span><br><span class="line">  <span class="attribute">display</span>: inline; <span class="comment">/* safari 不换行*/</span></span><br><span class="line">  &amp;::after &#123;</span><br><span class="line">    <span class="selector-tag">content</span>: "";</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-uv</span>,</span><br><span class="line"><span class="selector-class">.site-pv</span>,</span><br><span class="line"><span class="selector-class">.page-pv</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline; <span class="comment">/*百度浏览器不换行*/</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.busuanzi-value</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#1890ff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.site-author-name</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">18px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#090909</span>;</span><br><span class="line">  //font-family: 'Comic Sans MS', sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-description</span>&#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links-of-blogroll</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links-of-author</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links-of-author-item</span>&#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.links-of-author-item</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.site-overview &#123;//左侧socia标签居中</span><br><span class="line">  <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-inner</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#649ab6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> &#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: auto; <span class="comment">/* for IE */</span></span><br><span class="line">  <span class="attribute">margin-left</span>: inherit;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">2px</span> <span class="number">2px</span> <span class="number">40px</span> <span class="number">#bdb2b2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#649ab6</span>;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: <span class="number">#649ab6</span>;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0c0b0b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.site-state-item</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">1px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#649ab659</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-class">.sidebar-nav-active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#649ab6</span>;</span><br><span class="line">  <span class="attribute">border-bottom-color</span>: <span class="number">#649ab6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0c0b0b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-toggle</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#649ab6</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*文章目录样式*/</span></span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-class">.nav</span> <span class="selector-class">.active</span>&gt;<span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#4f7e96</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-toc</span> <span class="selector-tag">ol</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#7784ba</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.sidebar-nav</span> <span class="selector-class">.sidebar-nav-active</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#37596c</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 首页文章图片 */</span></span><br><span class="line"><span class="selector-class">.index_img_class</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">450px</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">height</span>: 190<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文章首字下沉、大号字体效果 */</span></span><br><span class="line"><span class="selector-class">.post-body</span>&gt;<span class="selector-tag">p</span><span class="selector-pseudo">:first-child</span><span class="selector-pseudo">::first-letter</span>&#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">42px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">28px</span>;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">margin-top</span>: 10<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">margin-right</span>: 4<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 26<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">line-height</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*首页阅读全文样式*/</span></span><br><span class="line"><span class="selector-class">.post-button</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-button</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">margin</span>: 10<span class="selector-tag">px</span> <span class="selector-tag">auto</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-eof</span>&#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">30px</span> auto;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">margin</span>: 20<span class="selector-tag">px</span> <span class="selector-tag">auto</span> 10<span class="selector-tag">px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#555</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">  <span class="attribute">border</span>: none <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">transition-property</span>: unset;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0px</span> <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: inherit;</span><br><span class="line">  +mobile()&#123;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-tag">rgb</span>(255, 255, 255);</span><br><span class="line">    <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(90<span class="selector-tag">deg</span>, <span class="selector-id">#a166ab</span> 0%, <span class="selector-id">#ef4e7b</span> 25%, <span class="selector-id">#f37055</span> 50%, <span class="selector-id">#ef4e7b</span> 75%, <span class="selector-id">#a166ab</span> 100%);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.post-button</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0px</span> <span class="number">0px</span> <span class="number">10px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.35</span>);</span><br><span class="line">  <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(<span class="number">90deg</span>, #a166ab <span class="number">0%</span>, #ef4e7b <span class="number">25%</span>, #f37055 <span class="number">50%</span>, #ef4e7b <span class="number">75%</span>, #a166ab <span class="number">100%</span>);</span><br><span class="line">  <span class="attribute">margin</span>: inherit;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 自定义页脚跳动的心样式 began */</span></span><br><span class="line"><span class="keyword">@keyframes</span> heartAnimate &#123;</span><br><span class="line">  0%,100%&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1</span>);&#125;</span><br><span class="line">  10%,30%&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">0.9</span>);&#125;</span><br><span class="line">  20%,40%,60%,80%&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.1</span>);&#125;</span><br><span class="line">  50%,70%&#123;<span class="attribute">transform</span>:<span class="built_in">scale</span>(<span class="number">1.1</span>);&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.with-love</span> &#123;</span><br><span class="line">  <span class="attribute">animation</span>: heartAnimate <span class="number">1.33s</span> ease-in-out infinite;</span><br><span class="line">  <span class="attribute">color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">113</span>, <span class="number">168</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 自定义页脚跳动的心样式 end */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*修改选择字体块背景颜色*/</span></span><br><span class="line"><span class="selector-pseudo">::selection</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff159</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#222</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.pagination</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border-top</span>:<span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">/* 页码数字显示当前页码样式设置 */</span></span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span><span class="selector-class">.current</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 页码样式设置 */</span></span><br><span class="line"><span class="selector-class">.pagination</span> <span class="selector-class">.page-number</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#49b1f5</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* valine 评论系统样式 began ------------------&gt; */</span></span><br><span class="line"><span class="comment">/* 评论列表边框*/</span></span><br><span class="line"><span class="selector-class">.valine</span> <span class="selector-class">.vlist</span> <span class="selector-class">.vcard</span> &#123;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#4aeb877d</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.valine</span> <span class="selector-class">.vlist</span> <span class="selector-class">.vcard</span> <span class="selector-class">.vcomment-children</span> <span class="selector-class">.vlist</span> <span class="selector-class">.vcard</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: none<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* valine 评论系统样式 end  ------------------&gt; */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 适配手机样式 began ------------------------&gt; */</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>)&#123;</span><br><span class="line">  <span class="comment">/*手机端body体显示*/</span></span><br><span class="line">  <span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background-image</span>: none;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">    <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#34495e</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*手机端菜单栏样式*/</span></span><br><span class="line">  <span class="selector-class">.menu</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">float</span>: none <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.menu</span> <span class="selector-class">.menu-item</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/*font-weight: 600;*/</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*选中菜单样式*/</span></span><br><span class="line">  <span class="selector-class">.menu-item-active</span> <span class="selector-tag">a</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">10%</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">24px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">blockquote</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.back-to-top</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">opacity</span>: .<span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*手机屏幕下多级标签样式修改*/</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">0em</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span>,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h1</span> ,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span> ,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span> ,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h4</span>  &#123;</span><br><span class="line">    <span class="attribute">pointer-events</span>: auto;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0.7em</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#42b983</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">0.7em</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: -<span class="number">0.05em</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">0.5em</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">figure</span> &#123;</span><br><span class="line">    <span class="comment">/*margin: 1.2em 0;*/</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*手机段落样式修改*/</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5e6d82</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 手机端 列表样式修改*/</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ul</span>,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ol</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: inherit;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ul</span> <span class="selector-tag">ul</span>,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ol</span> <span class="selector-tag">ul</span>,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ul</span> <span class="selector-tag">ol</span>,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ol</span> <span class="selector-tag">ol</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5e6d82</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">400</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.6em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1.2em</span> <span class="number">0</span> -<span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">word-spacing</span>: <span class="number">0.05em</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#5e6d82</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-button</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">8px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1px</span> <span class="number">0</span> <span class="number">20px</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*设置不展示字数统计*/</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-meta</span> <span class="selector-class">.post-wordcount</span>&#123;</span><br><span class="line">    //display: none;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.page-post-detail</span> <span class="selector-class">.post-meta</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.page-post-detail</span> <span class="selector-class">.post-title</span> &#123;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">600</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span> <span class="meta">!important</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-class">.my_post_copyright</span>&#123;<span class="comment">/* 版权所有 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">95%</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: .<span class="number">73rem</span></span><br><span class="line">    margin: <span class="number">2em</span> auto <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.my_post_copyright</span> <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">3px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0.5em</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*适应手机屏幕设置*/</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.header-inner</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h1</span> &#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span>,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">pointer-events</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h1</span> ,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span> ,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span> ,</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h4</span>  &#123;</span><br><span class="line">    <span class="attribute">pointer-events</span>: auto;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2c3e50</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h1</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h4</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h5</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h6</span><span class="selector-pseudo">:before</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h2</span> &#123;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">0.7em</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-body</span> <span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1.2</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*手机端显示设置信息*/</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/*手机端代码行上text文档设置*/</span></span><br><span class="line">  <span class="selector-class">.highlight</span> <span class="selector-tag">figcaption</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*手机端显示代码行数背景设置*/</span></span><br><span class="line">  <span class="selector-class">.highlight</span> <span class="selector-class">.gutter</span> <span class="selector-tag">pre</span>&#123;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">2px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*手机端显示代码行数字体大小*/</span></span><br><span class="line"><span class="selector-class">.highlight</span>, <span class="selector-tag">pre</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">/*手机端显示代码字体大小*/</span></span><br><span class="line"><span class="selector-class">.code</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-id">#comments</span><span class="selector-class">.comments</span><span class="selector-class">.v</span>&#123;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">margin-right</span>: <span class="number">0px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.comments</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">20px</span> <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*手机适配文章底部信息*/</span></span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>) &#123;</span><br><span class="line">  <span class="selector-class">.main</span>&#123;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">130px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.footer</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.read-over</span>&#123;<span class="comment">/*本文阅读结束*/</span></span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ea103d91</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.share_reward</span>&#123;<span class="comment">/*打赏*/</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">90%</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#rewardButton</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">15px</span> auto;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#rewardButton</span> <span class="selector-tag">span</span> &#123;<span class="comment">/*打赏*/</span></span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#QR</span>&#123;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#QR</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#QR</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0.8em</span> <span class="number">2em</span> <span class="number">0</span> <span class="number">2em</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-copyright</span>&#123;</span><br><span class="line">    <span class="attribute">padding</span>: .<span class="number">1em</span> .<span class="number">5em</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0em</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">2px</span> solid <span class="number">#ff1700</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-copyright</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13.5px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.posts-expand</span> <span class="selector-class">.post-tags</span>&#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">8px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-nav-item</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: unset;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.pagination</span>&#123;<span class="comment">/*分页按钮*/</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">border-top</span>:<span class="number">0px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/*TopX适应手机屏幕设置*/</span></span><br><span class="line">  <span class="selector-id">#top</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-body</span> <span class="selector-class">.note</span>&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-body</span> <span class="selector-class">.note</span><span class="selector-class">.info</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.post-body</span> <span class="selector-class">.tabs</span> <span class="selector-class">.tab-content</span> <span class="selector-class">.note</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> auto;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> (<span class="attribute">max-width:</span> <span class="number">767px</span>) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 手机端文章布局 */</span></span><br><span class="line">  <span class="selector-class">.post</span> &#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*手机友链页*/</span></span><br><span class="line">  <span class="selector-class">.card</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">88%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">3px</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">0rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-id">#links</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">3rem</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/*移动端 本地搜索框美化*/</span></span><br><span class="line">  <span class="selector-class">.local-search-popup</span>&#123;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">10%</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">35px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">60%</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.local-search-popup</span> <span class="selector-class">.search-icon</span>, <span class="selector-class">.local-search-popup</span> <span class="selector-class">.popup-btn-close</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#15a1d8f2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.local-search-popup</span> <span class="selector-class">.local-search-input-wrapper</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">21px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.local-search-popup</span> <span class="selector-class">.popup-btn-close</span> &#123;</span><br><span class="line">    <span class="attribute">border-left</span>: none;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.local-search-popup</span> <span class="selector-tag">p</span><span class="selector-class">.search-result</span>&#123;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">1.2em</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: .<span class="number">1em</span> <span class="number">0</span> .<span class="number">5em</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.local-search-popup</span> <span class="selector-tag">a</span><span class="selector-class">.search-result-title</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 适配手机样式 end  ------------------------&gt; */</span></span><br></pre></td></tr></table></figure></div><br><div class="note danger"><p>注意：样式不保证完全兼容，请酌情调整</p></div><p>其它美化文章可参考：</p><p><a href="https://bestzuo.cn/posts/1689445187.html" class="LinkCard" target="_blank" rel="noopener">hexo 美化 2.0</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 样式 </tag>
            
            <tag> 自定义 </tag>
            
            <tag> 移动端 </tag>
            
            <tag> 手机 </tag>
            
            <tag> 适配 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT接入Google AdSense广告</title>
      <link href="/posts/662668482.html"/>
      <url>/posts/662668482.html</url>
      
        <content type="html"><![CDATA[<p>个人网站从今年七夕建站至今，算来有二十来天了，也学着写了些文章，陆陆续续的有更新，目前多是围绕 NexT 主题展开。文章的内容，主要是自己建站过程中的一些积累，觉得不错的的就记录下来，期间对网站也是一顿捣鼓，参考了很多优秀网站，集大家之所成！</p><a id="more"></a><p>最近发现有的网站接入了广告模块，觉得有点意思，遂学着做了。<del>PS：主要是听说能赚点外快，嗯！</del></p><p>接入 Google AdSense，首先得注册账号，登录 <a href="https://www.google.com/adsense/" target="_blank" rel="noopener">Google AdSense</a> 进行注册，过程略过。</p><h3 id="添加广告代码"><a href="#添加广告代码" class="headerlink" title="添加广告代码"></a>添加广告代码</h3><p>完成注册后，将谷歌提供的代码添加到网站的 <code>&lt;head&gt;</code> 标签内，比如我是在 <code>next/layout/_partials/head.swig</code> 头部位置添加的：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>/&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span> /&gt;</span><br><span class="line">&lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>/&gt;</span><br><span class="line">&lt;meta name=<span class="string">"theme-color"</span> content=<span class="string">"&#123;&#123; theme.android_chrome_color &#125;&#125;"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--接入谷歌广告--&gt;</span><br><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">  (adsbygoogle = window.adsbygoogle || []).push(&#123;</span></span><br><span class="line"><span class="regexp">    google_ad_client: "ca-pub-2723999557244339",</span></span><br><span class="line"><span class="regexp">    enable_page_level_ads: true</span></span><br><span class="line"><span class="regexp">  &#125;);</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></div><p>完成后，可先在本地浏览器确认（打开调试工具或者查看网页源代码，搜索到相关代码即可）。无误后部署正式环境，然后在 <code>Google AdSense</code> 中点验证，之后谷歌就会核查你的网站，进行验收。</p><p>此过程一般会在三天左右，<code>Google AdSense</code> 就会发邮件通知你是否通过审核。</p><p>关于审核的事：我第一次申请被拒，<strong>再次申请</strong>就<strong>通过</strong>了，建站二十来天，文章十篇左右。</p><h3 id="广告位配置"><a href="#广告位配置" class="headerlink" title="广告位配置"></a>广告位配置</h3><p>审核通过后，登录 <code>Google AdSense</code>，在 <code>Ads</code> 页签下，可以看到有 <code>Auto ads</code>（自动广告）和 <code>Ad units</code>（广告单元），可根据自身网站选择性配置。</p><h4 id="Auto-ads"><a href="#Auto-ads" class="headerlink" title="Auto ads"></a>Auto ads</h4><p>其实，当审核通过后，<code>Google AdSense</code> 已自动为你的网站接入了<code>自动广告</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/23/1.jpg" alt="n1Qmxs.png"></p><p>这是在配置自动广告时得到的代码，和之前添加的验证代码时一样的，所以这里就不用再配置了。</p><p>谷歌自动广告会根据页面布局、网页上的内容量以及现有 Google 广告等不同元素自动发布新广告，还是比较智能化的。</p><p>不过嘛，投放的主动权在别人手里，什么时候投放广告这个时机不确定，也得根据你的网站来进行适配，<a href="https://support.google.com/adsense/answer/7478040?hl=en" target="_blank" rel="noopener">参考文档</a>。</p><div class="note info"><p>PS：网站做了<a href="https://www.liaofuzhan.com/posts/507826828.html">手机端适配</a>后，已正常接入谷歌自动广告。</p></div><p><a href="https://www.liaofuzhan.com/posts/507826828.html" class="LinkCard">Hexo NexT 主题移动端样式适配</a></p><h4 id="Ad-units"><a href="#Ad-units" class="headerlink" title="Ad units"></a>Ad units</h4><p>可以根据网站布局，自己选择合适的广告展示位，<code>Google AdSense</code> 提供三种固定的广告位：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/23/2.jpg" alt="n1QuMn.png"></p><blockquote><p>Display ad：定制后，可放于网站侧栏、文章正文之外的地方<br>In-feed ads：这个说是可以放在文章列表之间，具体的没试过。<br>In-article ads：可嵌入每篇文章正文内部（在文章正文内引用广告代码）</p></blockquote><p>我现在使用的第一种：<code>Display ad</code>，选择后使用的是<strong>默认配置</strong>，然后得到如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="keyword">async</span> src=<span class="string">"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;!-- 侧边栏广告 --&gt;</span></span><br><span class="line"><span class="regexp">&lt;ins class="adsbygoogle"</span></span><br><span class="line"><span class="regexp">     style="display:block"</span></span><br><span class="line"><span class="regexp">     data-ad-client="ca-pub-2723999557244339"</span></span><br><span class="line"><span class="regexp">     data-ad-slot="8502308415"</span></span><br><span class="line"><span class="regexp">     data-ad-format="auto"</span></span><br><span class="line"><span class="regexp">     data-full-width-responsive="true"&gt;&lt;/i</span>ns&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">     (adsbygoogle = <span class="built_in">window</span>.adsbygoogle || []).push(&#123;&#125;);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><ol><li><p>在 <code>next/layout/_custom/</code> 目录下，新建 <code>google_adsense.swig</code> 文件，拷贝如上代码。</p></li><li><p>在 <code>next/layout/_macro/sidebar.swig</code> 侧栏中，选择要加广告的位置，比如我是加在 <code>theme.sidebar.b2t</code> 下方：</p></li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include <span class="string">'../_custom/google_adsense.swig'</span> %&#125;</span><br></pre></td></tr></table></figure></div><ol start="3"><li>在 <code>next/layout/_partials/comments.swig</code> 评论底部加入广告：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 评论区谷歌广告 --&gt;</span><br><span class="line">&#123;% include <span class="string">'../_custom/google_adsense.swig'</span> %&#125;</span><br></pre></td></tr></table></figure></div><p>加完之后，部署上线，最后的看到的效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/23/3.jpg" alt="n1QheP.png"></p><p>这里只在<strong>侧栏</strong>和<strong>评论区</strong>加了广告，若是想在地方也加上，可在对应位置引入即可。</p><p>有关<code>广告单元</code>的其他问题，<a href="https://support.google.com/adsense/answer/9183549?hl=en&ref_topic=9183242#" target="_blank" rel="noopener">参考这里</a></p><h3 id="广告条款"><a href="#广告条款" class="headerlink" title="广告条款"></a>广告条款</h3><p>Google 也会根据几种方式和数据判断广告点击是否作弊，从而<strong>注销你的账号</strong>：</p><ol><li>作弊广告点击者的 IP 地址与你 Adsense 账户登录 IP 地址相同</li><li>作弊广告点击的 CTR 数据太高</li><li>作弊广告点击者的 IP 地址来自同一个地理区域</li><li>根据 Cookies 判断作弊 Adsense 广告点击</li><li>作弊广告点击者页面停留时间太短</li><li>直接访问者的广告点击率过高</li><li>流量小但广告点击率高</li><li>在网页上用文字提示请求鼓动点击广告</li></ol><p>参考：<br><a href="https://support.google.com/adsense/answer/7003627?hl=en" target="_blank" rel="noopener">Google AdSence Policy center</a><br><a href="https://darylliu.github.io/archives/6a1f6623.html" target="_blank" rel="noopener">Daryl’s Blog</a><br><a href="https://blog.csdn.net/stormdony/article/details/85608944" target="_blank" rel="noopener">Hexo接入Google adsense广告</a></p><blockquote><p>想知道自己是不是违规了，可以在<strong>政策中心</strong>进行查看：</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/23/4.jpg" alt></p><p>到此，接入 <code>Google AdSense</code> 已完成。</p><p>说完了放广告，最后介绍一款不错的<strong>广告拦截</strong>插件：<code>AdBlock</code>，可在<strong><a href="https://chrome.google.com/webstore/detail/adblock/gighmmpiobklfepjocnamgkkbiglidom" target="_blank" rel="noopener">Chrome网上应用店</a></strong>下载</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> Google AdSense </tag>
            
            <tag> Google </tag>
            
            <tag> 广告 </tag>
            
            <tag> 拦截 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NexT主题之LeanCloud切换国际版</title>
      <link href="/posts/554801533.html"/>
      <url>/posts/554801533.html</url>
      
        <content type="html"><![CDATA[<p>LeanCloud 分为国内版和国际版, 虽然说功能都是大同小异的，不过对于实名认证这件事做法却大不一样。国内版需要身份证实名，并且需要支付宝或银行卡进行辅助验证。而国际版只需验证邮箱和手机号即可使用。<a href="https://leancloudblog.com/mandatory-domain-config/" target="_blank" rel="noopener">8月5号消息</a>：国内版还需要绑定自己的域名，总之限制多多，所以就有很多人转向了国际版。</p><a id="more"></a><p>PS：有关 LeanCloud 实现文章阅读量、文章排行榜、Valine 评论功能的。可参考这篇文章：</p><p><a href="https://www.liaofuzhan.com/posts/781439527.html" class="LinkCard">NexT 文章阅读量排行（热榜）功能</a></p><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>在讲解切换的步骤之前，说一下我本地环境：<font color="yellow;"> Hexo: 3.9.0 &emsp; NexT：5.1.4</font></p><p>使用hexo v命令可查看当前hexo版本。主题配置文件中的version字段即所使用的主题版本</p><blockquote><p>Tips：若LeanCloud中没有数据，以下导出导入步骤可略过！</p></blockquote><h4 id="数据导出"><a href="#数据导出" class="headerlink" title="数据导出"></a>数据导出</h4><p>由于之前使用 Leancloud 中国版一段时间，已经存了部分数据了，所以需要导出，然后倒入国际版 Leancloud 中去。</p><p>导出步骤如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/24/1.jpg" alt="导出步骤图"></p><p>“限定导出数据起止时间”和“限定 class” 可以不选，则导出全部数据。我这只有三个 class 有数据，时间不长，所以按需导出了。</p><p>然后你<strong>绑定的邮箱账号</strong>就会收到邮件，点击给出的地址下载即可，默认是 <strong>tar.gz</strong> 文件，解压后得到一个个的 <strong>json</strong> 文件。</p><p>导出需要注意右上角的提示：“You can’t export data after 12:00 pm.”</p><h4 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h4><p>登录<a href="https://console.leancloud.app/applist.html#/apps" target="_blank" rel="noopener">leancloud国际版</a>，进入控制台，操作步骤如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/24/2.jpg" alt="n1QTJg.png"></p><p>点击2然后“数据导入”：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/24/3.jpg" alt></p><p>填写要导入的 “Class 名称”，然后“选择数据文件”，点击“导入”，等待导入完成。其它的 Class 重复同样的操作即可。</p><p>部分Class介绍：</p><blockquote><p>_User：用户数据表， _若此表共享，不同应用之间可打通帐户，实现相互注册和登录。<br>Comment：Valine 评论系统所保存的用户评论信息，包括昵称、邮箱、评论内容等信息。<br>Counter：保存单篇文章阅读量，基于此可实现排行榜功能。</p></blockquote><h4 id="代码整合问题"><a href="#代码整合问题" class="headerlink" title="代码整合问题"></a>代码整合问题</h4><p>网上也有 leancloud 切换国际版的文章，做法是<strong>升级 next</strong> 版本（高版本修改过 leancloud 相关代码，不存在以上切换的问题）。</p><p>不过我没有这么做，本地next主题5.1.4，升级高版本会有太多不可预期的因素了，样式什么的肯定会错乱。已经在这个版本上改动太多东西了，不想再重新来过。。所以还是选择<strong>保守</strong>的做法。</p><p>先记录一下我切换过程中遇到的问题，然后贴上解决方案。（如果你 next 是 5.1.4 这个版本，你可能也会遇到这些问题）</p><h5 id="问题-1"><a href="#问题-1" class="headerlink" title="问题 1"></a>问题 1</h5><p>不是要切换 LC 嘛，直接找到配置的地方，将主题配置文件中的 leancloud_visitors 下的 <code>appid</code> 和 <code>appkey</code> 替换成国际版中新建的应用 Key，做完这个 hexo 三连，报错了：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JSON"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">"code"</span>:<span class="number">403</span>,<span class="attr">"error"</span>:<span class="string">"Access denied by api domain white list.The request origin header is 'null'."</span>&#125;</span><br></pre></td></tr></table></figure></div><p>报错的请求的 URL 为：<a href="https://us.leancloud.cn/1.1/classes/Comment?redirectByAPI=cn" target="_blank" rel="noopener">https://us.leancloud.cn/1.1/classes/Comment?redirectByAPI=cn</a></p><p>官方给的解释：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">403</span><br><span class="line">当应用在控制台中的相关服务选项未打开，如 Class 关闭了权限，或是 User 缺失了 session 信息等情况下，云端会统一地返回 403 错误码及不同的错误信息，代表当前请求因权限不够而被拒。例如：</span><br><span class="line">信息 - Forbidden to read/write by class permissions</span><br><span class="line">含义 - 操作被禁止，因为 Class 表没有打开「读」或者「写」的权限。进入 控制台 &gt; 存储，点击相应的 Class，从右侧选择 其他 下拉菜单，进入 权限管理 来调整。</span><br><span class="line">信息 - The user cannot be altered by a client without the session.</span><br><span class="line">含义 - 用户没有登录，无法修改用户信息。</span><br></pre></td></tr></table></figure></div><p>参考这里：</p><p><a href="https://leancloud.cn/docs/error_code.html#hash1392106" class="LinkCard" target="_blank" rel="noopener">错误码详解 - LeanCloud 文档</a></p><p>Next 官方也有类似是 <a href="https://github.com/theme-next/hexo-theme-next/pull/381" target="_blank" rel="noopener">PR 修复</a>：不过是解决和 Valine 冲突的，好像并不能解决我们现在的问题。</p><p>网上有贴了<a href="https://forum.avoscloud.com/t/access-denied-by-api-domain-white-list-the-request-origin-header-is-null/18607" target="_blank" rel="noopener">解决方案</a>：建议更新<strong>av-min.js</strong>。</p><p>找到本地的 <code>lean-analytics.swig</code>，位于 <code>next/layout/_third-party/analytics/</code> 目录下，找到相关的 js 引用，5.1.4 版本的 next 引用的如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p>版本还是很早前的，试着替换成</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn1.lncld.net/static/js/3.10.0/av-min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><p>不过问题依然没有解决。。接着出现<strong>问题2</strong></p><h5 id="问题-2"><a href="#问题-2" class="headerlink" title="问题 2"></a>问题 2</h5><p>替换应用的 js 版本后，出现了新的问题：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Uncaught <span class="built_in">TypeError</span>: Cannot redefine property: applicationId</span><br><span class="line">    at <span class="built_in">Function</span>.defineProperty (<span class="xml"><span class="tag">&lt;<span class="name">anonymous</span>&gt;</span>)</span></span><br><span class="line"><span class="xml">    at init.js?ddd7:165 Uncaught TypeError: Cannot redefine property: applicationId</span></span><br><span class="line">    at Function.defineProperty (&lt;anonymous&gt;)</span><br><span class="line">    at init.js?ddd7:165</span><br><span class="line">    at Array.forEach (&lt;anonymous&gt;)</span><br><span class="line">    at Object.&lt;anonymous&gt; (init.js?ddd7:174)</span><br><span class="line">    at e (bootstrap bacf8240e97c4b30b3d3?b629:19)</span><br><span class="line">    at Object.&lt;anonymous&gt; (index.js?9552:19)</span><br><span class="line">    at e (bootstrap bacf8240e97c4b30b3d3?b629:19)</span><br><span class="line">    at bootstrap bacf8240e97c4b30b3d3?b629:65</span><br><span class="line">    at bootstrap bacf8240e97c4b30b3d3?b629:65</span><br><span class="line">    at universalModuleDefinition?5ca6:9</span><br></pre></td></tr></table></figure></div><p>多方查看无果后，心想应该是替换了新的 js 与现有主题已有的代码逻辑不符。因为主题中在 <code>lean-analytics.swig</code> 已经给我们集成好了相关的 leancloud 代码。</p><p>查看 github 相关的 next 仓库发现，新版的 <a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT v6 and v7</a> 已和 <a href="https://github.com/iissnan/hexo-theme-next" target="_blank" rel="noopener">v5.1.4</a> 的剥离，老版本不再更新维护。</p><p>好奇的我比较了不同版本间的 <code>lean-analytics.swig</code> 文件差异，发现 <strong><mark>v6.4.1</mark></strong> 版本下的这个文件被修改过了，而且改动很大，改动维持到 <strong><mark>v7.2.0</mark></strong> 没怎么变。</p><p>在 <strong><mark>v7.3.0</mark></strong> 的时候又做过一些修改，主要是一些标签符号变动。看到这里，是不是突然间豁然开朗了~</p><p><a href="https://github.com/theme-next/hexo-theme-next/blob/v6.4.1/layout/_third-party/analytics/lean-analytics.swig" class="LinkCard" target="_blank" rel="noopener">lean-analytics.swig</a><br><a href="https://github.com/theme-next/hexo-theme-next/blob/v7.3.0/layout/_macro/post.swig" class="LinkCard" target="_blank" rel="noopener">post.swig</a></p><p>以上就是我在切换过程中遇到的俩问题。</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p>机智的我就把针对 <code>lean-analytics.swig</code> 变动的代码拷贝到了本地。</p><p>我是拷 <strong><mark>v6.4.1</mark></strong> 的，拷贝版本介于 <strong><mark>v6.4.1</mark></strong> ~ <strong><mark>v7.2.0</mark></strong> 的都可以（拷贝 <mark>v7.3.0</mark> 时，代码运行起来后还是有点问题）。我对比了这好几个版本，发现没啥变动的，大家可以对比一下。</p><p>附上完整的拷贝代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.leancloud_visitors.enable and !theme.valine.visitor %&#125;</span><br><span class="line">  &#123;# custom analytics part create by xiamo; edited by LEAFERx #&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    &#123;% if page.layout === &apos;post&apos; %&#125;</span><br><span class="line">    function addCount(Counter) &#123;</span><br><span class="line">      var $visitors = $(&apos;.leancloud_visitors&apos;);</span><br><span class="line">      var url = $visitors.attr(&apos;id&apos;).trim();</span><br><span class="line">      var title = $visitors.attr(&apos;data-flag-title&apos;).trim();</span><br><span class="line"></span><br><span class="line">      Counter(&apos;get&apos;, &apos;/classes/Counter&apos;, &#123; where: JSON.stringify(&#123; url &#125;) &#125;)</span><br><span class="line">        .done(function(&#123; results &#125;) &#123;</span><br><span class="line">          if (results.length &gt; 0) &#123;</span><br><span class="line">            var counter = results[0];</span><br><span class="line">            &#123;% if theme.leancloud_visitors.betterPerformance %&#125;</span><br><span class="line">              var $element = $(document.getElementById(url));</span><br><span class="line">              $element.find(&apos;.leancloud-visitors-count&apos;).text(counter.time + 1);</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">            Counter(&apos;put&apos;, &apos;/classes/Counter/&apos; + counter.objectId, JSON.stringify(&#123; time: &#123; &apos;__op&apos;: &apos;Increment&apos;, &apos;amount&apos;: 1 &#125; &#125;))</span><br><span class="line">            &#123;% if not theme.leancloud_visitors.betterPerformance %&#125;</span><br><span class="line">              .done(function() &#123;</span><br><span class="line">                var $element = $(document.getElementById(url));</span><br><span class="line">                $element.find(&apos;.leancloud-visitors-count&apos;).text(counter.time + 1);</span><br><span class="line">              &#125;)</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">              .fail(function (&#123; responseJSON &#125;) &#123;</span><br><span class="line">                console.log(&apos;Failed to save Visitor num, with error message: &apos; + responseJSON.error);</span><br><span class="line">              &#125;)</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            &#123;% if theme.leancloud_visitors.security %&#125;</span><br><span class="line">              var $element = $(document.getElementById(url));</span><br><span class="line">              $element.find(&apos;.leancloud-visitors-count&apos;).text(&apos;Counter not initialized! More info at console err msg.&apos;);</span><br><span class="line">              console.error(&apos;ATTENTION! LeanCloud counter has security bug, see how to solve it here: https://github.com/theme-next/hexo-leancloud-counter-security. \n However, you can still use LeanCloud without security, by setting `security` option to `false`.&apos;);</span><br><span class="line">            &#123;% else %&#125;</span><br><span class="line">              Counter(&apos;post&apos;, &apos;/classes/Counter&apos;, JSON.stringify(&#123; title: title, url: url, time: 1 &#125;))</span><br><span class="line">                .done(function() &#123;</span><br><span class="line">                  var $element = $(document.getElementById(url));</span><br><span class="line">                  $element.find(&apos;.leancloud-visitors-count&apos;).text(1);</span><br><span class="line">                &#125;)</span><br><span class="line">                .fail(function() &#123;</span><br><span class="line">                  console.log(&apos;Failed to create&apos;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .fail(function (&#123; responseJSON &#125;) &#123;</span><br><span class="line">          console.log(&apos;LeanCloud Counter Error: &apos; + responseJSON.code + &apos; &apos; + responseJSON.error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    function showTime(Counter) &#123;</span><br><span class="line">      var entries = [];</span><br><span class="line">      var $visitors = $(&apos;.leancloud_visitors&apos;);</span><br><span class="line"></span><br><span class="line">      $visitors.each(function() &#123;</span><br><span class="line">        entries.push( $(this).attr(&apos;id&apos;).trim() );</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      Counter(&apos;get&apos;, &apos;/classes/Counter&apos;, &#123; where: JSON.stringify(&#123; url: &#123; &apos;$in&apos;: entries &#125; &#125;) &#125;)</span><br><span class="line">        .done(function(&#123; results &#125;) &#123;</span><br><span class="line">          var COUNT_CONTAINER_REF = &apos;.leancloud-visitors-count&apos;;</span><br><span class="line"></span><br><span class="line">          if (results.length === 0) &#123;</span><br><span class="line">            $visitors.find(COUNT_CONTAINER_REF).text(0);</span><br><span class="line">            return;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          for (var i = 0; i &lt; results.length; i++) &#123;</span><br><span class="line">            var item = results[i];</span><br><span class="line">            var url = item.url;</span><br><span class="line">            var time = item.time;</span><br><span class="line">            var element = document.getElementById(url);</span><br><span class="line"></span><br><span class="line">            $(element).find(COUNT_CONTAINER_REF).text(time);</span><br><span class="line">          &#125;</span><br><span class="line">          for (var i = 0; i &lt; entries.length; i++) &#123;</span><br><span class="line">            var url = entries[i];</span><br><span class="line">            var element = document.getElementById(url);</span><br><span class="line">            var countSpan = $(element).find(COUNT_CONTAINER_REF);</span><br><span class="line">            if (countSpan.text() == &apos;&apos;) &#123;</span><br><span class="line">              countSpan.text(0);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .fail(function (&#123; responseJSON &#125;) &#123;</span><br><span class="line">          console.log(&apos;LeanCloud Counter Error: &apos; + responseJSON.code + &apos; &apos; + responseJSON.error);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    $(function() &#123;</span><br><span class="line">      $.get(&apos;https://app-router.leancloud.cn/2/route?appId=&apos; + &apos;&#123;&#123; theme.leancloud_visitors.app_id &#125;&#125;&apos;)</span><br><span class="line">        .done(function(&#123; api_server &#125;) &#123;</span><br><span class="line">          var Counter = function(method, url, data) &#123;</span><br><span class="line">            return $.ajax(&#123;</span><br><span class="line">              method: method,</span><br><span class="line">              url: &apos;https://&apos; + api_server + &apos;/1.1&apos; + url,</span><br><span class="line">              headers: &#123;</span><br><span class="line">                &apos;X-LC-Id&apos;: &apos;&#123;&#123; theme.leancloud_visitors.app_id &#125;&#125;&apos;,</span><br><span class="line">                &apos;X-LC-Key&apos;: &apos;&#123;&#123; theme.leancloud_visitors.app_key &#125;&#125;&apos;,</span><br><span class="line">                &apos;Content-Type&apos;: &apos;application/json&apos;,</span><br><span class="line">              &#125;,</span><br><span class="line">              data: data</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;;</span><br><span class="line">          &#123;% if page.layout === &apos;post&apos; %&#125;</span><br><span class="line">            const localhost = /http:\/\/(localhost|127.0.0.1|0.0.0.0)/;</span><br><span class="line">            if (localhost.test(document.URL)) return;</span><br><span class="line">            addCount(Counter);</span><br><span class="line">          &#123;% else %&#125;</span><br><span class="line">            if ($(&apos;.post-title-link&apos;).length &gt;= 1) &#123;</span><br><span class="line">              showTime(Counter);</span><br><span class="line">            &#125;</span><br><span class="line">          &#123;% endif %&#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><p>接着 <code>hexo 三连</code> 后，访问首页已经有效果了，每篇文章的阅读数都有了，而且排行榜的数据也正常显示。接着点开一篇文章，阅读数没有显示：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/24/4.jpg" alt></p><p>刚开始以为是浏览器缓存什么的，然而<strong>刷新 N 次、重启 N 次</strong>还是无济于事，内心是崩溃的。😭</p><p>作为一名<del><em>合格</em></del><code>Java</code> 大（cai）师（niao），怎么会没辙呢。。代码读起来~</p><p>终于，在刚才新改的 <code>lean-analytics.swig</code> 文件中，找到如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> page.layout === <span class="string">'post'</span> %&#125;</span><br><span class="line">   <span class="keyword">const</span> localhost = <span class="regexp">/http:\/\/(localhost|127.0.0.1|0.0.0.0)/</span>;</span><br><span class="line">   <span class="keyword">if</span> (localhost.test(<span class="built_in">document</span>.URL)) <span class="keyword">return</span>;</span><br><span class="line">   addCount(Counter);</span><br><span class="line">&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">   <span class="keyword">if</span> ($(<span class="string">'.post-title-link'</span>).length &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">     showTime(Counter);</span><br><span class="line">   &#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><p>第二个 <code>if</code> 判断，当是 <strong><code>localhost</code></strong> 的时候，给 <code>return</code> 掉了。</p><p>代码中的 <code>addCount</code> 是增加文章阅读数的方法。也是阅读数赋值的地方。前面 return 了，这里当然不能执行了，所以本地阅读数就显示不出来了。。</p><p>这代码的目的，我想应该是为了忽略本地文章调试时所增加的阅读量而做的。如果要本地也开启文章阅读数，不考虑阅读数量因此增加的话，<strong>注释</strong>这行代码即可</p><div class="note info"><p>注意一下第一个 <code>if</code> 判断。有时候你在新建文章的时候，文章开头的 formatter 可能是 <code>layout: hexo</code>，这时候文章阅读数也是不会显示。。我就遇到这种情况，其他文章都正常，就某两篇有问题，查来查去发现是这个 layout 的事。。。</p></div><p><mark>另外</mark>：</p><p>1、Valine 评论系统切换，只要在此基础上直接替换其所使用的 <strong><code>appid</code></strong> 和 <strong><code>appkey</code></strong> 即可。</p><p>2、排行榜（热榜）功能，只需要修改其对应的 <code>index.md</code> 文件(之前引入的 js 已是新版)：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn1.lncld.net/static/js/3.0.4/av-min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;AV.initialize("你的国际版leancloud App ID", "你的国际版leancloud Key");&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></div><p>接着 <code>hexo 三连</code>，效果已经有了，部署正式环境，<strong>文章阅读数、排行榜、Valine</strong> 都正常，至此切换 LeanCloud 国际版已完成。</p><h4 id="可选配置：hexo-leancloud-counter-security-插件"><a href="#可选配置：hexo-leancloud-counter-security-插件" class="headerlink" title="可选配置：hexo-leancloud-counter-security 插件"></a>可选配置：hexo-leancloud-counter-security 插件</h4><p>背景：NexT 使用的 Leancloud 访客统计插件存在重大安全漏洞，拥有不良企图的人利用该漏洞可随意更改访客数量或一定程度上增删数据库记录。</p><p>该插件主要是为了修复 LeanCloud 统计插件安全漏洞</p><p><a href="https://github.com/theme-next/hexo-leancloud-counter-security" class="LinkCard" target="_blank" rel="noopener">hexo-leancloud-counter-security</a></p><p><a href="https://leaferx.online/2018/02/11/lc-security/" class="LinkCard" target="_blank" rel="noopener">Leancloud访客统计插件重大安全漏洞修复指南</a></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><p>总结一下，关于 Leancloud 切换国际版，针对 <code>NexT v5.1.4</code> 版本，其实就是升级了其依赖的 leancloud 的 JS 版本，解决了低版本下代码不兼容的问题。</p><p>版本参见：</p><p><a href="https://releases.leanapp.cn/#/" class="LinkCard" target="_blank" rel="noopener">LeanCloud.releases</a></p><p>部署后，还发现一个 <strong><code>suprise</code></strong>：手机端<strong>热榜</strong>、<strong>文章阅读数</strong>都能正常显示了。</p><p>因为我做了一些<strong>手机端样式适配</strong>（可参考我的<a href="https://www.liaofuzhan.com/posts/507826828.html">这篇文章</a>），发现这些功能并不正常，不知道是不是 Leancloud 这样在手机端访问的一些问题。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 排行榜 </tag>
            
            <tag> 阅读量 </tag>
            
            <tag> LeanCloud </tag>
            
            <tag> 实名认证 </tag>
            
            <tag> Valine </tag>
            
            <tag> 国际 </tag>
            
            <tag> 切换 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT主题之代码块Mac Panel特效</title>
      <link href="/posts/4114783453.html"/>
      <url>/posts/4114783453.html</url>
      
        <content type="html"><![CDATA[<p>偶然间发现一款不错的代码块样式，类似 Mac 的面板效果。能设置阴影效果和实现文本编辑功能，不过文本只存在浏览器页面上，不会真正保存。配置的方式也很简单，觉得不错的朋友可以试一下。</p><a id="more"></a><p>效果截图：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/25/1.gif" alt="n1QSxA.gif"></p><h3 id="引入-js"><a href="#引入-js" class="headerlink" title="引入 js"></a>引入 js</h3><p>这里新建两个 js 文件 <code>events.js</code> 和 <code>codeblock.js</code>，路径位于 <code>next/scripts/</code> 包下。</p><h4 id="events-js-代码："><a href="#events-js-代码：" class="headerlink" title="events.js 代码："></a>events.js 代码：</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVASCRIPT"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mac Panel 效果代码块相关</span></span><br><span class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</span><br><span class="line"></span><br><span class="line"><span class="comment">// new 后自动打开编辑器</span></span><br><span class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">  exec(<span class="string">'open -a MacDown '</span> + data.path);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></div><p>这个 js 会在你敲 <code>hexo new xxx</code> 命令后，调用本地的 MarkDown 编辑器打开新建的 md 文件 <code>xxx</code></p><h4 id="codeblock-js-代码："><a href="#codeblock-js-代码：" class="headerlink" title="codeblock.js 代码："></a>codeblock.js 代码：</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVASCRIPT"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// mac Panel 效果代码块相关</span></span><br><span class="line"><span class="keyword">var</span> attributes = [</span><br><span class="line">  <span class="string">'autocomplete="off"'</span>,</span><br><span class="line">  <span class="string">'autocorrect="off"'</span>,</span><br><span class="line">  <span class="string">'autocapitalize="off"'</span>,</span><br><span class="line">  <span class="string">'spellcheck="false"'</span>,</span><br><span class="line">  <span class="string">'contenteditable="true"'</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> attributesStr = attributes.join(<span class="string">' '</span>)</span><br><span class="line"></span><br><span class="line">hexo.extend.filter.register(<span class="string">'after_post_render'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">while</span> (<span class="regexp">/&lt;figure class="highlight ([a-zA-Z]+)"&gt;.*?&lt;\/figure&gt;/</span>.test(data.content)) &#123;</span><br><span class="line">    data.content = data.content.replace(<span class="regexp">/&lt;figure class="highlight ([a-zA-Z]+)"&gt;.*?&lt;\/figure&gt;/</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> language = <span class="built_in">RegExp</span>.$<span class="number">1</span> || <span class="string">'plain'</span></span><br><span class="line">      <span class="keyword">var</span> lastMatch = <span class="built_in">RegExp</span>.lastMatch</span><br><span class="line">      lastMatch = lastMatch.replace(<span class="regexp">/&lt;figure class="highlight /</span>, <span class="string">'&lt;figure class="iseeu highlight /'</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="string">'&lt;div class="highlight-wrap"'</span> + attributesStr + <span class="string">'data-rel="'</span> + language.toUpperCase() + <span class="string">'"&gt;'</span> + lastMatch + <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> data</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></div><h3 id="引入-css"><a href="#引入-css" class="headerlink" title="引入 css"></a>引入 css</h3><p>在 <code>next/source/css/_common/components/highlight/</code> 目录下新建 <code>macPanel.styl</code> 文件，内容如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// mac Panel 效果代码块相关</span><br><span class="line"><span class="selector-class">.highlight-wrap</span><span class="selector-attr">[data-rel]</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">5px</span>;</span><br><span class="line">  //box-shadow: 0 10px 30px 0px rgba(0, 0, 0, 0.4);</span><br><span class="line">  <span class="selector-tag">box-shadow</span><span class="selector-pseudo">:18px</span> 18<span class="selector-tag">px</span> 15<span class="selector-tag">px</span> 0<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.4</span>)</span><br><span class="line">  <span class="selector-tag">margin</span>: 35<span class="selector-tag">px</span> 0;</span><br><span class="line">  <span class="selector-pseudo">::-webkit-scrollbar</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-pseudo">::-webkit-scrollbar-track</span> &#123;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.3</span>);</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="selector-pseudo">::-webkit-scrollbar-thumb</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">6px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;<span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">content</span>: <span class="built_in">attr</span>(data-rel);</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">38px</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">38px</span>;</span><br><span class="line">    //background: #21252b;</span><br><span class="line">    <span class="selector-tag">background</span>: <span class="selector-id">#108414de</span>;</span><br><span class="line">    <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span><br><span class="line">    <span class="selector-tag">font-size</span>: 16<span class="selector-tag">px</span>;</span><br><span class="line">    //position: absolute;</span><br><span class="line">    <span class="selector-tag">top</span>: 0;</span><br><span class="line">    <span class="selector-tag">left</span>: 0;</span><br><span class="line">    <span class="selector-tag">width</span>: 100%;</span><br><span class="line">    //font-family: 'Source Sans Pro', sans-serif;</span><br><span class="line">    <span class="selector-tag">font-weight</span>: <span class="selector-tag">bold</span>;</span><br><span class="line">    <span class="selector-tag">padding</span>: 0<span class="selector-tag">px</span> 80<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">text-indent</span>: 15<span class="selector-tag">px</span>;</span><br><span class="line">    <span class="selector-tag">float</span>: <span class="selector-tag">left</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">' '</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">-webkit-border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fc625d</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">-webkit-box-shadow</span>: <span class="number">20px</span> <span class="number">0px</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0px</span> <span class="number">#35cd4b</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">20px</span> <span class="number">0px</span> <span class="number">#fdbc40</span>, <span class="number">40px</span> <span class="number">0px</span> <span class="number">#35cd4b</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>此 css 是根据我本地的样式做过调整，注释的代码为原有的，根据需要调整样式即可。</p><h3 id="配置引用"><a href="#配置引用" class="headerlink" title="配置引用"></a>配置引用</h3><p>在 <code>next/source/css/_common/components/highlight/highlight.styl</code> 中引入刚才新建的 <code>macPanel.styl</code>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@require</span> <span class="string">"macPanel"</span></span><br></pre></td></tr></table></figure></div><p>配置在文件的顶部位置即可。</p><p>到此 Mac Panel 配置完成，根据需要可调整主题配置文件中的 <code>highlight_theme</code>，选择自己喜欢的样式。</p><h3 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h3><p>如果在配置完毕后，hexo 启动报如下错误：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/25/2.jpg" alt="n1QPqP.png"></p><p>可将**站点配置文件里的 <code>highlight</code> 属性 <code>auto_detect</code> 改成 <code>false</code> ：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">highlight:</span><br><span class="line">   enable: true</span><br><span class="line">   line_number: true</span><br><span class="line"><span class="deletion">-  auto_detect: true</span></span><br><span class="line"><span class="addition">+  auto_detect: false</span></span><br><span class="line">   tab_replace:</span><br></pre></td></tr></table></figure></div><p>参考：</p><p><a href="https://github.com/hexojs/hexo/issues/2380" class="LinkCard" target="_blank" rel="noopener">TypeError: Cannot set property ‘lastIndex’ of undefined</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 代码 </tag>
            
            <tag> Mac Panel </tag>
            
            <tag> Mac </tag>
            
            <tag> 样式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表白神器—JS生成的玫瑰花</title>
      <link href="/posts/2857466830.html"/>
      <url>/posts/2857466830.html</url>
      
        <content type="html"><![CDATA[<p>在整理自己的电脑时，无意间发现了一个文件夹，最后修改时间停留在2015年。不知在哪看到的这款特效，觉得很炫就下载留存了，只有简单的一个文件：<strong>rose.html</strong>，已上传github，欢迎下载。（侵删)</p><a id="more"></a><p>展示的效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/26/1.gif" alt="image"></p><p><strong>Github下载地址：</strong></p><p><a href="https://github.com/leafjame/Surprise" class="LinkCard" target="_blank" rel="noopener">表白神器—JS生成的玫瑰花</a></p><p>最开始的时候，页面里只有一朵玫瑰花。也就是在几年前，我在里面加了其他的元素，最终发给女神，给惊呆了。</p><p>代码很简单，只依赖jQuery。所加功能都是自己刚接触前端不久，学着加上去的，现在看觉得好low。。左上角的歌曲播放，当时要做上一曲、下一曲的，可惜没有实现，只做到随机播放，依赖于刷新网页。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVASCRIPT"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(Sys.ie)&#123;</span><br><span class="line">  <span class="keyword">var</span> song = getFileName().split(<span class="string">"|"</span>);</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;song.length;i++)&#123;</span><br><span class="line">    <span class="keyword">var</span> indexSong = song[i].lastIndexOf(<span class="string">"\\"</span>);</span><br><span class="line">    song[i] = song[i].substring(indexSong+<span class="number">1</span>,song[i].length);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//得到播放曲目下标</span></span><br><span class="line">  songIndex = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * song.length);</span><br><span class="line">  $(<span class="string">"#audio_id"</span>).attr(<span class="string">"src"</span>,song[songIndex]);</span><br><span class="line">  <span class="comment">//console.log(parseInt(Math.random() * song.length));</span></span><br><span class="line">  <span class="comment">//Math.random()是令系统随机选取大于等于 0.0 且小于 1.0 的伪随机 double 值，是Java语言常用代码。</span></span><br><span class="line">  <span class="comment">//例如：var a:Number=Math.random()*2+1，设置一个随机1到3的变量。</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="comment">//固定歌曲 </span></span><br><span class="line">  <span class="keyword">var</span> StaticSong = <span class="keyword">new</span> <span class="built_in">Array</span>( <span class="string">'张杰-My Sunshine.mp3'</span>, <span class="string">'朴树-平凡之路.mp3'</span>, <span class="string">'Westlife-The Rose.mp3'</span>, <span class="string">'徐良-月光.mp3'</span>, <span class="string">'许嵩-七夕.mp3'</span>, <span class="string">'徐良-红装.mp3'</span>,</span><br><span class="line">    <span class="string">'许嵩-弹指一挥间.mp3'</span>, <span class="string">'许嵩-惊鸿一面.mp3'</span>, <span class="string">'许嵩-山水之间.mp3'</span>, <span class="string">'降央卓玛-西海情歌.mp3'</span>, <span class="string">'降央卓玛-雨中飘荡的回忆.mp3'</span> );　<span class="comment">//创建一个数组并赋值</span></span><br><span class="line">  $(<span class="string">"#audio_id"</span>).attr(<span class="string">"src"</span>,StaticSong[<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * StaticSong.length)]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//回显曲目</span></span><br><span class="line">$(<span class="string">"#song_title"</span>).html($(<span class="string">"#audio_id"</span>).attr(<span class="string">"src"</span>));</span><br></pre></td></tr></table></figure></div><blockquote><p>歌曲以前写死的。。针对IE和其他浏览器做了测试</p></blockquote><p>找了两首诗，其中一首是网上直接能搜到的，另一首是拼凑的藏头诗，外加一些变色效果。</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">日高闲步下堂阶</span><br><span class="line">细草春莎没绣鞋</span><br><span class="line">折得玫瑰花一朵</span><br><span class="line">凭君簪向凤凰钗</span><br></pre></td></tr></table></figure></div><p>这首诗悬浮在玫瑰花正上方</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/26/2.jpg" alt></p><p>首尾各加了一些游动文字效果，简单的html标签加js实现</p><p>页面最右侧有分享功能，当时做这个是为了方便女神分享到朋友圈，不过由于是本地文件，效果不是很理想。</p><p>有兴趣的小伙伴，可尝试着改成你们喜欢的样子哦~</p><p>程序员的表白神器，你<strong>get</strong>到了吗~</p><p>欢迎讨论~</p>]]></content>
      
      
      <categories>
          
          <category> 神器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 特效 </tag>
            
            <tag> JS </tag>
            
            <tag> 歌曲 </tag>
            
            <tag> 藏头诗 </tag>
            
            <tag> 诗句 </tag>
            
            <tag> 程序员 </tag>
            
            <tag> 表白 </tag>
            
            <tag> 神器 </tag>
            
            <tag> 玫瑰花 </tag>
            
            <tag> 分享 </tag>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo-abbrlink生成唯一文章链接</title>
      <link href="/posts/4084686398.html"/>
      <url>/posts/4084686398.html</url>
      
        <content type="html"><![CDATA[<p>Hexo 在生成文章链接时，默认是按照年、月、日、标题来生成的，可以在站点配置文件中指定 <strong>new_post_name</strong> 的值。默认是 <strong>:year/:month/:day/:title</strong>，如果文章标题是中文的话，URL 链接是也会包含中文，生成的文章链接如下图所示：</p><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/27/1.jpg" alt="nO8Cef.png"></p><p>复制后的链接是一大堆字符串编码：</p><p><a href="http://localhost:4000/2019/08/13/tech/hexo/Hexo%20Next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%93%88%E6%9E%97%E6%91%87%E7%89%B9%E6%95%88/" target="_blank" rel="noopener">http://localhost:4000/2019/08/13/tech/hexo/Hexo%20Next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%93%88%E6%9E%97%E6%91%87%E7%89%B9%E6%95%88/</a></p><p>一种解决方案是：使用 <strong>hexo-permalink-pinyin</strong> 插件，将中文转英文，参考我的这篇文章：<a href="https://www.liaofuzhan.com/posts/781435405.html">Hexo NexT中文链接转拼音(关于中文md文件名的问题)</a></p><p>这样方案也存在一定的缺陷，比如修改了文章标题，重新 hexo 三连后，URL 就变了，以前的文章地址变成了 <code>404</code>。而且这样生成的 URL 层级也很深，不利于 SEO。</p><p>那能不能生成唯一不变的 URl 链接呢？答案是可以的，已经有人给实现了。这就是 <strong>hexo-abbrlink</strong> 插件，简单易用。</p><p>参考：</p><p><a href="https://github.com/Rozbo/hexo-abbrlink" class="LinkCard" target="_blank" rel="noopener">hexo-abbrlink</a></p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></div><div class="note danger"><p>执行此命令可能会不成功，提示你缺少相应的依赖，比如 babel-eslint、mini-css-extract-plugin、webpack-cli…<br>使用 npm 命令安装即可，比如 <code>npm install eslint@4.x babel-eslint@8 --save-dev</code></p></div><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>修改根目录站点配置文件 <code>config.yml</code>，改为：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">:posts/abbrlink.html</span>  <span class="comment"># 此处可以自己设置，也可以直接使用 :/abbrlink</span></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line"><span class="attr">alg:</span> <span class="string">crc32</span>   <span class="comment">#算法： crc16(default) and crc32</span></span><br><span class="line"><span class="attr">rep:</span> <span class="string">hex</span>     <span class="comment">#进制： dec(default) and hex</span></span><br></pre></td></tr></table></figure></div><p>生成的链接将会是这样的(官方样例)：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex</span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/66c8.html</span></span><br><span class="line"></span><br><span class="line">crc16 &amp; dec</span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/65535.html</span></span><br><span class="line">crc32 &amp; hex</span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/8ddf18fb.html</span></span><br><span class="line"></span><br><span class="line">crc32 &amp; dec</span><br><span class="line">https:<span class="comment">//post.zz173.com/posts/1690090958.html</span></span><br></pre></td></tr></table></figure></div><p>生成完后，原 md 文件的 Front-matter 内会增加 <code>abbrlink</code> 字段，值为生成的 ID 。这个字段确保了在我们修改了 Front-matter 内的标题 title 或创建日期 date 字段之后而不会改变链接地址。</p><p>hexo 三连试一下效果吧~(<em>^__^</em>)Y</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> abbrlink </tag>
            
            <tag> 链接 </tag>
            
            <tag> 唯一 </tag>
            
            <tag> 永久 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入理解HashMap底层原理</title>
      <link href="/posts/3311227319.html"/>
      <url>/posts/3311227319.html</url>
      
        <content type="html"><![CDATA[<p>HashMap作为Java集合类重要的元素之一，其蕴含的精妙代码设计，除了在工作中经常用到之外，也是面试中常见的考点。普通的程序员，可能仅仅能说出HashMap线程不安全，允许key、value为null，以及不要求线程安全时，效率上比HashTable要快一些。稍微好一些的，会对具体实现有过大概了解，能说出HashMap由数组+链表+RBT实现（JDK8），并了解HashMap的扩容机制。如果你有刨根问底的激情，那么你肯定想知道它具体是如何实现的。</p><a id="more"></a><p>本文将从下几个方面进行剖析：HashMap的结构、put方法、get方法、remove方法、resize方法。</p><div class="note info"><p>以下HashMap源码基于JDK 8</p></div><h3 id="HashMap结构"><a href="#HashMap结构" class="headerlink" title="HashMap结构"></a>HashMap结构</h3><p>JDK1.8 以前HashMap的实现是：<strong>数组+链表</strong></p><p>JDK1.8 开始HashMap的实现是：<strong>数组+链表+红黑树</strong></p><p>如下图：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/38/1.jpg" alt="nYFgHS.png"></p><p><strong>强烈推荐</strong>一个数据结构可视化的网站：</p><p><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" class="LinkCard" target="_blank" rel="noopener">Data Structure Visualizations</a></p><p>这里先了解HashMap的几个核心成员变量：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 默认初始容量16 （必须是2的倍数）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_INITIAL_CAPACITY = <span class="number">1</span> &lt;&lt; <span class="number">4</span>; <span class="comment">// aka 16 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  最大容量为2的30次方</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXIMUM_CAPACITY = <span class="number">1</span> &lt;&lt; <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认加载因子0.75（结合时间和空间效率考虑得到的）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">float</span> DEFAULT_LOAD_FACTOR = <span class="number">0.75f</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 树形阈值：JDK 1.8 新增的，当使用`树`而不是`列表`来作为桶时使用。必须比2大</span></span><br><span class="line"><span class="comment"> * （也就是：当put一个元素时，其链表长度达到8时将链表转换为红黑树。）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TREEIFY_THRESHOLD = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 非树形阈值：也是 1.8 新增的，扩容时分裂一个树形桶的阈值，要比TREEIFY_THRESHOLD小</span></span><br><span class="line"><span class="comment"> * （即：链表长度小于6时，红黑树会转成链表。）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> UNTREEIFY_THRESHOLD = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认的最小的扩容量64：桶可能是树的哈希表的最小容量。至少为4 * TREEIFY_THRESHOLD=32，即默认初始容量的2倍</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MIN_TREEIFY_CAPACITY = <span class="number">64</span>;</span><br></pre></td></tr></table></figure></div><p>为什么<strong>TREEIFY_THRESHOLD</strong>的默认值被设定为<strong>8</strong>？HashMap中有这样一段注释：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">* Because TreeNodes are about twice the size of regular nodes, we</span><br><span class="line">* use them only when bins contain enough nodes to warrant use</span><br><span class="line">* (see TREEIFY_THRESHOLD). <span class="function">And when they become too <span class="title">small</span> <span class="params">(due to</span></span></span><br><span class="line"><span class="function"><span class="params">* removal or resizing)</span> they are converted back to plain bins.  In</span></span><br><span class="line"><span class="function">* usages with well-distributed user hashCodes, tree bins are</span></span><br><span class="line"><span class="function">* rarely used.  Ideally, under random hashCodes, the frequency of</span></span><br><span class="line"><span class="function">* nodes in bins follows a Poisson distribution</span></span><br><span class="line"><span class="function">* <span class="params">(http://en.wikipedia.org/wiki/Poisson_distribution)</span> with a</span></span><br><span class="line"><span class="function">* parameter of about 0.5 on average <span class="keyword">for</span> the <span class="keyword">default</span> resizing</span></span><br><span class="line"><span class="function">* threshold of 0.75, although with a large variance because of</span></span><br><span class="line"><span class="function">* resizing granularity. Ignoring variance, the expected</span></span><br><span class="line"><span class="function">* occurrences of list size k <span class="title">are</span> <span class="params">(exp(<span class="number">-0.5</span>)</span> * <span class="title">pow</span><span class="params">(<span class="number">0.5</span>, k)</span> /</span></span><br><span class="line"><span class="function">* <span class="title">factorial</span><span class="params">(k)</span>). The first values are:</span></span><br><span class="line"><span class="function">*</span></span><br><span class="line"><span class="function">* 0:    0.60653066</span></span><br><span class="line"><span class="function">* 1:    0.30326533</span></span><br><span class="line"><span class="function">* 2:    0.07581633</span></span><br><span class="line"><span class="function">* 3:    0.01263606</span></span><br><span class="line"><span class="function">* 4:    0.00157952</span></span><br><span class="line"><span class="function">* 5:    0.00015795</span></span><br><span class="line"><span class="function">* 6:    0.00001316</span></span><br><span class="line"><span class="function">* 7:    0.00000094</span></span><br><span class="line"><span class="function">* 8:    0.00000006</span></span><br><span class="line"><span class="function">* more: less than 1 in ten million</span></span><br></pre></td></tr></table></figure></div><p>理想情况，在随机哈希码下，容器中的节点遵循<strong>泊松分布</strong>（Poisson），按照泊松分布的计算公式计算出了链表中元素个数和概率的对照表，可以看到链表中元素个数为8时的概率已经非常小。</p><p>另一方面红黑树平均查找长度是log(n)，长度为8的时候，平均查找长度为3，如果继续使用链表，平均查找长度为8/2=4，这才有转换为树的必要。链表长度如果是小于等于6，6/2=3，虽然速度也很快的，但是链表和红黑树之间的转换也很耗时。选择6和8，中间还有个差值7可以有效防止链表和树频繁转换。</p><p>再看下另外的几个成员变量：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//HashMap的哈希桶数组，用于存放表示键值对数据的Node元素。</span></span><br><span class="line"><span class="keyword">transient</span> Node&lt;K,V&gt;[] table;</span><br><span class="line"></span><br><span class="line"><span class="comment">//HashMap将数据转换成set的另一种存储形式，这个变量主要用于迭代功能。</span></span><br><span class="line"><span class="keyword">transient</span> Set&lt;Map.Entry&lt;K,V&gt;&gt; entrySet;</span><br><span class="line"></span><br><span class="line"><span class="comment">//HashMap中实际存在的Node数量，注意这个数量不等于table的长度，甚至可能大于它，因为在table的每个节点上是一个链表（或RBT）结构，可能不止有一个Node元素存在。</span></span><br><span class="line"><span class="keyword">transient</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line"><span class="comment">//HashMap的数据被修改的次数，这个变量用于迭代过程中的Fail-Fast机制，其意义在于保证发生了线程安全问题时，能及时的发现（操作前备份的count和当前modCount不相等）并抛出异常(ConcurrentModificationException)终止操作。</span></span><br><span class="line"><span class="keyword">transient</span> <span class="keyword">int</span> modCount;</span><br><span class="line"></span><br><span class="line"><span class="comment">//HashMap的扩容阈值，在HashMap中存储的Node键值对超过这个数量时，自动扩容容量为原来的二倍。</span></span><br><span class="line"><span class="keyword">int</span> threshold;</span><br><span class="line"></span><br><span class="line"><span class="comment">//HashMap的负载因子，可计算出当前table长度下的扩容阈值：threshold = loadFactor * table.length。 </span></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">float</span> loadFactor;</span><br></pre></td></tr></table></figure></div><p>显然，HashMap的底层实现是基于一个<strong>Node</strong>的数组，其是HashMap的一个内部类：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> hash;</span><br><span class="line">    <span class="keyword">final</span> K key;</span><br><span class="line">    V value;</span><br><span class="line">    Node&lt;K,V&gt; next;</span><br><span class="line"></span><br><span class="line">    Node(<span class="keyword">int</span> hash, K key, V value, Node&lt;K,V&gt; next) &#123;</span><br><span class="line">        <span class="keyword">this</span>.hash = hash;</span><br><span class="line">        <span class="keyword">this</span>.key = key;</span><br><span class="line">        <span class="keyword">this</span>.value = value;</span><br><span class="line">        <span class="keyword">this</span>.next = next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> K <span class="title">getKey</span><span class="params">()</span>        </span>&#123; <span class="keyword">return</span> key; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> V <span class="title">getValue</span><span class="params">()</span>      </span>&#123; <span class="keyword">return</span> value; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> key + <span class="string">"="</span> + value; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Objects.hashCode(key) ^ Objects.hashCode(value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> V <span class="title">setValue</span><span class="params">(V newValue)</span> </span>&#123;</span><br><span class="line">        V oldValue = value;</span><br><span class="line">        value = newValue;</span><br><span class="line">        <span class="keyword">return</span> oldValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="keyword">this</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (o <span class="keyword">instanceof</span> Map.Entry) &#123;</span><br><span class="line">            Map.Entry&lt;?,?&gt; e = (Map.Entry&lt;?,?&gt;)o;</span><br><span class="line">            <span class="keyword">if</span> (Objects.equals(key, e.getKey()) &amp;&amp;</span><br><span class="line">                Objects.equals(value, e.getValue()))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>它实现了Map.Entry接口，内部的变量含义也很明确，hash值、key/value对和实现链表和红黑树所需要的指针索引。</p><div class="note info"><p>HashMap内部定义的几个变量，包括桶数组本身都是transient修饰，这代表了他们无法被序列化，而HashMap本身是实现了Serializable接口的。<br>这很容易产生疑惑：HashMap是如何序列化的呢？查了源码发现，HashMap内有两个用于序列化的函数 readObject(ObjectInputStream s) 和 writeObject（ObjectOutputStreams），通过这个函数将table序列化。</p></div><h3 id="put方法解析"><a href="#put方法解析" class="headerlink" title="put方法解析"></a>put方法解析</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> putVal(hash(key), key, value, <span class="keyword">false</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">final</span> V <span class="title">putVal</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">boolean</span> onlyIfAbsent,              //这里onlyIfAbsent表示只有在该key对应原来的value为<span class="keyword">null</span>的时候才插入，也就是说如果value之前存在了，就不会被新put的元素覆盖。</span></span></span><br><span class="line"><span class="function"><span class="params">               <span class="keyword">boolean</span> evict)</span> </span>&#123;                                             <span class="comment">//evict参数用于LinkedHashMap中的尾部操作，这里没有实际意义。</span></span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="keyword">int</span> n, i;                                 <span class="comment">//定义变量tab是将要操作的Node数组引用，p表示tab上的某Node节点，n为tab的长度，i为tab的下标。</span></span><br><span class="line">    <span class="keyword">if</span> ((tab = table) == <span class="keyword">null</span> || (n = tab.length) == <span class="number">0</span>)                     <span class="comment">//判断当table为null或者tab的长度为0时，即table尚未初始化，此时通过resize()方法得到初始化的table。             　　　　　　　</span></span><br><span class="line">        n = (tab = resize()).length;                                      　<span class="comment">//这种情况是可能发生的，HashMap的注释中提到：The table, initialized on first use, and resized as necessary。</span></span><br><span class="line">    <span class="keyword">if</span> ((p = tab[i = (n - <span class="number">1</span>) &amp; hash]) == <span class="keyword">null</span>)                              <span class="comment">//此处通过（n - 1） &amp; hash 计算出的值作为tab的下标i，并另p表示tab[i]，也就是该链表第一个节点的位置。并判断p是否为null。</span></span><br><span class="line">        tab[i] = newNode(hash, key, value, <span class="keyword">null</span>);                           <span class="comment">//当p为null时，表明tab[i]上没有任何元素，那么接下来就new第一个Node节点，调用newNode方法返回新节点赋值给tab[i]。</span></span><br><span class="line">    <span class="keyword">else</span> &#123;                                                                  <span class="comment">//下面进入p不为null的情况，有三种情况：p为链表节点；p为红黑树节点；p是链表节点但长度为临界长度TREEIFY_THRESHOLD，再插入任何元素就要变成红黑树了。</span></span><br><span class="line">        Node&lt;K,V&gt; e; K k;                                                   <span class="comment">//定义e引用即将插入的Node节点，并且下文可以看出 k = p.key。</span></span><br><span class="line">        <span class="keyword">if</span> (p.hash == hash &amp;&amp;                                               <span class="comment">//HashMap中判断key相同的条件是key的hash相同，并且符合equals方法。这里判断了p.key是否和插入的key相等，如果相等，则将p的引用赋给e。</span></span><br><span class="line">            ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))         <span class="comment">//这一步的判断其实是属于一种特殊情况，即HashMap中已经存在了key，于是插入操作就不需要了，只要把原来的value覆盖就可以了。</span></span><br><span class="line">            e = p;                                                          <span class="comment">//这里为什么要把p赋值给e，而不是直接覆盖原值呢？答案很简单，现在我们只判断了第一个节点，后面还可能出现key相同，所以需要在最后一并处理。</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)                                     <span class="comment">//现在开始了第一种情况，p是红黑树节点，那么肯定插入后仍然是红黑树节点，所以我们直接强制转型p后调用TreeNode.putTreeVal方法，返回的引用赋给e。</span></span><br><span class="line">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class="keyword">this</span>, tab, hash, key, value); <span class="comment">//你可能好奇，这里怎么不遍历tree看看有没有key相同的节点呢？其实，putTreeVal内部进行了遍历，存在相同hash时返回被覆盖的TreeNode，否则返回null。</span></span><br><span class="line">        <span class="keyword">else</span> &#123;                                                              <span class="comment">//接下里就是p为链表节点的情形，也就是上述说的另外两类情况：插入后还是链表/插入后转红黑树。另外，上行转型代码也说明了TreeNode是Node的一个子类。</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> binCount = <span class="number">0</span>; ; ++binCount) &#123;                          <span class="comment">//我们需要一个计数器来计算当前链表的元素个数，并遍历链表，binCount就是这个计数器。</span></span><br><span class="line">                <span class="keyword">if</span> ((e = p.next) == <span class="keyword">null</span>) &#123;                                 <span class="comment">//遍历过程中当发现p.next为null时，说明链表到头了，直接在p的后面插入新的链表节点，即把新节点的引用赋给p.next，插入操作就完成了。注意此时e赋给p。</span></span><br><span class="line">                    p.next = newNode(hash, key, value, <span class="keyword">null</span>);               <span class="comment">//最后一个参数为新节点的next，这里传入null，保证了新节点继续为该链表的末端。(查看newNode方法可知)</span></span><br><span class="line">                    <span class="keyword">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class="number">1</span>) <span class="comment">// -1 for 1st    //插入成功后，要判断是否需要转换为红黑树，因为插入后链表长度加1，而binCount并不包含新节点，所以判断时要将临界阈值减1。</span></span><br><span class="line">                        treeifyBin(tab, hash);                              <span class="comment">//当新长度满足转换条件时，调用treeifyBin方法，将该链表转换为红黑树。</span></span><br><span class="line">                    <span class="keyword">break</span>;                                                  <span class="comment">//当然如果不满足转换条件，那么插入数据后结构也无需变动，所有插入操作也到此结束了，break退出即可。</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;                                       <span class="comment">//在遍历链表的过程中，我之前提到了，有可能遍历到与插入的key相同的节点，此时只要将这个节点引用赋值给e，最后通过e去把新的value覆盖掉就可以了。</span></span><br><span class="line">                    ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k)))) <span class="comment">//老样子判断当前遍历的节点的key是否相同。</span></span><br><span class="line">                    <span class="keyword">break</span>;                                                  <span class="comment">//找到了相同key的节点，那么插入操作也不需要了，直接break退出循环进行最后的value覆盖操作。</span></span><br><span class="line">                p = e;                                                      <span class="comment">//在第21行我提到过，e是当前遍历的节点p的下一个节点，p = e 就是依次遍历链表的核心语句。每次循环时p都是下一个node节点。</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (e != <span class="keyword">null</span>) &#123; <span class="comment">// existing mapping for key                        //左边注释为jdk自带注释，说的很明白了，针对已经存在key的情况做处理。</span></span><br><span class="line">            V oldValue = e.value;                                           <span class="comment">//定义oldValue，即原存在的节点e的value值。</span></span><br><span class="line">            <span class="keyword">if</span> (!onlyIfAbsent || oldValue == <span class="keyword">null</span>)                          <span class="comment">//前面提到，onlyIfAbsent表示存在key相同时不做覆盖处理，这里作为判断条件，可以看出当onlyIfAbsent为false或者oldValue为null时，进行覆盖操作。</span></span><br><span class="line">                e.value = value;                                            <span class="comment">//覆盖操作，将原节点e上的value设置为插入的新value。</span></span><br><span class="line">            afterNodeAccess(e);                                             <span class="comment">//这个函数在hashmap中没有任何操作，是个空函数，他存在主要是为了linkedHashMap的一些后续处理工作。</span></span><br><span class="line">            <span class="keyword">return</span> oldValue;                                                <span class="comment">//这里很有意思，他返回的是被覆盖的oldValue。我们在使用put方法时很少用他的返回值，甚至忘了它的存在，这里我们知道，他返回的是被覆盖的oldValue。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ++modCount;                                                             <span class="comment">//收尾工作，值得一提的是，对key相同而覆盖oldValue的情况，在前面已经return，不会执行这里，所以那一类情况不算数据结构变化，并不改变modCount值。</span></span><br><span class="line">    <span class="keyword">if</span> (++size &gt; threshold)                                                 <span class="comment">//同理，覆盖oldValue时显然没有新元素添加，除此之外都新增了一个元素，这里++size并与threshold判断是否达到了扩容标准。</span></span><br><span class="line">        resize();                                                           <span class="comment">//当HashMap中存在的node节点大于threshold时，hashmap进行扩容。</span></span><br><span class="line">    afterNodeInsertion(evict);                                              <span class="comment">//这里与前面的afterNodeAccess同理，是用于linkedHashMap的尾部操作，HashMap中并无实际意义。</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;                                                            <span class="comment">//最终，对于真正进行插入元素的情况，put函数一律返回null。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>在上述代码中的第十行，HashMap根据 (n - 1) &amp; hash 求出了元素在node数组的下标。这个操作非常精妙，下面我们仔细分析一下计算下标的过程，主要分三个阶段：计算hashcode、高位运算和取模运算。</p><p>首先，传进来的hash值是由put方法中的hash(key)产生的（上述第2行），我们来看一下hash()方法的源码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="keyword">return</span> (key == <span class="keyword">null</span>) ? <span class="number">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class="number">16</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这里通过key.hashCode()计算出key的哈希值，然后将哈希值h右移16位，再与原来的h做异或^运算——这一步是高位运算。设想一下，如果没有高位运算，那么hash值将是一个int型的32位数。而从2的-31次幂到2的31次幂之间，有将近几十亿的空间，如果我们的HashMap的table有这么长，内存早就爆了。所以这个散列值不能直接用来最终的取模运算，而需要先加入高位运算，将高16位和低16位的信息”融合”到一起，也称为”扰动函数”。这样才能保证hash值所有位的数值特征都保存下来而没有遗漏，从而使映射结果尽可能的松散。最后，根据 n-1 做与操作的取模运算。</p><p>这里也能看出为什么HashMap要限制table的长度为2的n次幂，因为这样，n-1可以保证二进制展示形式是（以n=16为例）0000 0000 0000 0000 0000 0000 0000 1111。在做”与”操作时，就等同于截取hash二进制值得后四位数据作为下标。这里也可以看出”扰动函数”的重要性了，如果高位不参与运算，那么高16位的hash特征几乎永远得不到展现，发生hash碰撞的几率就会增大，从而影响性能。</p><p>HashMap的put方法的源码实现就是这样了，整理思路非常连贯。这里面有几个函数的源码（比如resize、putTreeValue、newNode、treeifyBin）限于篇幅原因，就不贴了，有兴趣的同学也可以自己挖掘一下。</p><p>附上put方法简易流程图，辅助理解：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/38/2.jpg" alt="nYX8W8.png"></p><h3 id="get方法解析"><a href="#get方法解析" class="headerlink" title="get方法解析"></a>get方法解析</h3><p>读完了put的源码，其实已经可以很清晰的理清HashMap的工作原理了。接下来再看get方法的源码，就非常的简单：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt; e;</span><br><span class="line">    <span class="keyword">return</span> (e = getNode(hash(key), key)) == <span class="keyword">null</span> ? <span class="keyword">null</span> : e.value;          <span class="comment">//根据key及其hash值查询node节点，如果存在，则返回该节点的value值。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">final</span> Node&lt;K,V&gt; <span class="title">getNode</span><span class="params">(<span class="keyword">int</span> hash, Object key)</span> </span>&#123;                             <span class="comment">//根据key搜索节点的方法。记住判断key相等的条件：hash值相同 并且 符合equals方法。</span></span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; <span class="keyword">int</span> n; K k;</span><br><span class="line">    <span class="keyword">if</span> ((tab = table) != <span class="keyword">null</span> &amp;&amp; (n = tab.length) &gt; <span class="number">0</span> &amp;&amp;                    <span class="comment">//根据输入的hash值，可以直接计算出对应的下标（n - 1）&amp; hash，缩小查询范围，如果存在结果，则必定在table的这个位置上。</span></span><br><span class="line">        (first = tab[(n - <span class="number">1</span>) &amp; hash]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (first.hash == hash &amp;&amp; <span class="comment">// always check first node</span></span><br><span class="line">            ((k = first.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))     <span class="comment">//判断第一个存在的节点的key是否和查询的key相等。如果相等，直接返回该节点。</span></span><br><span class="line">            <span class="keyword">return</span> first;</span><br><span class="line">        <span class="keyword">if</span> ((e = first.next) != <span class="keyword">null</span>) &#123;                                     <span class="comment">//遍历该链表/红黑树直到next为null。</span></span><br><span class="line">            <span class="keyword">if</span> (first <span class="keyword">instanceof</span> TreeNode)                                  <span class="comment">//当这个table节点上存储的是红黑树结构时，在根节点first上调用getTreeNode方法，在内部遍历红黑树节点，查看是否有匹配的TreeNode。</span></span><br><span class="line">                <span class="keyword">return</span> ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key);</span><br><span class="line">            <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (e.hash == hash &amp;&amp;                                       <span class="comment">//当这个table节点上存储的是链表结构时，用跟第11行同样的方式去判断key是否相同。</span></span><br><span class="line">                    ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">                    <span class="keyword">return</span> e;</span><br><span class="line">            &#125; <span class="keyword">while</span> ((e = e.next) != <span class="keyword">null</span>);                                 <span class="comment">//如果key不同，一直遍历下去直到链表尽头，e.next == null。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>因为查询过程不涉及到HashMap的结构变动，所以get方法的源码显得很简洁。核心逻辑就是遍历table某特定位置上的所有节点，分别与key进行比较看是否相等。</p><h3 id="remove方法解析"><a href="#remove方法解析" class="headerlink" title="remove方法解析"></a>remove方法解析</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">remove</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt; e;</span><br><span class="line">    <span class="keyword">return</span> (e = removeNode(hash(key), key, <span class="keyword">null</span>, <span class="keyword">false</span>, <span class="keyword">true</span>)) == <span class="keyword">null</span> ?</span><br><span class="line">        <span class="keyword">null</span> : e.value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 1.寻找是否存在,如果存在分数据类型分别处理</span></span><br><span class="line"><span class="comment">  * 2.如果为树,稍微复杂一点,需要判断是否要转换成链表,然后就是树的移动</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="function"><span class="keyword">final</span> Node&lt;K,V&gt; <span class="title">removeNode</span><span class="params">(<span class="keyword">int</span> hash, Object key, Object value,</span></span></span><br><span class="line"><span class="function"><span class="params">                           <span class="keyword">boolean</span> matchValue, <span class="keyword">boolean</span> movable)</span> </span>&#123;</span><br><span class="line">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class="keyword">int</span> n, index;</span><br><span class="line">    <span class="comment">//找到节点</span></span><br><span class="line">    <span class="keyword">if</span> ((tab = table) != <span class="keyword">null</span> &amp;&amp; (n = tab.length) &gt; <span class="number">0</span> &amp;&amp;</span><br><span class="line">        (p = tab[index = (n - <span class="number">1</span>) &amp; hash]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        Node&lt;K,V&gt; node = <span class="keyword">null</span>, e; K k; V v;</span><br><span class="line">        <span class="keyword">if</span> (p.hash == hash &amp;&amp;</span><br><span class="line">            ((k = p.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</span><br><span class="line">            node = p;</span><br><span class="line">        <span class="comment">//从树节点获取，待删除元素在桶中，但不是桶中首元素</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((e = p.next) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 待删除元素在红黑树结构的桶中</span></span><br><span class="line">            <span class="keyword">if</span> (p <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                <span class="comment">// 查找红黑树</span></span><br><span class="line">                node = ((TreeNode&lt;K,V&gt;)p).getTreeNode(hash, key);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 遍历链表，查找待删除元素</span></span><br><span class="line">                <span class="keyword">do</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (e.hash == hash &amp;&amp;</span><br><span class="line">                        ((k = e.key) == key ||</span><br><span class="line">                         (key != <span class="keyword">null</span> &amp;&amp; key.equals(k)))) &#123;</span><br><span class="line">                        node = e;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// p保存待删除节点的前一个节点，用于链表删除操作</span></span><br><span class="line">                    p = e;</span><br><span class="line">                &#125; <span class="keyword">while</span> ((e = e.next) != <span class="keyword">null</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * matchValue为true：表示必须value相等才进行删除操作</span></span><br><span class="line"><span class="comment">         * matchValue为false：表示无须判断value，直接根据key进行删除操作</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (node != <span class="keyword">null</span> &amp;&amp; (!matchValue || (v = node.value) == value ||</span><br><span class="line">                             (value != <span class="keyword">null</span> &amp;&amp; value.equals(v)))) &#123;</span><br><span class="line">            <span class="comment">// 桶为红黑数结构，删除节点</span></span><br><span class="line">            <span class="keyword">if</span> (node <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                <span class="comment">// movable参数用于红黑树操作</span></span><br><span class="line">                ((TreeNode&lt;K,V&gt;)node).removeTreeNode(<span class="keyword">this</span>, tab, movable);</span><br><span class="line">            <span class="comment">// 待删除节点是桶链表表头，将子节点放进桶位</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (node == p)</span><br><span class="line">                tab[index] = node.next;</span><br><span class="line">            <span class="comment">// 待删除节点在桶链表中间</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                p.next = node.next;</span><br><span class="line">            ++modCount;</span><br><span class="line">            --size;</span><br><span class="line">            afterNodeRemoval(node);</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 待删除元素不存在，返回null</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><h3 id="resize方法解析"><a href="#resize方法解析" class="headerlink" title="resize方法解析"></a>resize方法解析</h3><p>扩容时机：</p><ol><li>当为空的时候,也就是没有初始化的时候</li><li>当到达最大值时候</li><li>普通扩容时候</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class="line">    <span class="comment">//保存旧的 Hash 数组</span></span><br><span class="line">    Node&lt;K,V&gt;[] oldTab = table;</span><br><span class="line">    <span class="keyword">int</span> oldCap = (oldTab == <span class="keyword">null</span>) ? <span class="number">0</span> : oldTab.length;</span><br><span class="line">    <span class="keyword">int</span> oldThr = threshold;</span><br><span class="line">    <span class="keyword">int</span> newCap, newThr = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//存在旧值</span></span><br><span class="line">    <span class="keyword">if</span> (oldCap &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//超过最大容量，不再进行扩充，最大容量设置为2&lt;&lt;32 - 1</span></span><br><span class="line">        <span class="keyword">if</span> (oldCap &gt;= MAXIMUM_CAPACITY) &#123;</span><br><span class="line">            <span class="comment">//不移动.,没有空间移动</span></span><br><span class="line">            threshold = Integer.MAX_VALUE;</span><br><span class="line">            <span class="keyword">return</span> oldTab;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//容量没有超过最大值，属于正常范围的扩容 容量 x2</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((newCap = oldCap &lt;&lt; <span class="number">1</span>) &lt; MAXIMUM_CAPACITY &amp;&amp;</span><br><span class="line">                 oldCap &gt;= DEFAULT_INITIAL_CAPACITY)</span><br><span class="line">            <span class="comment">//阀值变为原来的两倍</span></span><br><span class="line">            newThr = oldThr &lt;&lt; <span class="number">1</span>; <span class="comment">// double threshold</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//用户自己设定了初始化大小</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (oldThr &gt; <span class="number">0</span>) <span class="comment">// initial capacity was placed in threshold</span></span><br><span class="line">        newCap = oldThr;</span><br><span class="line">    <span class="comment">//如果没使用,使用默认值初始化</span></span><br><span class="line">    <span class="keyword">else</span> &#123;               <span class="comment">// zero initial threshold signifies using defaults</span></span><br><span class="line">         <span class="comment">//阀值和容量使用默认值</span></span><br><span class="line">        newCap = DEFAULT_INITIAL_CAPACITY;</span><br><span class="line">        newThr = (<span class="keyword">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//用户自定义了map的初始化操作</span></span><br><span class="line">    <span class="keyword">if</span> (newThr == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//计算新的阀值</span></span><br><span class="line">        <span class="keyword">float</span> ft = (<span class="keyword">float</span>)newCap * loadFactor;</span><br><span class="line">        <span class="comment">//阀值没有超过最大阀值，设置新的阀值</span></span><br><span class="line">        newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class="keyword">float</span>)MAXIMUM_CAPACITY ?</span><br><span class="line">                  (<span class="keyword">int</span>)ft : Integer.MAX_VALUE);</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">//新的容量</span></span><br><span class="line">    threshold = newThr;</span><br><span class="line">    <span class="meta">@SuppressWarnings</span>(&#123;<span class="string">"rawtypes"</span>,<span class="string">"unchecked"</span>&#125;)</span><br><span class="line">    <span class="comment">//创建新的 Hash 表</span></span><br><span class="line">    Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class="keyword">new</span> Node[newCap];</span><br><span class="line">    table = newTab;</span><br><span class="line">    <span class="comment">//如果是扩容操作，遍历旧的 Hash 表</span></span><br><span class="line">    <span class="keyword">if</span> (oldTab != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// 遍历map的数据，把每个bucket都移动到新的bucket中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; oldCap; ++j) &#123;</span><br><span class="line">            Node&lt;K,V&gt; e;</span><br><span class="line">            <span class="keyword">if</span> ((e = oldTab[j]) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//释放空间</span></span><br><span class="line">                oldTab[j] = <span class="keyword">null</span>;</span><br><span class="line">                <span class="comment">//如果当前位置只有一个元素,直接移动到新的位置</span></span><br><span class="line">                <span class="keyword">if</span> (e.next == <span class="keyword">null</span>)</span><br><span class="line">                    newTab[e.hash &amp; (newCap - <span class="number">1</span>)] = e;</span><br><span class="line">                 <span class="comment">//如果是红黑树</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (e <span class="keyword">instanceof</span> TreeNode)</span><br><span class="line">                    ((TreeNode&lt;K,V&gt;)e).split(<span class="keyword">this</span>, newTab, j, oldCap);</span><br><span class="line">                <span class="comment">//如果没超过8个 是链表</span></span><br><span class="line">                <span class="keyword">else</span> &#123; <span class="comment">// preserve order</span></span><br><span class="line">                    <span class="comment">// 链表优化重hash的代码块</span></span><br><span class="line">                    Node&lt;K,V&gt; loHead = <span class="keyword">null</span>, loTail = <span class="keyword">null</span>;</span><br><span class="line">                    Node&lt;K,V&gt; hiHead = <span class="keyword">null</span>, hiTail = <span class="keyword">null</span>;</span><br><span class="line">                    Node&lt;K,V&gt; next;</span><br><span class="line">                     <span class="comment">//此处的操作是这样子的 因为是扩容一倍的操作,所以与旧的容量进行与操作后只有两个值0 和 1</span></span><br><span class="line">                    <span class="comment">//如果是0就位置不变,如果是1就移动n+old的位置,</span></span><br><span class="line">                    <span class="comment">//个人认为这么做的好处是:</span></span><br><span class="line">                    <span class="comment">/**</span></span><br><span class="line"><span class="comment">                     * 1.不会像之前1.7发生循环依赖的问题</span></span><br><span class="line"><span class="comment">                     * 2.从概率的角度上来看可以均匀分配,(一般来说高位和低位比例差不多)</span></span><br><span class="line"><span class="comment">                     * 3.提高效率</span></span><br><span class="line"><span class="comment">                     */</span></span><br><span class="line">                    <span class="keyword">do</span> &#123;</span><br><span class="line">                        next = e.next;</span><br><span class="line">                        <span class="comment">//如果和旧容量位运算后的值是0,记得当前节点和存放在链表的尾部</span></span><br><span class="line">                        <span class="keyword">if</span> ((e.hash &amp; oldCap) == <span class="number">0</span>) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (loTail == <span class="keyword">null</span>)</span><br><span class="line">                                loHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                loTail.next = e;</span><br><span class="line">                            loTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 原索引+oldCap</span></span><br><span class="line">                        <span class="keyword">else</span> &#123;</span><br><span class="line">                            <span class="keyword">if</span> (hiTail == <span class="keyword">null</span>)</span><br><span class="line">                                hiHead = e;</span><br><span class="line">                            <span class="keyword">else</span></span><br><span class="line">                                hiTail.next = e;</span><br><span class="line">                            hiTail = e;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">while</span> ((e = next) != <span class="keyword">null</span>);</span><br><span class="line">                     <span class="comment">// 原索引放到bucket里</span></span><br><span class="line">                     <span class="comment">//为0的还是存放在当前位置</span></span><br><span class="line">                    <span class="keyword">if</span> (loTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">//最后一个节点的下一个节点做空</span></span><br><span class="line">                        loTail.next = <span class="keyword">null</span>;</span><br><span class="line">                        newTab[j] = loHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 原索引+oldCap放到bucket里</span></span><br><span class="line">                    <span class="keyword">if</span> (hiTail != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="comment">//最后一个节点的下一个节点做空</span></span><br><span class="line">                        hiTail.next = <span class="keyword">null</span>;</span><br><span class="line">                        newTab[j + oldCap] = hiHead;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newTab;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>Java8在扩容后重新计算位置的时候,对链表进行优化,有兴趣可以搜索一下<a href="http://ifeve.com/hashmap-infinite-loop/" target="_blank" rel="noopener">HashMap导致cpu百分之百的问题</a>。而在Java中通过巧妙的进行&amp;操作，然后获得高位是为0还是1，最终移动的位置就是低位的链表留在原地，高位的放在index+oldsize的地方就可以了。不用为每一个元素计算hash值,然后移动到对应的位置，再判断是否是链表，是否需要转换成树的操作。</p><blockquote><p><strong>JDK 7</strong>以前的HashMap相关实现原理，和JDK 8以后还是有点区别的，可参考：</p></blockquote><p><a href="https://www.iteye.com/blog/zhangshixi-672697" class="LinkCard" target="_blank" rel="noopener">JDK 7关于HashMap的实现原理</a></p><h3 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h3><blockquote><p>问：HashMap如果确定只装载100个元素，new HashMap(?)多少是最佳的，为什么?</p></blockquote><p>HashMap有两个参数影响其性能：<strong>初始容量</strong>和<strong>加载因子</strong>，前文我们已经分析了相关的代码。当哈希表中条目的数目超过<strong>容量乘加载因子</strong>的时候，则要对该哈希表进行<code>resize</code>扩容操作，从而哈希表将具有大约两倍的桶数。HashMap默认的加载因子是0.75，它在时间和空间成本上寻求了一种折中。</p><p>回到本文的问题。如果这个只装载100个元素的HashMap没有特殊的用途，那么为了在时间和空间上达到最佳性能，HashMap的初始容量可以设为：</p><p>100/0.75 = 133.33，为了防止resize，向上取整，为134。</p><p>但是还有另外一个问题，就是hash碰撞的问题。如果我们将HashMap的容量设置为134，那么如何保证其中的哈希碰撞会比较少呢？除非重写hashcode()方法，否则，似乎没有办法保证。</p><p>Put方法的第10行代码处，也给出了HashMap如何为元素选择下标的方法：<code>p = tab[i = (n - 1) &amp; hash])</code>。hash为key哈希后得到的值，n为哈希表的长度。</p><p>134-1 = 128 + 6 -1；</p><p>假设这100个装载的元素中他们的key在哈希后有得到两个值（h），他们的二进制值除了低3位之外都相同，而第一个值的低3位为011，第二个值的低3位为001；</p><p>这时候进行java的&amp;预算，011 &amp; 101 = 001 ；001 &amp; 101 = 001；他们的值相等了，那么这个时候就会发生哈希碰撞。</p><p>除此之外还有一个更加严重的问题，由于在101中第二位是0，那么，无论我们的key在哈希运算之后得到的值h是什么，那么在&amp;运算之后，得到的结果的倒数第二位均为0；</p><p>因此，对于hash表所有下标的二进制的值而言，只要低位第二位的值为1，（例如0010,0011,0111,1111）那么这个下标所代表的桶将一直是空的，因为代码中的&amp;运算的结果永远不会产生低位第二位为1的值。这就大大地浪费了空间，同时还增加了哈希碰撞的概率。这无疑会降低HashMap的效率。</p><p>那么如何才能减少这种浪费呢？最佳的方法当然是让length-1的二进制值全部位均为1。那么多少合适呢？没错，<code>length=2^n</code>，只要将hash表的长度设为2的N次方，那么，所有的哈希桶均有被使用的可能。</p><blockquote><p>再次验证了HashMap要限制table的长度为2的n次幂的一个原因</p></blockquote><p>回到刚才问题，与134最靠近的2^n无疑是128。但是100/128=0.78，已经超过默认加载因子的大小了。HashMap会进行resize操作，变成256。所以<strong>最好的结果还是256</strong>。</p><blockquote><p>补充：在Java中，无论你的HashMap(x)中的x设置为多少，HashMap的大小都是2^n。2^n是大于x的第一个数。</p></blockquote><p><strong>参考文章：</strong></p><p><a href="https://www.iteye.com/blog/zhangshixi-672697" target="_blank" rel="noopener">深入Java集合学习系列：HashMap的实现原理</a><br><a href="https://my.oschina.net/eumji025/blog/1610226" target="_blank" rel="noopener">Java8 HashMap源码分析</a><br><a href="https://www.cnblogs.com/jzb-blog/p/6637823.htm" target="_blank" rel="noopener">java 8 Hashmap深入解析—put get 方法源码</a><br><a href="https://www.cnblogs.com/coderxuyang/p/3718856.html" target="_blank" rel="noopener">在元素的装载数量明确的时候HashMap的大小应该如何选择</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 集合 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> HashMap </tag>
            
            <tag> 集合 </tag>
            
            <tag> 原理 </tag>
            
            <tag> 红黑树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT主题自定义友链页面</title>
      <link href="/posts/1123041323.html"/>
      <url>/posts/1123041323.html</url>
      
        <content type="html"><![CDATA[<p>Next 的友链，默认是在主题配置文件中 <strong>links</strong> 下添加，当链接变多以后，侧栏页面的排版很不美观，这时候就需要给友链新增一个单独的页面了，下面说一下具体步骤。</p><a id="more"></a><h4 id="新增-links-页面"><a href="#新增-links-页面" class="headerlink" title="新增 links 页面"></a>新增 links 页面</h4><p>在控制台使用命令创建：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="BASH"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page links</span><br></pre></td></tr></table></figure></div><div class="note info"><p>也可在根目录 /source 下手动创建 links 文件夹和里边的 index.md 文件</p></div><p>然后在根目录 /source 下会生成一个 links 文件夹，打开其中的 index.md 文件，在头部写入 type = “links”，如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2019-08-11 15:34:16</span><br><span class="line"><span class="addition">+ type: "links"</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure></div><p>如果需要关闭这个页面的评论的话，可以设置如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="DIFF"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">---</span></span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2019-08-11 15:34:16</span><br><span class="line">type: "links"</span><br><span class="line"><span class="addition">+ comments: false</span></span><br><span class="line"><span class="comment">---</span></span><br></pre></td></tr></table></figure></div><h4 id="配置-menu"><a href="#配置-menu" class="headerlink" title="配置 menu"></a>配置 menu</h4><p>主题配置文件中<code>menu</code>下添加：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">links:</span> <span class="string">/links/</span> <span class="string">||</span> <span class="string">link</span></span><br></pre></td></tr></table></figure></div><p>在 <code>/themes/next/languages/zh-Hans.yml</code> 文件中 <code>menu</code> 下增加中文描述</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">links:</span> <span class="string">友链</span></span><br></pre></td></tr></table></figure></div><p>做完这些工作，接下来就是要增加友链页面的样式了</p><h4 id="新增-links-swig-页"><a href="#新增-links-swig-页" class="headerlink" title="新增 links.swig 页"></a>新增 links.swig 页</h4><p>在 <code>/themes/next/layout/</code> 新建 <code>links.swig</code>，内容如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block content %&#125;</span><br><span class="line">  &#123;######################&#125;</span><br><span class="line">  &#123;### LINKS BLOCK ###&#125;</span><br><span class="line">  &#123;######################&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"links"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="selector-id">#links</span>&#123;</span></span><br><span class="line">               margin-top: 5rem;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="selector-class">.links-content</span>&#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">margin-top</span><span class="selector-pseudo">:1rem</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="selector-class">.link-navigation</span><span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">                content: " ";</span><br><span class="line">                display: block;</span><br><span class="line">                clear: both;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">            <span class="selector-class">.card</span> &#123;</span></span><br><span class="line">                width: 300px;</span><br><span class="line">                font-size: 1rem;</span><br><span class="line">                padding: 10px 20px;</span><br><span class="line">                border-radius: 4px;</span><br><span class="line"><span class="css">                <span class="selector-tag">transition-duration</span>: 0<span class="selector-class">.15s</span>;</span></span><br><span class="line">                margin-bottom: 1rem;</span><br><span class="line"><span class="css">                <span class="selector-tag">display</span><span class="selector-pseudo">:flex</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span><span class="selector-pseudo">:nth-child(odd)</span> &#123;</span></span><br><span class="line">                float: left;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span><span class="selector-pseudo">:nth-child(even)</span> &#123;</span></span><br><span class="line">                float: right;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1<span class="selector-class">.1</span>);</span></span><br><span class="line"><span class="css">                <span class="selector-tag">box-shadow</span>: 0 2<span class="selector-tag">px</span> 6<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.12</span>), 0 0 6<span class="selector-tag">px</span> 0 <span class="selector-tag">rgba</span>(0, 0, 0, 0<span class="selector-class">.04</span>);</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">border</span><span class="selector-pseudo">:none</span>;</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span> <span class="selector-class">.ava</span> &#123;</span></span><br><span class="line">                width: 3rem!important;</span><br><span class="line">                height: 3rem!important;</span><br><span class="line"><span class="css">                <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>!<span class="selector-tag">important</span>;</span></span><br><span class="line">                margin-right: 1em!important;</span><br><span class="line"><span class="css">                <span class="selector-tag">border-radius</span><span class="selector-pseudo">:4px</span>;</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span> <span class="selector-class">.card-header</span> &#123;</span></span><br><span class="line">                font-style: italic;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                width: 236px;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span> <span class="selector-class">.card-header</span> <span class="selector-tag">a</span> &#123;</span></span><br><span class="line">                font-style: normal;</span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>: <span class="selector-id">#2bbc8a</span>;</span></span><br><span class="line">                font-weight: bold;</span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span> <span class="selector-class">.card-header</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>: <span class="selector-id">#d480aa</span>;</span></span><br><span class="line">                text-decoration: none;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="css">            <span class="selector-class">.card</span> <span class="selector-class">.card-header</span> <span class="selector-class">.info</span> &#123;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">font-style</span><span class="selector-pseudo">:normal</span>;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">color</span>:<span class="selector-id">#a3a3a3</span>;</span></span><br><span class="line"><span class="css">                <span class="selector-tag">font-size</span><span class="selector-pseudo">:14px</span>;</span></span><br><span class="line">                min-width: 0;</span><br><span class="line">                text-overflow: ellipsis;</span><br><span class="line">                overflow: hidden;</span><br><span class="line">                white-space: nowrap;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"links-content"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"link-navigation"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                &#123;% for link in theme.mylinks %&#125;</span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"ava"</span> <span class="attr">src</span>=<span class="string">"&#123;&#123; link.avatar &#125;&#125;"</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"card-header"</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; link.site &#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span> &#123;&#123; link.nickname &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                              <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; link.site &#125;&#125;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"focus-links"</span>&gt;</span>关注<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"info"</span>&gt;</span>&#123;&#123; link.info &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            &#123;&#123; page.content &#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  &#123;##########################&#125;</span><br><span class="line">  &#123;### END LINKS BLOCK ###&#125;</span><br><span class="line">  &#123;##########################&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></div><h4 id="修改-page-swig"><a href="#修改-page-swig" class="headerlink" title="修改 page.swig"></a>修改 page.swig</h4><p>修改 <code>next/layout/page.swig</code> 文件，在开头的 <code>block title</code> 内部</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#&#125;&#123;% elif page.type === "tags" and not page.title %&#125;&#123;#</span><br><span class="line">    #&#125;&#123;&#123; __('title.tag') + page_title_suffix &#125;&#125;&#123;#</span><br></pre></td></tr></table></figure></div><p>这个位置下添加代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 友情链接--&gt;</span></span><br><span class="line">#&#125;&#123;% elif page.type === 'links' and not page.title %&#125;&#123;#</span><br><span class="line">  #&#125;&#123;&#123; __('title.links') + page_title_suffix &#125;&#125;&#123;#</span><br></pre></td></tr></table></figure></div><p>效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/32/1.jpg" alt></p><h4 id="引入-links-swig"><a href="#引入-links-swig" class="headerlink" title="引入 links.swig"></a>引入 links.swig</h4><p>接着在 <code>next/layout/page.swig</code> 中 <code>PAGE BODY</code> 内部，引入刚才新建的 <code>page.swig</code> :</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 友情链接--&gt;</span></span><br><span class="line">&#123;% elif page.type === 'links' %&#125;</span><br><span class="line">    &#123;% include 'links.swig' %&#125;</span><br></pre></td></tr></table></figure></div><p>比如我是在</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elif page.type === 'categories' %&#125;</span><br></pre></td></tr></table></figure></div><p>这个 <code>if</code> 下追加的：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/32/2.jpg" alt="n1MvPe.png"></p><p>到这里就完成页面样式的配置了。</p><h4 id="配置友链"><a href="#配置友链" class="headerlink" title="配置友链"></a>配置友链</h4><p>接下来，在 <code>/themes/next/_config.yml</code> 文件中配置友链，末尾处新增 <code>mylinks</code>，如下</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mylinks:</span></span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> <span class="attr">nickname:</span> <span class="string">Leaf's</span> <span class="string">Blog</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">https://www.liaofuzhan.com/images/beichen.png</span></span><br><span class="line">  <span class="attr">site:</span> <span class="string">https://www.liaofuzhan.com</span></span><br><span class="line">  <span class="attr">info:</span> <span class="string">因心造境，风云由我！</span></span><br><span class="line">  </span><br><span class="line"><span class="bullet">-</span> <span class="attr">nickname:</span> <span class="string">Leaf's</span> <span class="string">Blog</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">https://www.liaofuzhan.com/images/beichen.png</span></span><br><span class="line">  <span class="attr">site:</span> <span class="string">https://www.liaofuzhan.com</span></span><br><span class="line">  <span class="attr">info:</span> <span class="string">因心造境，风云由我！</span></span><br></pre></td></tr></table></figure></div><div class="note info"><p>这里是配置了两个友链，多个的配置方式相同。</p></div><p>hexo 三连，看看效果吧~</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/32/3.jpg" alt="nO861A.png"></p><p>参考文章：</p><p><a href="https://www.sanshuifeibing.cn/posts/16e3649f.html" class="LinkCard" target="_blank" rel="noopener">Hexo 修改友链样式</a></p><p>还有一种比较不错的做法，可参考：<a href="https://blog.maplesugar.space/hexo/hexo-next%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%8B%E9%93%BE%E9%A1%B5%E9%9D%A2/" target="_blank" rel="noopener">Next 主题自定义友链页面</a>，模仿 <a href="https://blog.dlzhang.com/posts/3720dafc/" target="_blank" rel="noopener">Hexo NexT 增加瀑布流相册页面</a> 的功能实现</p><p>相册功能参考：</p><p><a href="https://asdfv1929.github.io/2018/05/26/next-add-photos/" class="LinkCard" target="_blank" rel="noopener">Hexo NexT 主题内添加相册功能</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 自定义 </tag>
            
            <tag> 友链 </tag>
            
            <tag> 相册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT百度分享不支持https问题</title>
      <link href="/posts/952735405.html"/>
      <url>/posts/952735405.html</url>
      
        <content type="html"><![CDATA[<p>在 NexT 主题中已经预置了百度分享功能，通过主题配置文件中的 baidushare 即可开启，根据 next/layout/_partials/share/baidushare.swig 中已经预设的 type 类型。</p><a id="more"></a><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.baidushare.type === <span class="string">"button"</span> %&#125;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&#123;% elseif theme.baidushare.type === <span class="string">"slide"</span> %&#125;</span><br><span class="line">...</span><br><span class="line">...</span><br></pre></td></tr></table></figure></div><p>可以配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidushare:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">button</span>  <span class="comment"># or slide</span></span><br></pre></td></tr></table></figure></div><p>这样配置以后，文章的末尾已经出现了分享按钮了，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/31/1.jpg" alt="nO84AS.png"></p><p>不过文章部署 github 后，分享按钮没有显示，查看浏览器控制台，报错了：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/31/2.jpg" alt="nOGkB6.png"></p><p>大概意思是跨源了，因为百度分享不支持 Https，站点配置文件中也有提示：<code>Warning: Baidu Share does not support https.</code></p><p>网上找到了解决方案，参考：</p><p><a href="https://github.com/hrwhisper/baiduShare" class="LinkCard" target="_blank" rel="noopener">github baiduShare</a></p><p><a href="https://www.hrwhisper.me/baidu-share-not-support-https-solution/" class="LinkCard" target="_blank" rel="noopener">百度分享不支持 https 的解决方案</a></p><p>操作步骤如下：</p><p>1、下载<a href="https://github.com/hrwhisper/baiduShare" target="_blank" rel="noopener">github baiduShare</a>代码</p><p>解压后将 static 文件夹拷贝到自己项目 <code>next/source/</code> 目录下</p><p>2、修改 <code>next/layout/_partials/share/baidushare.swig</code> 文件</p><p>将文件最后的代码</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span>(<span class="built_in">document</span>)<span class="number">0</span>[(getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>]||body).appendChild(createElement(<span class="string">'script'</span>)).src=<span class="string">'//bdimg.share.baidu.com/static/api/js/share.js?cdnversion='</span>+~(-<span class="keyword">new</span> <span class="built_in">Date</span>()/<span class="number">36e5</span>)];</span><br></pre></td></tr></table></figure></div><p>替换为</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span>(<span class="built_in">document</span>)<span class="number">0</span>[(getElementsByTagName(<span class="string">'head'</span>)[<span class="number">0</span>]||body).appendChild(createElement(<span class="string">'script'</span>)).src=<span class="string">'/static/api/js/share.js?cdnversion='</span>+~(-<span class="keyword">new</span> <span class="built_in">Date</span>()/<span class="number">36e5</span>)];</span><br></pre></td></tr></table></figure></div><p>即修改 <code>src</code> 后边的引用，改为本项目目录下的 js 文件</p><p>最后重新生成博文，打开文章后，即可看到分享按钮了，经测试，分享功能已经可以正常使用了</p><p>如有其它问题，可参考：</p><p><a href="https://www.hrwhisper.me/baidu-share-not-support-https-solution/" class="LinkCard" target="_blank" rel="noopener">百度分享不支持 https 的解决方案</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 分享 </tag>
            
            <tag> 百度 </tag>
            
            <tag> Https </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NexT 文章阅读排行（热榜）功能</title>
      <link href="/posts/781439527.html"/>
      <url>/posts/781439527.html</url>
      
        <content type="html"><![CDATA[<p>写这篇文章之前，本人也了解过其他网站的做法，大部分都是基于 Leancloud 来实现，使用谷歌 Firestore（Firebase）来做的很少。国内版 Leancloud 需要实名认证，最近还需绑定自己的域名（<a href="https://leancloudblog.com/mandatory-domain-config/" target="_blank" rel="noopener">详情</a>）。一种方案就是使用<a href="https://leancloud.app" target="_blank" rel="noopener">国际版</a>来替代，此版本只需要绑定邮箱和手机号，参考：<a href="https://www.liaofuzhan.com/posts/554801533.html">这篇文章</a></p><a id="more"></a><p>主要是本人比较排斥这样搜刮隐私的行为，So 经过几次尝<del>(tou)</del>试<del>(ji)</del>无果后，果断放弃！</p><p>关于 Leancloud 的相关实现，可以参考下边这篇文章，精简实用，本文也在此基础上作了参考。</p><p><a href="https://hoxis.github.io/hexo-next-read-rank.html" class="LinkCard" target="_blank" rel="noopener">hexo next 新增阅读排行页面</a></p><div class="note danger"><p>注意：使用 leancloud 这功能时，有以下两个前提</p></div><p>1、主题配置文件开启 <code>leancloud_visitors</code>，并设置 <code>app_id</code> 和 <code>app_key</code>：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">leancloud_visitors:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">app_id:</span> <span class="string">KWIxah6ChxxxxoTi-xxxHsz</span> <span class="comment">#&lt;app_id&gt; // 你的app_id</span></span><br><span class="line">  <span class="attr">app_key:</span> <span class="string">3wuQxxxbjUakGxxxxxsT1P</span> <span class="comment">#&lt;app_key&gt; // 你的app_key</span></span><br></pre></td></tr></table></figure></div><p>配置文件也有 “Show number of visitors to each article” 这个说明，开启这个才能统计每篇文章的的访客数（阅读量），排行榜功能是需要用到这个数值的，所以得开启</p><p>2、leancloud 应用中创建 Class</p><p>登录<a href="https://leancloud.cn/dashboard/applist.html#/apps" target="_blank" rel="noopener">leancloud控制台</a>创建应用（也可以用已经创建好的），在所选择应用的存储选项下创建Class按钮，新建一个class，class名一定要是<code>Counter</code>，其它配置默认即可。若是不创建这个Class的话，上一步中的访客数（阅读量）就一直为空，排行榜功能就不能正常工作。</p><p>创建后正常访问：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/1.jpg" alt="n1MX5D.png"></p><p>以上两点提示，<font color="red"><strong>重要！！！</strong></font></p><div class="note success"><p>开始进入正题：Firestore</p></div><p>主题配置文件，已经提前预配了 <code>firestore</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/2.jpg" alt="nOGNCQ.png"></p><p>是不是已经给你提示了呢？而且<a href="https://theme-next.org/docs/third-party-services/statistics-and-analytics.html" target="_blank" rel="noopener">官方文档</a>也提到过，一共分为两步：</p><p>1、<strong>注册</strong></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/3.jpg" alt="nOGsET.png"></p><p>2、<strong>配置</strong></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/4.jpg" alt="nOGbPe.png"></p><div class="note danger"><p>Firebase 属于谷歌的，确保你能访问：<a href="https://console.firebase.google.com" target="_blank" rel="noopener">https://console.firebase.google.com</a> (tips：科学上网)</p></div><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>可以直接使用 Google 帐号登录，没有的自行进行注册，此步骤略过。登录成功后，点击网页右上角：<a href="https://console.firebase.google.com" target="_blank" rel="noopener">转到控制台</a></p><h3 id="添加项目"><a href="#添加项目" class="headerlink" title="添加项目"></a>添加项目</h3><p>输入项目名称，比如是 <code>leafjame2019814</code>, 点击继续，默认配置即可，完成后还可以再修改。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/5.jpg" alt="nOGL2d.png"></p><p>创建项目完成后，点击网页左侧 <code>setttings</code> 按钮,如图：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/6.jpg" alt="nOJSVf.png"></p><p>可查看到自己的<code>项目 ID</code>和<code>网络 API 密钥</code>，这就是 next 主题配置文件中提到的 <code>projectId</code> 和 <code>apiKey</code></p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/7.jpg" alt="nOJF2j.png"></p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><p>创建完项目后，接着需要创建存储数据的地方，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/8.jpg" alt="nOJEMn.png"></p><p>有两种选项，自己用的话，选择<code>以测试模式开始</code>，就可以。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/9.jpg" alt="nOJ8MR.png"></p><blockquote><p>如果选择<strong>以锁定模式开始</strong>，后续自己通过 js api 的方式写入时会提示没有权限</p></blockquote><p>下一步设置 Cloud Firestore 位置，有以下好几种，分为<code>多域性</code>和<code>区域性</code>。具体区别可查看<a href="https://firebase.google.com/docs/projects/locations?authuser=0" target="_blank" rel="noopener">文档</a>，默认选择 <code>nam5 (us-central)</code> 即可，点击完成，等待分配 Database。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/10.jpg" alt="nOJyLt.png"></p><p>完成后显示是这样的，现在还没有数据。</p><blockquote><p>可参考<a href="https://firebase.google.com/docs/firestore/quickstart" target="_blank" rel="noopener">Cloud Firestore 使用入门</a>，文档还是很全的</p></blockquote><h3 id="配置文章阅读量"><a href="#配置文章阅读量" class="headerlink" title="配置文章阅读量"></a>配置文章阅读量</h3><p>做完上边的操作后，接着就是把代码集成到自己的项目中了。</p><p>在 <code>next/layout/_third-party/analytics/firestore.swig</code> 中，其实已经实现了文章阅读量的功能，只需要经过本文以上的操作，然后在 <code>next/_config.yml</code> 文件，启用 <code>firestore</code>：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/11.jpg" alt="nOJhWQ.png"></p><p>里面的 <code>apiKey</code> 和 <code>projectId</code> 就是上文中创建的，<code>collection</code>：集合 ID，下边会讲到。</p><p>这个功能经过配置后，可用于文章的阅读次数了，当文章未被查看时，效果是这样的：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/12.jpg" alt="nOJbwV.png"></p><p>此时 Firebase 中 Database 下还<strong>没有</strong>数据，当浏览这篇文章后，阅读次数加 1 了，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/13.jpg" alt="nOJjW4.png"></p><p>再打开 Firebase，你会发现，也有数据了：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/14.jpg" alt="nOYZSH.png"></p><p><code>articles</code> 就是上边配置的 <code>collection</code> 的值，即：集合 ID</p><p>这控制台能对集合、文档、字段、值进行操作，比如设置阅读量啦什么的~</p><h3 id="设置开发环境"><a href="#设置开发环境" class="headerlink" title="设置开发环境"></a>设置开发环境</h3><p>每个页面的阅读量有了，不过我们要做的是排行榜啊，得把所有的页面汇总排序。而且刚才的 Database 里存的数据也没有 URL 等等这些信息呀，接下来要写代码了。</p><p>新增如下的页面——「热榜」，我想大家都会了吧，不细说了。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/15.jpg" alt="nOYQTf.png"></p><p>在这个 index.md 中，引入要用到的 <strong>Firebase</strong> 代码，可参照<a href="https://firebase.google.com/docs/firestore/quickstart#set_up_your_development_environment" target="_blank" rel="noopener">官方文档</a>进行。</p><div class="note info"><p>之前我想直接在此 md 文件中引入 firestore.swig，但启动一直报错。。（应该是没配置对的缘故）</p></div><p>报错截图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/16.jpg" alt="nOY8fg.png"></p><p>多次改路径尝试无果后，我觉定在 md 文件中再次引入依赖的 js 代码。</p><p><code>index.md</code> 完整代码如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">---</span><br><span class="line">title: 文章热度排行</span><br><span class="line">date: <span class="number">2019</span><span class="number">-08</span><span class="number">-14</span> <span class="number">15</span>:<span class="number">23</span>:<span class="number">11</span></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"top"</span> style=<span class="string">"margin-top:80px;"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;!-- Firebase App (the core Firebase SDK) is always required and must be listed first --&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="https:/</span><span class="regexp">/www.gstatic.com/</span>firebasejs/<span class="number">5.10</span><span class="number">.1</span>/firebase-app.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;!-- Add Firebase products that you want to use --&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>https:<span class="comment">//www.gstatic.com/firebasejs/5.10.1/firebase-auth.js"&gt;&lt;/script&gt;</span></span><br><span class="line">&lt;script src=<span class="string">"https://www.gstatic.com/firebasejs/5.10.1/firebase-database.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script src="https:/</span><span class="regexp">/www.gstatic.com/</span>firebasejs/<span class="number">5.10</span><span class="number">.1</span>/firebase-firestore.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  firebase.initializeApp(&#123;</span></span><br><span class="line"><span class="string">      apiKey: 'AIzaSyDKul4ZXXXXX6l6UiHzXXXXvcDsiE', //你的apiKey</span></span><br><span class="line"><span class="string">      projectId: 'aXXX5eXXX6b'  //你的projectId</span></span><br><span class="line"><span class="string">   &#125;)</span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">   var title= '';</span></span><br><span class="line"><span class="string">   var count = 0;</span></span><br><span class="line"><span class="string">   var url = '';</span></span><br><span class="line"><span class="string">   const db = firebase.firestore();</span></span><br><span class="line"><span class="string">   var collection =  'articles'; //主题配置文件配置的collection //&#123;&#123; theme.firestore.collection &#125;&#125;';</span></span><br><span class="line"><span class="string">   db.collection(collection).orderBy('count', 'desc').limit(10).get().then((querySnapshot) =&gt; &#123;</span></span><br><span class="line"><span class="string">       querySnapshot.forEach((doc) =&gt; &#123;</span></span><br><span class="line"><span class="string">       //  console.log(doc.id, "</span> =&gt; <span class="string">", doc.data());</span></span><br><span class="line"><span class="string">           title = doc.id;</span></span><br><span class="line"><span class="string">           count = doc.data().count;</span></span><br><span class="line"><span class="string">           url = doc.data().url;</span></span><br><span class="line"><span class="string">           var content="</span>&lt;h5&gt;<span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>"+"<span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">'#1C1C1C'</span>&gt;</span>"+"【文章热度: "+count+" ℃】"+"<span class="tag">&lt;/<span class="name">font</span>&gt;</span>" + '<span class="symbol">&amp;emsp;</span><span class="symbol">&amp;emsp;</span>' + "<span class="tag">&lt;<span class="name">span'</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'"+url+"'</span>&gt;</span>"+title+"<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>"+"<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&lt;<span class="regexp">/h5&gt;";</span></span><br><span class="line"><span class="regexp">           document.getElementById("top").innerHTML+=content</span></span><br><span class="line"><span class="regexp">       &#125;);</span></span><br><span class="line"><span class="regexp">   &#125;);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></div><div class="note info"><p>1、引入的 js 版本最好和 firestore.swig 中的保持一致<br>2、记得把 apiKey 和 projectId 换成你自己的。。<br>3、orderBy 这是是按 Database 中 articles 集合的 count 值降序排序<br>4、limit 限制返回的结果集数量<br>tips：Firebase 官方网站上，可全文搜索想要结果</p></div><p>参考文档： <a href="https://firebase.google.com/docs/firestore/quickstart#read_data" target="_blank" rel="noopener">Firebase 读取数据</a>、 <a href="https://firebase.google.com/docs/firestore/query-data/order-limit-data" target="_blank" rel="noopener">Firebase 对数据进行排序和限制数量</a>、 <a href="https://github.com/firebase/snippets-web/blob/8a72018c094b2d48ecbf1690787b94a01ee8fab4/firestore/test.firestore.js#L864-L864" target="_blank" rel="noopener">github 上 firestore 相关 JS 操作方法</a></p><p>完成以上步骤后，访问<strong>热榜</strong>界面，就能出现以下界面了：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/17.jpg" alt="nOYt6s.png"></p><p>文章排行有了，但是点击文章要跳转的链接还没有呢。我们也看到了，Firebase 只保存了每个文章访问量 <code>count</code> 值，没有存文章 url 信息。这就是接下来要解决的问题。</p><h3 id="保存文章url地址"><a href="#保存文章url地址" class="headerlink" title="保存文章url地址"></a>保存文章url地址</h3><p>前文说过，Next 整合了 firestore，那只能实现记录每篇文章浏览量的功能，要做<strong>热榜</strong>，似乎不满足需求啊，得改代码。</p><p>修改 <code>next/layout/_third-party/analytics/firestore.swig</code>，主要修改的地方有三处：</p><h4 id="修改文章页判断逻辑"><a href="#修改文章页判断逻辑" class="headerlink" title="修改文章页判断逻辑"></a>修改文章页判断逻辑</h4><p>以 firestore.swig 之前的代码来做排行榜功能时，发现不止文章出现在排行榜页面，连左侧点击过的链接，比如分类、标签、归档等等的链接也会显示在排行榜页面。</p><p>后来博主经过多次调试、阅读代码后，发现了问题所在，原因就出现在现有的文章页和非文章页判断逻辑上：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/18.jpg" alt="nOYamq.png"></p><p>这个逻辑只能适用于单篇文章的阅读次数统计。。不能满足我们现在的需求了，代码修改如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//https://hexo.io/zh-tw/docs/variables.html</span></span><br><span class="line">  <span class="keyword">var</span> isPost = <span class="string">'&#123;&#123; page.title &#125;&#125;'</span>.length &gt; <span class="number">0</span></span><br><span class="line">  <span class="keyword">var</span> isArchive = <span class="string">'&#123;&#123; archive &#125;&#125;'</span> === <span class="string">'true'</span></span><br><span class="line">  <span class="keyword">var</span> isCategory = <span class="string">'&#123;&#123; category &#125;&#125;'</span>.length &gt; <span class="number">0</span></span><br><span class="line">  <span class="keyword">var</span> isTag = <span class="string">'&#123;&#123; tag &#125;&#125;'</span>.length &gt; <span class="number">0</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> urlPath = <span class="string">'&#123;&#123; page.path &#125;&#125;'</span>;</span><br><span class="line">  <span class="keyword">var</span> urlFullPath = <span class="string">'&#123;&#123; page.permalink &#125;&#125;'</span>;</span><br><span class="line">  <span class="keyword">var</span> indexPath = <span class="string">'index.html'</span>; <span class="comment">//首页链接</span></span><br><span class="line">  <span class="keyword">var</span> isMenu = <span class="literal">false</span>;</span><br><span class="line">  &#123;% <span class="keyword">for</span> name, path <span class="keyword">in</span> theme.menu %&#125;</span><br><span class="line">     &#123;# 判断当前链接是否是左侧菜单栏链接 #&#125;</span><br><span class="line">     <span class="keyword">var</span> menuLink = <span class="string">'&#123;&#123; url_for(path.split('</span>||<span class="string">')[0]) | trim &#125;&#125;'</span>;</span><br><span class="line">     <span class="keyword">if</span>(urlPath.indexOf(menuLink) &gt; <span class="number">0</span> || urlPath == indexPath)&#123;</span><br><span class="line">        isMenu = <span class="literal">true</span>;</span><br><span class="line">     &#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  if (isPost) &#123; //is article page</span></span><br><span class="line">  <span class="keyword">if</span> (!isMenu) &#123; <span class="comment">// 非菜单页、非主页（即在某篇文章链接里）</span></span><br><span class="line">    <span class="keyword">var</span> title = <span class="string">'&#123;&#123; page.title &#125;&#125;'</span></span><br><span class="line">    <span class="keyword">var</span> doc = articles.doc(title)</span><br><span class="line"></span><br><span class="line">  <span class="comment">//  getCount(doc, true).then(appendCountTo($('.post-meta')))</span></span><br><span class="line">    getCount(doc, urlFullPath, <span class="literal">true</span>).then(appendCountTo($(<span class="string">'.post-wordcount'</span>)))</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="comment">// else if (!isArchive &amp;&amp; !isCategory &amp;&amp; !isTag) &#123; //is index page</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (urlPath == indexPath) &#123; <span class="comment">// 主页</span></span><br><span class="line">    <span class="keyword">var</span> titles = [] <span class="comment">//array to titles</span></span><br></pre></td></tr></table></figure></div><p>修改前后对比如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/19.jpg" alt="nOY61J.png"></p><p><font color="red">注意了：</font></p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> indexPath = <span class="string">'index.html'</span>; <span class="comment">//首页链接</span></span><br></pre></td></tr></table></figure></div><p>这是我在站点配置文件中修改后的结果</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/20.jpg" alt="nOYcc9.png"></p><p>之前的 <code>permalink: :year/:month/:day/:title/</code>，在做 SEO 优化改成了 <code>permalink: :title.html</code>，所以这里能直接用来做判断了。当然你不改的话，这里的 if 判断就得改成你现在的逻辑。</p><h4 id="修改getCount方法"><a href="#修改getCount方法" class="headerlink" title="修改getCount方法"></a>修改getCount方法</h4><p>我也尝试过在 <code>articles.doc(title)</code> 中追加设置链接的方法，参考了 <a href="https://github.com/firebase/snippets-web/blob/8a72018c094b2d48ecbf1690787b94a01ee8fab4/firestore/test.firestore.js#L864-L864" target="_blank" rel="noopener">Github</a>，比如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">articles.doc(title).set(&#123;<span class="string">'uri'</span>: urlPath, <span class="string">'url'</span>: urlFullPath&#125;);</span><br></pre></td></tr></table></figure></div><p>不过这样操作后，在 getCount 方法中就会出现其它的错误，改动比较多，偷懒一下，我就把 url 地址直接以参数的形式传递到 getCount 方法</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getCount(doc, urlFullPath, <span class="literal">true</span>)</span><br></pre></td></tr></table></figure></div><p>这样改动的就相对少了。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/21.jpg" alt="nOYgXR.png"></p><div class="note info"><p>这里用了 window.localStorage 来保存整个网站的数据，以 title 为 key，数据没有过期时间，直到手动去删除。</p></div><h4 id="修改文章阅读次数样式（非必须）"><a href="#修改文章阅读次数样式（非必须）" class="headerlink" title="修改文章阅读次数样式（非必须）"></a>修改文章阅读次数样式（非必须）</h4><p>最后的修改是为了改下文章阅读次数的样式</p><p>将 <code>firestore.swig</code> 中的 <code>$(&#39;.post-meta&#39;)</code> 替换成 <code>$(&#39;.post-wordcount&#39;)</code>；将图标 <code>$(&#39;&lt;i&gt;&#39;).addClass(&#39;fa fa-users&#39;)</code> 替换成 <code>$(&#39;&lt;i&gt;&#39;).addClass(&#39;fa fa-eye&#39;)</code>，效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/22.jpg" alt="nOYf76.png"></p><hr><p>附上 <code>firestore.swig</code> 完整代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.firestore.enable %&#125;</span><br><span class="line">  &lt;script src=<span class="string">"https://www.gstatic.com/firebasejs/4.6.0/firebase.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">  &lt;script src="https:/</span><span class="regexp">/www.gstatic.com/</span>firebasejs/<span class="number">4.6</span><span class="number">.0</span>/firebase-firestore.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">  &#123;% if theme.firestore.bluebird %&#125;</span></span><br><span class="line"><span class="string">    &lt;script src="</span>https:<span class="comment">//cdnjs.cloudflare.com/ajax/libs/bluebird/3.5.1/bluebird.core.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">      firebase.initializeApp(&#123;</span><br><span class="line">        apiKey: <span class="string">'&#123;&#123; theme.firestore.apiKey &#125;&#125;'</span>,</span><br><span class="line">        projectId: <span class="string">'&#123;&#123; theme.firestore.projectId &#125;&#125;'</span></span><br><span class="line">      &#125;)</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">getCount</span>(<span class="params">doc, url, increaseCount</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//increaseCount will be false when not in article page</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> doc.get().then(<span class="function"><span class="keyword">function</span> (<span class="params">d</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> count</span><br><span class="line">          <span class="keyword">if</span> (!d.exists) &#123; <span class="comment">//has no data, initialize count</span></span><br><span class="line">            <span class="keyword">if</span> (increaseCount) &#123;</span><br><span class="line">              doc.set(&#123;</span><br><span class="line">                count: <span class="number">1</span>,</span><br><span class="line">                <span class="string">'url'</span>: url</span><br><span class="line">              &#125;)</span><br><span class="line">              count = <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">              count = <span class="number">0</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">else</span> &#123; <span class="comment">//has data</span></span><br><span class="line">            count = d.data().count</span><br><span class="line">            <span class="keyword">if</span> (increaseCount) &#123;</span><br><span class="line">              <span class="keyword">if</span> (!(<span class="built_in">window</span>.localStorage &amp;&amp; <span class="built_in">window</span>.localStorage.getItem(title))) &#123; <span class="comment">//if first view this article</span></span><br><span class="line">                doc.set(&#123; <span class="comment">//increase count</span></span><br><span class="line">                  count: count + <span class="number">1</span></span><br><span class="line">                &#125;)</span><br><span class="line">                count++</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (<span class="built_in">window</span>.localStorage &amp;&amp; increaseCount) &#123; <span class="comment">//mark as visited</span></span><br><span class="line">            localStorage.setItem(title, <span class="literal">true</span>)</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">return</span> count</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="function"><span class="keyword">function</span> <span class="title">appendCountTo</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">count</span>) </span>&#123;</span><br><span class="line">          $(el).append(</span><br><span class="line">            $(<span class="string">'&lt;span&gt;'</span>).addClass(<span class="string">'post-visitors-count'</span>).append(</span><br><span class="line">              $(<span class="string">'&lt;span&gt;'</span>).addClass(<span class="string">'post-meta-divider'</span>).text(<span class="string">'|'</span>)</span><br><span class="line">            ).append(</span><br><span class="line">              $(<span class="string">'&lt;span&gt;'</span>).addClass(<span class="string">'post-meta-item-icon'</span>).append(</span><br><span class="line">               <span class="comment">// $('&lt;i&gt;').addClass('fa fa-users')</span></span><br><span class="line">                $(<span class="string">'&lt;i&gt;'</span>).addClass(<span class="string">'fa fa-eye'</span>)</span><br><span class="line">              )</span><br><span class="line">              ).append($(<span class="string">'&lt;span&gt;'</span>).text(<span class="string">'&#123;&#123; __("post.visitors")&#125;&#125; '</span> + count + <span class="string">' 次'</span>))</span><br><span class="line">          )</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> db = firebase.firestore()</span><br><span class="line">      <span class="keyword">var</span> articles = db.collection(<span class="string">'&#123;&#123; theme.firestore.collection &#125;&#125;'</span>)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//https://hexo.io/zh-tw/docs/variables.html</span></span><br><span class="line">      <span class="keyword">var</span> isPost = <span class="string">'&#123;&#123; page.title &#125;&#125;'</span>.length &gt; <span class="number">0</span></span><br><span class="line">      <span class="keyword">var</span> isArchive = <span class="string">'&#123;&#123; archive &#125;&#125;'</span> === <span class="string">'true'</span></span><br><span class="line">      <span class="keyword">var</span> isCategory = <span class="string">'&#123;&#123; category &#125;&#125;'</span>.length &gt; <span class="number">0</span></span><br><span class="line">      <span class="keyword">var</span> isTag = <span class="string">'&#123;&#123; tag &#125;&#125;'</span>.length &gt; <span class="number">0</span></span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> urlPath = <span class="string">'&#123;&#123; page.path &#125;&#125;'</span>;</span><br><span class="line">      <span class="keyword">var</span> urlFullPath = <span class="string">'&#123;&#123; page.permalink &#125;&#125;'</span>;</span><br><span class="line">      <span class="keyword">var</span> indexPath = <span class="string">'index.html'</span>; <span class="comment">//首页链接</span></span><br><span class="line">      <span class="keyword">var</span> isMenu = <span class="literal">false</span>;</span><br><span class="line">      &#123;% <span class="keyword">for</span> name, path <span class="keyword">in</span> theme.menu %&#125;</span><br><span class="line">         &#123;# 判断当前链接是否是左侧菜单栏链接 #&#125;</span><br><span class="line">         <span class="keyword">var</span> menuLink = <span class="string">'&#123;&#123; url_for(path.split('</span>||<span class="string">')[0]) | trim &#125;&#125;'</span>;</span><br><span class="line">         <span class="keyword">if</span>(urlPath.indexOf(menuLink) &gt; <span class="number">0</span> || urlPath == indexPath)&#123;</span><br><span class="line">            isMenu = <span class="literal">true</span>;</span><br><span class="line">         &#125;</span><br><span class="line">      &#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  if (isPost) &#123; //is article page</span></span><br><span class="line">      <span class="keyword">if</span> (!isMenu) &#123; <span class="comment">// 非菜单页、非主页（即在某篇文章链接里）</span></span><br><span class="line">        <span class="keyword">var</span> title = <span class="string">'&#123;&#123; page.title &#125;&#125;'</span></span><br><span class="line">        <span class="keyword">var</span> doc = articles.doc(title)</span><br><span class="line"></span><br><span class="line">      <span class="comment">//  getCount(doc, true).then(appendCountTo($('.post-meta')))</span></span><br><span class="line">        getCount(doc, urlFullPath, <span class="literal">true</span>).then(appendCountTo($(<span class="string">'.post-wordcount'</span>)))</span><br><span class="line">      &#125;</span><br><span class="line">     <span class="comment">// else if (!isArchive &amp;&amp; !isCategory &amp;&amp; !isTag) &#123; //is index page</span></span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (urlPath == indexPath) &#123; <span class="comment">// 主页</span></span><br><span class="line">        <span class="keyword">var</span> titles = [] <span class="comment">//array to titles</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> postsstr = <span class="string">'&#123;% for post in page.posts %&#125;titles.push("&#123;&#123; post.title &#125;&#125;");&#123;% endfor %&#125;'</span> <span class="comment">//if you have a better way to get titles of posts, please change it</span></span><br><span class="line">        <span class="built_in">eval</span>(postsstr)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> promises = titles.map(<span class="function"><span class="keyword">function</span> (<span class="params">title</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> articles.doc(title)</span><br><span class="line">        &#125;).map(<span class="function"><span class="keyword">function</span> (<span class="params">doc</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">return</span> getCount(doc)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">Promise</span>.all(promises).then(<span class="function"><span class="keyword">function</span> (<span class="params">counts</span>) </span>&#123;</span><br><span class="line">          <span class="comment">// var metas = $('.post-meta')</span></span><br><span class="line">          <span class="keyword">var</span> metas = $(<span class="string">'.post-wordcount'</span>)</span><br><span class="line">          counts.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">val, idx</span>) </span>&#123;</span><br><span class="line">            appendCountTo(metas[idx])(val)</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)()</span><br><span class="line">  &lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure></div><h3 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h3><p>至于<strong>热榜</strong>页面的样式布局，可在其 <code>index.md</code> 文件中修改即可</p><blockquote><p>经过博主<strong>三四天</strong>攻坚，以参阅 Google 官方文档为主，至此，文章热榜功能已经全部完成！👏👏👏</p></blockquote><p>最终效果：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/29/23.jpg" alt="nOYOBt.png"></p><div class="note danger"><p>基于 Firestore 做的排行榜也有个缺点，对于不能访问谷歌的用户来说，这个页面是不能正常显示的。</p></div><p>虽然 Firebase 具有<a href="https://firebase.google.com/docs/firestore/manage-data/enable-offline" target="_blank" rel="noopener">离线访问数据</a>功能，不过这是针对短期不能联网的情况。</p><p>如果需要做到国内用户普遍都能访问，那好像就得依赖于 <code>Leancloud</code> 实现了，不知道大家有什么其他方案，欢迎留言讨论。</p><p>（本文完）</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> Google </tag>
            
            <tag> 排行榜 </tag>
            
            <tag> 阅读量 </tag>
            
            <tag> FireStore </tag>
            
            <tag> LeanCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT中文链接转拼音</title>
      <link href="/posts/781435405.html"/>
      <url>/posts/781435405.html</url>
      
        <content type="html"><![CDATA[<p>以中文为标题的文章，生成的网站链接也是包含中文的，复制后的链接是一堆字符串编码，非常不利于阅读，也不简洁：</p><p><a href="http://localhost:4000/2019/08/13/tech/hexo/Hexo%20Next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%93%88%E6%9E%97%E6%91%87%E7%89%B9%E6%95%88/" target="_blank" rel="noopener">http://localhost:4000/2019/08/13/tech/hexo/Hexo%20Next%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E5%93%88%E6%9E%97%E6%91%87%E7%89%B9%E6%95%88/</a></p><p>包含中文的网站链接，同样不利于 SEO，而且标题修改后，URL 也会重新生成。</p><a id="more"></a><p>可使用如下两种方式解决</p><h3 id="hexo-permalink-pinyin-插件"><a href="#hexo-permalink-pinyin-插件" class="headerlink" title="hexo-permalink-pinyin 插件"></a>hexo-permalink-pinyin 插件</h3><p>github地址：</p><p><a href="https://github.com/viko16/hexo-permalink-pinyin" class="LinkCard" target="_blank" rel="noopener">hexo-permalink-pinyin</a></p><p>这款插件，在生成博文时生成中文拼音的链接。安装步骤如下：</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure></div><h4 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h4><p>在站点配置文件中新增以下配置：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_pinyin:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">separator:</span> <span class="string">'-'</span>   <span class="comment"># default: '-'</span></span><br></pre></td></tr></table></figure></div><div class="note info"><p>enable：是否启用插件<br>separator：指定分隔符，默认为’-‘</p></div><p>项目重新 clean，重新启动即可查看效果</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/28/1.jpg" alt="nOtnCF.png"></p><h3 id="hexo-abbrlink-插件（推荐）"><a href="#hexo-abbrlink-插件（推荐）" class="headerlink" title="hexo-abbrlink 插件（推荐）"></a>hexo-abbrlink 插件（推荐）</h3><p>参考我的这篇文章：</p><p><a href="https://www.liaofuzhan.com/posts/4084686398.html" class="LinkCard">Hexo-abbrlink 生成唯一永久文章链接</a></p><p>Hexo-abbrlink 文档：</p><p><a href="https://github.com/rozbo/hexo-abbrlink" class="LinkCard" target="_blank" rel="noopener">hexo-abbrlink</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> abbrlink </tag>
            
            <tag> 链接 </tag>
            
            <tag> 中文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT主题之「文章置顶、精品」</title>
      <link href="/posts/1076109730.html"/>
      <url>/posts/1076109730.html</url>
      
        <content type="html"><![CDATA[<h3 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h3><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>手动对相关文件进行修改，参考：</p><p><a href="https://zhwhong.cn/2017/03/23/deal-with-hexo-article-top-problem/" class="LinkCard" target="_blank" rel="noopener">解决 hexo 文章置顶问题</a></p><a id="more"></a><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>参考 <a href="https://github.com/netcan/hexo-generator-index-pin-top" target="_blank" rel="noopener">github</a> 上项目，命令操作如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></div><p>在需要置顶的文章 Front-matter 加上 <code>top: true</code> 或者 <code>top: 任意数字</code>，比如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:  java应用导致JVM内存溢出（OOM）的问题</span><br><span class="line">top: 2</span><br><span class="line">tags:</span><br><span class="line"> - JVM</span><br><span class="line">categories:</span><br><span class="line"> - java</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div><div class="note info"><p>top 中数字越大，文章越靠前</p></div><p>文章置顶功能已实现。不过还缺失置顶图标。</p><h3 id="设置置顶图标"><a href="#设置置顶图标" class="headerlink" title="设置置顶图标"></a>设置置顶图标</h3><p>打开 <code>next/layout/_macro/</code> 下的 <code>post.swig</code> 文件，在 <code>&lt;div class=&quot;post-meta&quot;&gt;</code> 的第一个 <code>&lt;span&gt;</code> 标签下，插入代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.top %&#125;</span><br><span class="line">    &lt;i class="fa fa-thumb-tack"&gt;&lt;/i&gt;</span><br><span class="line">    &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">    &lt;span class="post-meta-divider"&gt;|&lt;/span&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure></div><p>代码位置截图：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/30/1.jpg" alt="nOtR2Q.png"></p><p>最终文章置顶效果图如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/30/2.jpg" alt="nOtoV0.png"></p><p>至此，文章置顶功能完成。</p><h3 id="精品文章"><a href="#精品文章" class="headerlink" title="精品文章"></a>精品文章</h3><p>相对而言就比较简单了</p><p>1、在 <code>next/layout/_macro/</code> 路径，找到 <code>post.swig</code>，在前文<code>置顶</code>功能后边，加上如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.essential%&#125;</span><br><span class="line">     &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-meta-item-icon"</span>&gt;</span><br><span class="line">         &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-newspaper-o jingping"</span>&gt;精品&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">     &lt;/</span>span&gt;</span><br><span class="line">     &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-meta-divider"</span>&gt;|&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp"> &#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure></div><p>2、在 <code>next/source/css/_custom/custom.styl</code> 中，增加如下样式：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.jingping&#123;</span><br><span class="line">  background : #00a8c3;</span><br><span class="line">  padding:<span class="number">2</span>px <span class="number">4</span>px <span class="number">2</span>px <span class="number">4</span>px;</span><br><span class="line">  color: #fff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>3、在需要设置精品的文章 md 文件中，加入如下代码</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">essential: <span class="literal">true</span></span><br></pre></td></tr></table></figure></div><p>到此就完成了精品文章的设置</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 样式 </tag>
            
            <tag> 置顶 </tag>
            
            <tag> 精品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Next主题「哈林摇」特效</title>
      <link href="/posts/2186938821.html"/>
      <url>/posts/2186938821.html</url>
      
        <content type="html"><![CDATA[<h3 id="下载js文件"><a href="#下载js文件" class="headerlink" title="下载js文件"></a>下载js文件</h3><p><a href="https://github.com/zhengxiaopeng/High" target="_blank" rel="noopener">github</a> 下载 high.js，改名 high.swig，放在 next/layout/_macro/ 目录下，并在该文件首末拷贝如下代码：</p><p>文件开头：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a title=<span class="string">"收藏到书签，偶尔High一下^_^"</span> rel=<span class="string">"alternate"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"mw-harlem_shake_slow wobble shake"</span> href=<span class="string">'</span></span><br></pre></td></tr></table></figure></div><a id="more"></a><p>文件末尾：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'&lt;i class="fa fa-music"&gt;&lt;/i&gt; High&lt;/a&gt;</span></span><br></pre></td></tr></table></figure></div><p>即用这两段代码包裹 high.swig 文件，像这样</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="HTML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">'high.js 里的代码复制进来'</span>&gt;</span>High<span class="tag">&lt;/<span class="name">a</span>&gt;</span>`</span><br></pre></td></tr></table></figure></div><p>最终的 <code>high.swig</code> 代码如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line">&lt;a title=<span class="string">"收藏到书签，偶尔High一下^_^"</span> rel=<span class="string">"alternate"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"mw-harlem_shake_slow wobble shake"</span> href=<span class="string">' </span></span><br><span class="line"><span class="string"> javascript:(</span></span><br><span class="line"><span class="string">   /*</span></span><br><span class="line"><span class="string">    * Copyright (C) 2015 Rocko (rocko.xyz) &lt;rocko.zxp@gmail.com&gt;</span></span><br><span class="line"><span class="string">    *</span></span><br><span class="line"><span class="string">    * Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="string">    * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="string">    * You may obtain a copy of the License at</span></span><br><span class="line"><span class="string">    *</span></span><br><span class="line"><span class="string">    *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="string">    *</span></span><br><span class="line"><span class="string">    * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="string">    * distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="string">    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="string">    * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="string">    * limitations under the License.</span></span><br><span class="line"><span class="string">    */</span></span><br><span class="line"><span class="string">   function go() &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   var songs = [</span></span><br><span class="line"><span class="string">               "your_music_path_1",</span></span><br><span class="line"><span class="string">               "your_music_path_2",</span></span><br><span class="line"><span class="string">               "......"</span></span><br><span class="line"><span class="string">   ];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">   function c() &#123;</span></span><br><span class="line"><span class="string">       var e = document.createElement("link");</span></span><br><span class="line"><span class="string">       e.setAttribute("type", "text/css");</span></span><br><span class="line"><span class="string">       e.setAttribute("rel", "stylesheet");</span></span><br><span class="line"><span class="string">       e.setAttribute("href", f);</span></span><br><span class="line"><span class="string">       e.setAttribute("class", l);</span></span><br><span class="line"><span class="string">       document.body.appendChild(e)</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function h() &#123;</span></span><br><span class="line"><span class="string">       var e = document.getElementsByClassName(l);</span></span><br><span class="line"><span class="string">       for (var t = 0; t &lt; e.length; t++) &#123;</span></span><br><span class="line"><span class="string">           document.body.removeChild(e[t])</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function p() &#123;</span></span><br><span class="line"><span class="string">       var e = document.createElement("div");</span></span><br><span class="line"><span class="string">       e.setAttribute("class", a);</span></span><br><span class="line"><span class="string">       document.body.appendChild(e);</span></span><br><span class="line"><span class="string">       setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">           document.body.removeChild(e)</span></span><br><span class="line"><span class="string">       &#125;, 100)</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function d(e) &#123;</span></span><br><span class="line"><span class="string">       return &#123;</span></span><br><span class="line"><span class="string">           height : e.offsetHeight,</span></span><br><span class="line"><span class="string">           width : e.offsetWidth</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function v(i) &#123;</span></span><br><span class="line"><span class="string">       var s = d(i);</span></span><br><span class="line"><span class="string">       return s.height &gt; e &amp;&amp; s.height &lt; n &amp;&amp; s.width &gt; t &amp;&amp; s.width &lt; r</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function m(e) &#123;</span></span><br><span class="line"><span class="string">       var t = e;</span></span><br><span class="line"><span class="string">       var n = 0;</span></span><br><span class="line"><span class="string">       while (!!t) &#123;</span></span><br><span class="line"><span class="string">           n += t.offsetTop;</span></span><br><span class="line"><span class="string">           t = t.offsetParent</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">       return n</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function g() &#123;</span></span><br><span class="line"><span class="string">       var e = document.documentElement;</span></span><br><span class="line"><span class="string">       if (!!window.innerWidth) &#123;</span></span><br><span class="line"><span class="string">           return window.innerHeight</span></span><br><span class="line"><span class="string">       &#125; else if (e &amp;&amp; !isNaN(e.clientHeight)) &#123;</span></span><br><span class="line"><span class="string">           return e.clientHeight</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">       return 0</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function y() &#123;</span></span><br><span class="line"><span class="string">       if (window.pageYOffset) &#123;</span></span><br><span class="line"><span class="string">           return window.pageYOffset</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">       return Math.max(document.documentElement.scrollTop, document.body.scrollTop)</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function E(e) &#123;</span></span><br><span class="line"><span class="string">       var t = m(e);</span></span><br><span class="line"><span class="string">       return t &gt;= w &amp;&amp; t &lt;= b + w</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function S() &#123;</span></span><br><span class="line"><span class="string">       var e = document.getElementById("audio_element_id");</span></span><br><span class="line"><span class="string">       if(e != null)&#123;</span></span><br><span class="line"><span class="string">           var index = parseInt(e.getAttribute("curSongIndex"));</span></span><br><span class="line"><span class="string">           if(index &gt; songs.length - 2) &#123;</span></span><br><span class="line"><span class="string">               index = 0;</span></span><br><span class="line"><span class="string">           &#125; else &#123;</span></span><br><span class="line"><span class="string">               index++;</span></span><br><span class="line"><span class="string">           &#125;</span></span><br><span class="line"><span class="string">           e.setAttribute("curSongIndex", index);</span></span><br><span class="line"><span class="string">           N();</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">       e.src = i;</span></span><br><span class="line"><span class="string">       e.play()</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function x(e) &#123;</span></span><br><span class="line"><span class="string">       e.className += " " + s + " " + o</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function T(e) &#123;</span></span><br><span class="line"><span class="string">       e.className += " " + s + " " + u[Math.floor(Math.random() * u.length)]</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function N() &#123;</span></span><br><span class="line"><span class="string">       var e = document.getElementsByClassName(s);</span></span><br><span class="line"><span class="string">       var t = new RegExp("\\b" + s + "\\b");</span></span><br><span class="line"><span class="string">       for (var n = 0; n &lt; e.length; ) &#123;</span></span><br><span class="line"><span class="string">           e[n].className = e[n].className.replace(t, "")</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   function initAudioEle() &#123;</span></span><br><span class="line"><span class="string">       var e = document.getElementById("audio_element_id");</span></span><br><span class="line"><span class="string">       if(e === null)&#123;</span></span><br><span class="line"><span class="string">           e = document.createElement("audio");</span></span><br><span class="line"><span class="string">           e.setAttribute("class", l);</span></span><br><span class="line"><span class="string">           e.setAttribute("curSongIndex", 0);</span></span><br><span class="line"><span class="string">           e.id = "audio_element_id";</span></span><br><span class="line"><span class="string">           e.loop = false;</span></span><br><span class="line"><span class="string">           e.bgcolor = 0;</span></span><br><span class="line"><span class="string">           e.addEventListener("canplay", function() &#123;</span></span><br><span class="line"><span class="string">           setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">               x(k)</span></span><br><span class="line"><span class="string">           &#125;, 500);</span></span><br><span class="line"><span class="string">           setTimeout(function() &#123;</span></span><br><span class="line"><span class="string">               N();</span></span><br><span class="line"><span class="string">               p();</span></span><br><span class="line"><span class="string">               for (var e = 0; e &lt; O.length; e++) &#123;</span></span><br><span class="line"><span class="string">                   T(O[e])</span></span><br><span class="line"><span class="string">               &#125;</span></span><br><span class="line"><span class="string">           &#125;, 15500)</span></span><br><span class="line"><span class="string">       &#125;, true);</span></span><br><span class="line"><span class="string">       e.addEventListener("ended", function() &#123;</span></span><br><span class="line"><span class="string">           N();</span></span><br><span class="line"><span class="string">           h();</span></span><br><span class="line"><span class="string">           go();</span></span><br><span class="line"><span class="string">       &#125;, true);</span></span><br><span class="line"><span class="string">       e.innerHTML = " &lt;p&gt;If you are reading this, it is because your browser does not support the audio element. We recommend that you get a new browser.&lt;/p&gt; &lt;p&gt;";</span></span><br><span class="line"><span class="string">       document.body.appendChild(e);</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">   initAudioEle();</span></span><br><span class="line"><span class="string">   var e = 30;</span></span><br><span class="line"><span class="string">   var t = 30;</span></span><br><span class="line"><span class="string">   var n = 350;</span></span><br><span class="line"><span class="string">   var r = 350;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   var curSongIndex = parseInt(document.getElementById("audio_element_id").getAttribute("curSongIndex"));</span></span><br><span class="line"><span class="string">   var i = songs[curSongIndex];</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">   var s = "mw-harlem_shake_me";</span></span><br><span class="line"><span class="string">   var o = "im_first";</span></span><br><span class="line"><span class="string">   var u = ["im_drunk", "im_baked", "im_trippin", "im_blown"];</span></span><br><span class="line"><span class="string">   var a = "mw-strobe_light";</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   /* harlem-shake-style.css，替换成你的位置，也可以直接使用：//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css */</span></span><br><span class="line"><span class="string">   var f = "//s3.amazonaws.com/moovweb-marketing/playground/harlem-shake-style.css";</span></span><br><span class="line"><span class="string">   </span></span><br><span class="line"><span class="string">   var l = "mw_added_css";</span></span><br><span class="line"><span class="string">   var b = g();</span></span><br><span class="line"><span class="string">   var w = y();</span></span><br><span class="line"><span class="string">   var C = document.getElementsByTagName("*");</span></span><br><span class="line"><span class="string">   var k = null;</span></span><br><span class="line"><span class="string">   for (var L = 0; L &lt; C.length; L++) &#123;</span></span><br><span class="line"><span class="string">       var A = C[L];</span></span><br><span class="line"><span class="string">       if (v(A)) &#123;</span></span><br><span class="line"><span class="string">           if (E(A)) &#123;</span></span><br><span class="line"><span class="string">               k = A;</span></span><br><span class="line"><span class="string">               break</span></span><br><span class="line"><span class="string">           &#125;</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">   if (A === null) &#123;</span></span><br><span class="line"><span class="string">       console.warn("Could not find a node of the right size. Please try a different page.");</span></span><br><span class="line"><span class="string">       return</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">   c();</span></span><br><span class="line"><span class="string">   S();</span></span><br><span class="line"><span class="string">   var O = [];</span></span><br><span class="line"><span class="string">   for (var L = 0; L &lt; C.length; L++) &#123;</span></span><br><span class="line"><span class="string">       var A = C[L];</span></span><br><span class="line"><span class="string">       if (v(A)) &#123;</span></span><br><span class="line"><span class="string">           O.push(A)</span></span><br><span class="line"><span class="string">       &#125;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">   &#125;)()'</span>&lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-music"</span>&gt;&lt;<span class="regexp">/i&gt; High&lt;/</span>a&gt;</span><br></pre></td></tr></table></figure></div><div class="note danger"><p>Tips：请注意修改 <code>high.js</code> 里的歌曲配置信息: songs[…]</p></div><p>歌曲可配置多首，能循环播放，例如：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> songs = [</span><br><span class="line">    <span class="string">"http://s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3"</span>,</span><br><span class="line">    <span class="string">"http://s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3"</span>,</span><br><span class="line">    <span class="string">"http://s3.amazonaws.com/moovweb-marketing/playground/harlem-shake.mp3"</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure></div><blockquote><p>这首很嗨的歌，参考<a href="http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/" target="_blank" rel="noopener">这篇文章</a>，有视频，可以看一下效果</p></blockquote><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>在 <code>next/layout/_macro/sidebar.swig</code> 引用 <code>high.swig</code>，如下 7、8 行代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.rss %&#125;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"feed-link motion-element"</span>&gt;</span><br><span class="line">      &lt;a href=<span class="string">"&#123;&#123; url_for(theme.rss) &#125;&#125;"</span> rel=<span class="string">"alternate"</span>&gt;</span><br><span class="line">        &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-rss"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">          RSS</span></span><br><span class="line"><span class="regexp">      &lt;/</span>a&gt;</span><br><span class="line">      &lt;!-- 为Hexo Next主题添加哈林摇特效  --&gt;</span><br><span class="line">      &#123;% include <span class="string">'high.swig'</span> %&#125;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure></div><h3 id="样式修改"><a href="#样式修改" class="headerlink" title="样式修改"></a>样式修改</h3><p>我用的是 Pisces 主题，修改 <code>next/source/css/_schemes/Pisces/_sidebar.styl</code> 将 <code>display</code> 属性 <code>block</code> 改为 <code>inline-block</code>，如下所示：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.feed-link a &#123;</span><br><span class="line">  <span class="comment">//display: block;</span></span><br><span class="line">  display: inline-block;</span><br><span class="line">  color: $orange;</span><br><span class="line">  border: none;</span><br><span class="line"></span><br><span class="line">  &amp;:hover &#123;</span><br><span class="line">    background: none;</span><br><span class="line">    color: darken($orange, <span class="number">20</span>%);</span><br><span class="line"></span><br><span class="line">    i &#123; <span class="attr">color</span>: darken($orange, <span class="number">20</span>%); &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>这样做的目的是为了达成这样的效果：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/33/1.jpg" alt="nONQJS.png"></p><p>到这里就大功告成了，嗨一把吧~ <strong><a href="https://www.liaofuzhan.com/">点我</a></strong></p><p><a href="https://www.liaofuzhan.com" class="LinkCard">首页哈林摇特效</a></p><blockquote><p>PS: 由于之前魔改主题，加了很多样式，有点冲突，导致效果不是那么协调，不过也还凑合吧…</p></blockquote><p>参考：</p><p><a href="http://www.iamlj.com/2016/08/add-special-effect-harlem-shake-for-hexo/" target="_blank" rel="noopener">为 Hexo Next 添加哈林摇特效（五）</a></p><p><a href="https://github.com/zhengxiaopeng/High" target="_blank" rel="noopener">zhengxiaopeng 的 github</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 特效 </tag>
            
            <tag> 歌曲 </tag>
            
            <tag> 哈林摇 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT主题集成Gitalk评论</title>
      <link href="/posts/4104854797.html"/>
      <url>/posts/4104854797.html</url>
      
        <content type="html"><![CDATA[<p>Gitalk 是一款基于 Github Issue 和 Preact 开发的评论插件，评论时需使用 Github 账号进行登录，另一款 Gitment 与之类似。这里记录下在 NexT 主题中集成 Gitalk 的相关步骤。</p><a id="more"></a><p><a href="https://gitalk.github.io/" class="LinkCard" target="_blank" rel="noopener">GITALK 评论插件</a></p><h3 id="注册应用-（Register-Application）"><a href="#注册应用-（Register-Application）" class="headerlink" title="注册应用 （Register Application）"></a>注册应用 （Register Application）</h3><blockquote><p>可直接打开：<a href>https://github.com/settings/applications/new</a> 进行注册（此操作需要登录）</p></blockquote><ol><li>登录 github，点击个人头像 –&gt; Settings</li></ol><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/34/1.jpg" alt="nONWFK.png"></p><ol start="2"><li>选择 Developer settings –&gt; OAuth Apps –&gt; 点击 new OAuth App按钮。打开如下页面：</li></ol><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/34/2.jpg" alt="nONXY8.png"></p><ol start="3"><li>注册成功后，页面跳转，填写如下参数：</li></ol><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="YML"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 参数说明:</span></span><br><span class="line"></span><br><span class="line"><span class="string">Application</span> <span class="string">name：</span> <span class="comment"># 应用名称，随意填写</span></span><br><span class="line"></span><br><span class="line"><span class="string">Homepage</span> <span class="string">URL：</span> <span class="comment"># 网站URL，如 https://www.liaofuzhan.com</span></span><br><span class="line"></span><br><span class="line"><span class="string">Application</span> <span class="string">description</span> <span class="comment"># 描述，随意填写</span></span><br><span class="line"></span><br><span class="line"><span class="string">Authorization</span> <span class="string">callback</span> <span class="string">URL：#</span> <span class="string">网站URL，https://www.liaofuzhan.com</span></span><br></pre></td></tr></table></figure></div><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/34/3.jpg" alt="nOUSyj.png"></p><blockquote><p>其中 <code>Client ID</code> 和 <code>Client Secret</code> 在后面的配置中用到</p></blockquote><h3 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h3><p>以下操作为 next 主题的 gitalk 评论系统搭建，步骤大概如下：</p><ol><li>创建 gitalk.swig 文件</li></ol><p>定位到路径 <code>next/layout/_third-party/comments/</code>，创建 <code>gitalk.swig</code> 文件，内容：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">   &#123;% <span class="keyword">if</span> page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class="line">   &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.css"</span>&gt;</span><br><span class="line">   &lt;script src=<span class="string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">   &lt;script src="https:/</span><span class="regexp">/cdn.bootcss.com/</span>blueimp-md5/<span class="number">2.10</span><span class="number">.0</span>/js/md5.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">   &lt;script type="</span>text/javascript<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        var gitalk = new Gitalk(&#123;</span></span><br><span class="line"><span class="string">          clientID: '&#123;&#123; theme.gitalk.ClientID &#125;&#125;',</span></span><br><span class="line"><span class="string">          clientSecret: '&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;',</span></span><br><span class="line"><span class="string">          repo: '&#123;&#123; theme.gitalk.repo &#125;&#125;',</span></span><br><span class="line"><span class="string">          owner: '&#123;&#123; theme.gitalk.githubID &#125;&#125;',</span></span><br><span class="line"><span class="string">          admin: ['&#123;&#123; theme.gitalk.adminUser &#125;&#125;'],</span></span><br><span class="line"><span class="string">          id: md5(window.location.pathname),</span></span><br><span class="line"><span class="string">          distractionFreeMode: '&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;'</span></span><br><span class="line"><span class="string">        &#125;)</span></span><br><span class="line"><span class="string">        gitalk.render('gitalk-container')</span></span><br><span class="line"><span class="string">       &lt;/script&gt;</span></span><br><span class="line"><span class="string">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure></div><p>这里，解决了 <strong>label</strong> 长度不能超过 <strong>50</strong> 的问题的 issue, 用了一个 md5，同时采用了 windows.location.pathname 来区分不同的文章。</p><p>这里的 <code>ClientID</code> 和 <code>ClientSecret</code> 就是刚才创建的APP的对应东西</p><p>最后你的网站需要建立一个 repo 和一个对应的 app，来装载 comments。上面的代码你不需要修改，我们在后面的 config 里面再来具体配置，第一步完成。</p><ol start="2"><li>引入 gitalk.swig</li></ol><p>在同级目录下的 index.swig 里面加入</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;gitalk.swig&apos; %&#125;</span><br></pre></td></tr></table></figure></div><ol start="3"><li>修改 comments.swig，添加 gitalk</li></ol><p>修改 <code>next/layout/_partials/comments.swig</code>，添加内容如下，与前面的 elseif 同一级别上：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.gitalk.enable %&#125;</span><br><span class="line"> &lt;div id=&quot;gitalk-container&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></div><ol start="4"><li>新建 gitalk.styl 样式</li></ol><p>定位到 <code>next/source/css/_common/components/third-party/</code> 然后创建 <code>gitalk.styl</code> 文件，内容如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="CSS"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gt-header</span> <span class="selector-tag">a</span>, <span class="selector-class">.gt-comments</span> <span class="selector-tag">a</span>, <span class="selector-class">.gt-popup</span> <span class="selector-tag">a</span></span><br><span class="line">  <span class="selector-tag">border-bottom</span>: <span class="selector-tag">none</span>;</span><br><span class="line"><span class="selector-class">.gt-container</span> <span class="selector-class">.gt-popup</span> <span class="selector-class">.gt-action</span><span class="selector-class">.is--active</span><span class="selector-pseudo">:before</span></span><br><span class="line">  <span class="selector-tag">top</span>: 0<span class="selector-class">.7em</span>;</span><br></pre></td></tr></table></figure></div><ol start="5"><li>引入 gitalk.styl 样式</li></ol><p>然后在同级别的 <code>third-party.styl</code> 中导入：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;gitalk&quot;;</span><br></pre></td></tr></table></figure></div><ol start="6"><li>修改主题配置文件</li></ol><p>在主题配置文件 <code>theme/next/_config.yml</code> 中添加内容：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  githubID: leafjame</span><br><span class="line">  repo: leafjame.github.io</span><br><span class="line">  ClientID: 0dea18fbxxxx350441</span><br><span class="line">  ClientSecret: 866c25axxxx7dd51abdc8f2b18bcab4</span><br><span class="line">  adminUser: leafjame</span><br><span class="line">  distractionFreeMode: true</span><br></pre></td></tr></table></figure></div><p>说明：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="PLAIN"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">githubID : 你的 github ID，用来说明你是个人还是某个组织的；</span><br><span class="line"></span><br><span class="line">repo : 你要新建一个 repo 来保存这些 comments，这里 repo 就随便新建一个就行；</span><br><span class="line"></span><br><span class="line">ClientID 和 ClientSecret : 就是文章开头新建 APP 的那些，请注意，这个一定要和你部署的网站的对应起来，一个网站对应一个这个 client；</span><br><span class="line"></span><br><span class="line">adminUser: 你的admin 用户名，通常就是你自己</span><br></pre></td></tr></table></figure></div><p>以上就是 next 中添加 gitalk 评论的配置步骤。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> Gitalk </tag>
            
            <tag> 评论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java内存区域&amp;内存模型</title>
      <link href="/posts/3268644462.html"/>
      <url>/posts/3268644462.html</url>
      
        <content type="html"><![CDATA[<p>Java作为一种面向对象、跨平台的语言，其对象、内存等一直是比较难懂的点。在谈及JVM时，Java内存区域（内存结构）和 Java内存模型（JMM）都是必不可少的，但是很多人把这俩概念都搞混了：Java内存区域和Java内存模型是<strong>两个概念</strong>。</p><p>内存区域：指JVM运行时将数据分区域存储，强调对内存空间的划分。</p><p>内存模型：定义了线程和主内存之间的抽象关系，即JMM定义了JVM在计算机内存(RAM)中的工作方式。</p><a id="more"></a><h2 id="Java内存区域"><a href="#Java内存区域" class="headerlink" title="Java内存区域"></a>Java内存区域</h2><p>JVM在执行Java程序的过程中会把它所管理的内存划分为若干个不同的数据区域，这些区域都有各自的用途，有的区域随着虚拟机进程的启动而存在，有些区域则是依赖用户线程的启动和结束而建立和销毁。可参考Oracle官方：</p><p><a href="https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-2.html#jvms-2.5.4" class="LinkCard" target="_blank" rel="noopener">The Structure of the Java Virtual Machine</a></p><p>JVM运行时内存区域结构如下：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/1.jpg" alt="n0d4uF.png"></p><p>图片摘自周志明《深入理解Java虚拟机——JVM高级特性与最佳实践》</p><p>其中：程序计数器、Java虚拟机栈、本地方法栈为<strong>线程私有</strong>；Java堆、方法区、执行引擎、本地库接口为<strong>线程共享</strong>的内存区域。</p><p>附上一张JDK8 之后的 JVM 内存布局，摘自阿里巴巴《码出高效》：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/2.jpg" alt="n0rmQ0.png"></p><h3 id="程序计数器（Program-Counter-Register）"><a href="#程序计数器（Program-Counter-Register）" class="headerlink" title="程序计数器（Program Counter Register）"></a>程序计数器（Program Counter Register）</h3><p>程序计数器是一块较小的内存空间，可以看作是当前线程所执行的字节码的行号指示器。在虚拟机概念模型中，字节码解释器工作时就是通过改变计数器的值来选取下一条需要执行的字节码指令，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数器来完成。</p><p>程序计数器是一块“线程私有”的内存，如上文的图所示，每条线程都有一个独立的程序计数器，各条线程之间的计数器互不影响，独立存储。这样设计使得在多线程环境下，线程切换后能恢复到正确的执行位置。</p><p>如果线程正在执行的是一个Java方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；若执行的是Native方法，则计数器为空（Undefined）（因为对于Native方法而言，它的方法体并不是由Java字节码构成的，自然无法应用上述的“字节码指令的地址”的概念）。</p><p>程序计数器也是唯一一个在Java虚拟机规范中没有规定任何<code>OutOfMemoryError</code>情况的内存区域。</p><h3 id="Java-虚拟机栈（Java-Virtual-Machine-Stacks）"><a href="#Java-虚拟机栈（Java-Virtual-Machine-Stacks）" class="headerlink" title="Java 虚拟机栈（Java Virtual Machine Stacks）"></a>Java 虚拟机栈（Java Virtual Machine Stacks）</h3><p>Java虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行的同时都会创建一个栈帧（Stack Frame），栈帧中存储着局部变量表、操作数栈、动态链接、方法出口等信息。每一个方法从调用直至执行完成的过程，会对应一个栈帧在虚拟机栈中入栈到出栈的过程。与程序计数器一样，Java虚拟机栈也是线程私有的。</p><p>在活动线程中，只有位于栈顶的帧才是有效的，称为当前栈帧。正在执行的方法称为当前方法，栈帧是方法运行的基本结构。在执行引擎运行时，所有指令都只能针对当前栈帧进行操作。</p><p>虚拟机栈规定了两种异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出<code>StackOverflowError</code>异常（表示请求的栈溢出，导致内存耗尽，通常出现在递归方法）；如果虚拟机栈可以动态扩展（当前大部分的 Java 虚拟机都可动态扩展），如果扩展时无法申请到足够的内存，就会抛出<code>OutOfMemoryError</code>异常。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/3.jpg" alt="操作栈的压栈与出栈"></p><p>虚拟机栈通过压栈和出栈的方式，对每个方法对应的活动栈帧进行运算处理，方法正常执行结束，肯定会跳转到另一个栈帧上。在执行的过程中，如果出现异常，会进行异常回溯，返回地址通过异常处理表确定。</p><p>下面分别说说栈帧中的局部变量表、操作栈、动态连接、方法返回地址。</p><h4 id="局部变量表"><a href="#局部变量表" class="headerlink" title="局部变量表"></a>局部变量表</h4><p>局部变量表是存放方法参数和局部变量的区域。 局部变量没有准备阶段， 必须显式初始化。如果是非静态方法，则在 index[0] 位置上存储的是方法所属对象的实例引用，一个引用变量占 4 个字节，随后存储的是参数和局部变量。字节码指令中的 STORE 指令就是将操作栈中计算完成的局部变呈写回局部变量表的存储空间内。</p><h4 id="操作栈"><a href="#操作栈" class="headerlink" title="操作栈"></a>操作栈</h4><p>操作栈是个初始状态为空的桶式结构栈。在方法执行过程中，会有各种指令往栈中写入和提取信息。JVM 的执行引擎是基于栈的执行引擎，其中的栈指的就是操作栈。字节码指令集的定义都是基于栈类型的，栈的深度在方法元信息的 stack 属性中。</p><p>下面用一段简单的代码说明操作栈与局部变量表的交互:</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">simpleMethod</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">13</span>;</span><br><span class="line">    <span class="keyword">int</span> y = <span class="number">14</span>; </span><br><span class="line">    <span class="keyword">int</span> z = x + y;</span><br><span class="line">    <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>详细的字节码操作顺序如下：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">simpleMethod</span><span class="params">()</span> </span>;</span><br><span class="line">descriptor : () I</span><br><span class="line">flags : ACC_PUBLIC</span><br><span class="line">Code :</span><br><span class="line">stack=<span class="number">2</span>， locals=<span class="number">4</span> , args_Size=<span class="number">1</span> <span class="comment">// 最大深度为2，局部变量个数为4</span></span><br><span class="line">BIPUSH <span class="number">13</span>   <span class="comment">// 常量13压入操作栈</span></span><br><span class="line">ISTORE_1    <span class="comment">// 并保存到局部变量表slot_1</span></span><br><span class="line"></span><br><span class="line">BIPUSH l4   <span class="comment">// 常量14压入操作栈，注意是BIPUSH</span></span><br><span class="line">ISTORE_2    <span class="comment">// 并保存到局部变量表slot_2中</span></span><br><span class="line"></span><br><span class="line">ILOAD_1     <span class="comment">// 把局部变量表的slot_1元素（int x）压入操作栈</span></span><br><span class="line">ILOAD_2     <span class="comment">// 把局部变量表的slot_2元素（int y）压入操作栈</span></span><br><span class="line">IADD        <span class="comment">// 把上方的两个数都取出来，在CPU里加一下，并压回操作栈的栈顶</span></span><br><span class="line">ISTORE_3    <span class="comment">// 把栈顶的结果存储到局部变量表的slot_3中</span></span><br><span class="line"></span><br><span class="line">ILOAD_3</span><br><span class="line">IRETURN     <span class="comment">// 返回栈顶元素值</span></span><br></pre></td></tr></table></figure></div><p>局部变量表就像一个中药柜，里面有很多抽屉，依次编号为 0, 1, 2, 3, …, n ，字节码指令 ISTORE_l 就是打开1号抽屉，把栈顶中的数 13 存进去。栈是一个很深的竖桶， 任何时候只能对桶口元素进行操作 ，所以数据只能在栈顶进行存取。某些指令可以直接在抽屉里进行，比如iinc指令，直接对抽屉里的数值进行+l操作。</p><p>常见的<strong>i++</strong>和<strong>++i</strong>的区别，可以从字节码上对比出来：</p><table><thead><tr><th align="center">a = i++</th><th align="center">a = ++i</th></tr></thead><tbody><tr><td align="center">0:iload_1</td><td align="center">0:iinc 1,1</td></tr><tr><td align="center">1:iinc 1,1</td><td align="center">3:iload_1</td></tr><tr><td align="center">4:istore_2</td><td align="center">4:istore_2</td></tr></tbody></table><p>在表左列中， iload_l 从局部变量表的第 l 号抽屉里取出一个数，压入栈顶， 下一步直接在抽屉里实现 + l 的操作 ， 而这个操作对栈顶元素的值没有影响，所以 istore_2 只是把栈顶元素赋值给 a ；表格右列 ，先在第 l 号抽屉里执行 + l 操作 ， 然 后通过 iload_l 把第 1 号抽屉里的数压入栈顶， 所以 istore_2存人的是 + 1 之后的值。</p><p><font color="yellow;">注意：</font> i++ 并非原子操作，即使通过 volatile 关键字进行修饰 ，多个线程同时写的话，也会产生数据互相覆盖的问题。</p><h4 id="动态连接"><a href="#动态连接" class="headerlink" title="动态连接"></a>动态连接</h4><p>每个栈帧中包含一个在常量池中对当前方法的引用， 目的是支持方法调用过程的动态连接。</p><h4 id="方法返回地址"><a href="#方法返回地址" class="headerlink" title="方法返回地址"></a>方法返回地址</h4><p>方法执行时有两种退出情况：</p><ol><li>正常退出，即正常执行到任何方法的返回字节码指令，如 RETURN、IRETURN、ARETURN 等。</li><li>异常退出。</li></ol><p>无论何种退出情况，都将返回至方法当前被调用的位置。方法退出的过程相当于弹出当前栈帧，退出可能有三种方式：</p><ol><li>返回值压入上层调用栈帧。</li><li>异常信息抛给能够处理的栈帧。</li><li>PC计数器指向方法调用后的下一条指令。</li></ol><h3 id="本地方法栈（Native-Method-Stack）"><a href="#本地方法栈（Native-Method-Stack）" class="headerlink" title="本地方法栈（Native Method Stack）"></a>本地方法栈（Native Method Stack）</h3><p>地方法栈与虚拟机栈所发挥的作用是非常相似的，它们之间的区别不过是虚拟机栈为虚拟机执行 Java 方法（也就是字节码）服务，而本地方法栈则为虚拟机使用到的 Native 方法服务。Sun HotSpot 虚拟机直接就把本地方法栈和虚拟机栈合二为一。与虚拟机栈一样，本地方法栈区域也会抛出 <code>StackOverflowError</code> 和 <code>OutOfMemoryError</code> 异常。</p><p>线程开始调用本地方法时，会进入 个不再受 JVM 约束的世界。本地方法可以通过 JNI(Java Native Interface)来访问虚拟机运行时的数据区，甚至可以调用寄存器，具有和 JVM 相同的能力和权限。 当大量本地方法出现时，势必会削弱 JVM 对系统的控制力，因为它的出错信息都比较黑盒。对内存不足的情况，本地方法栈还是会抛出 <code>nativeheapOutOfMemory</code>。</p><p>JNI 类本地方法最著名的应该是 <code>System.currentTimeMillis()</code> ，JNI使 Java 深度使用操作系统的特性功能，复用非 Java 代码。 但是在项目过程中， 如果大量使用其他语言来实现 JNI , 就会丧失跨平台特性，威胁到程序运行的稳定性。假如需要与本地代码交互，就可以用中间标准框架进行解耦，这样即使本地方法崩溃也不至于影响到JVM的稳定。当然 ，如果要求极高的执行效率、偏底层的跨进程操作等，可以考虑设计为 JNI 调用方式。</p><h3 id="Java-堆（Heap）"><a href="#Java-堆（Heap）" class="headerlink" title="Java 堆（Heap）"></a>Java 堆（Heap）</h3><p>Heap 是 OOM 故障最主要的发源地 ， 它存储着几乎所有的实例对象 ， 堆由垃圾收集器自动回收 ， 堆区由各子线程共享使用。通常情况下 ，它占用的空间是所有内存区域中最大的，但如果无节制地创建大量对象，也容易消耗完所有的空间。堆的内存空间既可以固定大小 ，也可以在运行时动态地调整，通过如下参数设定初始值和最大值 ，比如 <strong>-Xms256M -Xmxl024M</strong> ，其中 -X 表示它是 JVM 运行参数， <code>ms</code> 是<strong>memory start</strong>的简 称， <code>mx</code> 是<strong>memory max</strong>的简称，分别代表<strong>最小堆容量</strong>和<strong>最大堆容量</strong>。</p><p>在通常情况下，服务器在运行过程中，堆空间不断地扩容与回缩，势必形成不必要的系统压力，所以在线上生产环境中，JVM的<code>Xms</code>和<code>Xmx</code>设置成<strong>一样大小</strong>，避免在 GC 后调整堆大小时带来的额外压力 。</p><p>Java堆是垃圾收集器管理的主要区域，因此也被称为“GC堆”，从内存回收的角度看内存空间可划分如下:</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/4.jpg" alt="n0xBMn.png"></p><ol><li><p>新生代（Young）： 新生成的对象优先存放于此，新生代又可细分为Eden、From Survivor、To Survivor（也叫 S0 和 S1 区），默认比例为<strong>8:1:1</strong>。绝大部分对象在 Eden 区生成 ，当 Eden 区装填满的时候 ， 会触发 YGC 。没有被引用的对象则直接回收。依然存活的对象会被移送到 Survivor 区。在这里，每次YGC的时候，它们将存活的对象复制到未使用的那块空间，然后将当前正在使用的空间完全清除，交换两块空间的使用状态。如果 YGC 要移送的对象大于 Survivor 区容量上限 ，则直接移交给老年代。新生代对象朝生夕死，存活率很低。在新生代中，常规应用进行一次垃圾收集一般可以回收70% ~ 95% 的空间，回收效率很高。</p></li><li><p>老年代（Tenured/Old）：每个对象都有一个计数器，每次YGC都会加l。<code>-XX:MaxTenuringThreshold</code>参数能配置计数器的值到达某个阈值的时候，对象从新生代晋升至老年代。如果该参数配置为1，那么从新生代的Eden区直接移至老年代。默认值是15，可以在Survivor区交换14次之后，晋升至老年代。老年代中的对象生命周期较长，存活率比较高，在老年代中进行GC的频率相对而言较低，而且回收的速度也比较慢。</p></li><li><p>永久代（Perm）：永久代存储类信息、常量、静态变量、即时编译器编译后的代码等数据，对这一区域而言，Java虚拟机规范指出可以不进行垃圾收集，一般而言不会进行垃圾回收</p></li></ol><p>其中新生代和老年代组成了Java堆的全部内存区域，而永久代不属于堆空间，它在JDK 1.8以前被Sun HotSpot虚拟机用作方法区的实现。</p><div class="note danger"><p>注意：在不同的 JVM 实现及不同的回收机制中 ， 堆内存的划分方式是不一样的</p></div><p>附上对象分配与简要的GC流程图：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/5.jpg" alt="nBm4Qx.png"></p><h3 id="方法区（Method-Area）"><a href="#方法区（Method-Area）" class="headerlink" title="方法区（Method Area）"></a>方法区（Method Area）</h3><p>方法区与 Java 堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。虽然Java 虚拟机规范把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫做 Non-Heap（非堆），目的应该是与 Java 堆区分开来。</p><h4 id="JDK-1-8以前的永久代（PermGen）"><a href="#JDK-1-8以前的永久代（PermGen）" class="headerlink" title="JDK 1.8以前的永久代（PermGen）"></a>JDK 1.8以前的永久代（PermGen）</h4><p>Java虚拟机规范对方法区的限制非常宽松，除了和Java堆一样不需要连续的内存和可以选择固定大小或者可扩展外，还可以选择不实现垃圾收集，也就是说，Java虚拟机规范只是规定了方法区的概念和它的作用，并没有规定如何去实现它。</p><p>对于JDK 1.8之前的版本，HotSpot虚拟机设计团队选择把GC分代收集扩展至方法区，即用永久代来实现方法区，这样HotSpot的垃圾收集器可以像管理Java堆一样管理这部分内存，能够省去专门为方法区编写内存管理代码的工作。对于其他的虚拟机（如Oracle JRockit、IBM J9等）来说是不存在永久代的概念的。</p><p>如果运行时有大量的类产生，可能会导致方法区被填满，直至溢出。常见的应用场景如：</p><ol><li>Spring和ORM框架使用CGLib操纵字节码对类进行增强，增强的类越多，就需要越大的方法区来保证动态生成的Class可以载入内存</li><li>大量JSP或动态产生JSP文件的应用（JSP第一次运行时需要编译为Java类）</li><li>基于OSGi的应用（即使是同一个类文件，被不同的类加载器加载也会视为不同的类）<br>……</li></ol><p>这都会导致方法区溢出：<code>java.lang.OutOfMemoryError: PermGen space</code>，需设定运行参数：<code>-XX:MaxPermSize=1280m</code></p><h4 id="JDK-1-8的元空间（Metaspace）"><a href="#JDK-1-8的元空间（Metaspace）" class="headerlink" title="JDK 1.8的元空间（Metaspace）"></a>JDK 1.8的元空间（Metaspace）</h4><p>在JDK 1.8中，HotSpot虚拟机设计团队为了促进 HotSpot 与 JRockit 的融合，修改了方法区的实现，移除了永久代，选择使用本地化的内存空间（而不是 JVM 的内存空间）存放类的元数据，这个空间叫做元空间（Metaspace）</p><p>做了这个改动后 <code>java.lang.OutOfMemoryError: PermGen</code> 的问题将不复存在，并且不再需要调整和监控这个内存空间。在 JDK8 及以上版本中，设定 MaxPermSize 参数， JVM 在启动时并不会报错，但是会提示: <code>Java HotSpot 64Bit Server VM warning: ignoring option MaxPem1Size=2560m; support was removed in 8.0</code> 。</p><p>如果类元数据的空间占用达到参数 <code>MaxMetaspaceSize</code> 设置的值，将会触发对死亡对象和类加载器的垃圾回收，元空间过多的垃圾收集可能表示类、类加载器内存泄漏或对你的应用程序来说空间太小了。为了限制垃圾回收的频率和延迟，适当的监控和调优元空间是非常有必要的。</p><p>元空间的内存管理由元空间虚拟机来完成。先前，对于类的元数据我们需要不同的垃圾回收器进行处理，现在只需要执行元空间虚拟机的C++代码即可完成。在元空间中，类和其元数据的生命周期和其对应的类加载器是相同的。话句话说，只要类加载器存活，其加载的类的元数据也是存活的，因而不会被回收掉。</p><p>在 JDK8 里， Perm 区中的<strong>字符串常量</strong>移至堆内存，其他内容包括类元信息、字段、静态属性、方法、常量等都移动至元空间内。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/6.jpg" alt="nBDWhd.png"></p><p>比如图中的 Object 类元信息、静态属性 System.out、整型常量 10000000 等。显示在常量池中的 String ，其实际对象是被保存在堆内存中的。</p><h3 id="运行时常量池（Runtime-Constant-Pool）"><a href="#运行时常量池（Runtime-Constant-Pool）" class="headerlink" title="运行时常量池（Runtime Constant Pool）"></a>运行时常量池（Runtime Constant Pool）</h3><p>运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池（Constant Pool Table），用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池存放。</p><p>Java虚拟机对Class文件每一部分（自然包括常量池）的格式有严格规定，每一个字节用于存储那种数据都必须符合规范上的要求才会被虚拟机认可、装载和执行。但对于运行时常量池，Java虚拟机规范没有做任何有关细节的要求，不同的提供商实现的虚拟机可以按照自己的需求来实现此内存区域。不过一般而言，除了保存Class文件中的描述符号引用外，还会把翻译出的直接引用也存储在运行时常量池中。</p><p>运行时常量池相对于Class文件常量池的另外一个重要特征是具备动态性，Java语言并不要求常量一定只有编译器才能产生，也就是并非置入Class文件中的常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，此特性被开发人员利用得比较多的便是String类的intern()方法。</p><p>既然运行时常量池是方法区的一部分，自然受到方法区内存的限制，当无法再申请到内存时会抛出 <code>OutOfMemoryError</code> 异常。</p><h3 id="直接内存（Direct-Memory）"><a href="#直接内存（Direct-Memory）" class="headerlink" title="直接内存（Direct Memory）"></a>直接内存（Direct Memory）</h3><p>直接内存并不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域。但这部分内存也被频繁运用，而却可能导致<code>OutOfMemoryError</code>异常出现，所以这里放到一起讲解。</p><p>在 JDK 1.4 中新加入了 NIO，引入了一种基于通道（Channel）与缓冲区（Buffer）的 I/O 方式，它可以使用 Native 函数库直接分配堆外内存，然后通过一个存储在 Java 堆中的 DirectByteBuffer 对象作为这块内存的引用进行操作。这样能在一些场景中显著提高性能，因为避免了在 Java 堆和 Native 堆中来回复制数据。</p><p>显然，本机直接内存的分配不会受到 Java 堆大小的限制，但是，既然是内存，肯定还是会受到本机总内存（包括 RAM 以及 SWAP 区或者分页文件）大小以及处理器寻址空间的限制。服务器管理员在配置虚拟机参数时，会根据实际内存设置 -Xmx 等参数信息，但经常忽略直接内存，使得各个内存区域总和大于物理内存限制（包括物理的和操作系统级的限制），从而导致动态扩展时出现 OutOfMemoryError 异常。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/7.jpg" alt="nBg8XR.png"></p><h2 id="内存模型（Java-Memory-Model）"><a href="#内存模型（Java-Memory-Model）" class="headerlink" title="内存模型（Java Memory Model）"></a>内存模型（Java Memory Model）</h2><h3 id="计算机高速缓存和缓存一致性"><a href="#计算机高速缓存和缓存一致性" class="headerlink" title="计算机高速缓存和缓存一致性"></a>计算机高速缓存和缓存一致性</h3><p>计算机在高速的 CPU 和相对低速的存储设备之间使用高速缓存，作为内存和处理器之间的缓冲。将运算需要使用到的数据复制到缓存中，让运算能快速运行，当运算结束后再从缓存同步回内存之中。</p><p>在多处理器的系统中(或者单处理器多核的系统)，每个处理器内核都有自己的高速缓存，它们有共享同一主内存(Main Memory)。当多个处理器的运算任务都涉及同一块主内存区域时，将可能导致各自的缓存数据不一致。为此，需要各个处理器访问缓存时都遵循一些协议，在读写时要根据协议进行操作，来维护缓存的一致性。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/8.jpg" alt="nBXapd.png"></p><h3 id="JVM主内存与工作内存"><a href="#JVM主内存与工作内存" class="headerlink" title="JVM主内存与工作内存"></a>JVM主内存与工作内存</h3><p>Java内存模型（JMM），其实JMM并不像JVM内存结构这样真实存在，它只是一个抽象概念：</p><p><a href="http://www.cs.umd.edu/~pugh/java/memoryModel/jsr133.pdf" class="LinkCard" target="_blank" rel="noopener">JSR-133: Java Memory Model and Thread Specification</a></p><p>JMM是和多线程相关的，它描述了一组符合内存模型规范、屏蔽了各种硬件和操作系统的访问差异，定义了一个线程对共享变量的写入时对另一个线程是可见的，保证了Java程序在各种平台下对内存的访问都能保证效果一致的一种机制及规范。</p><p>Java内存模型规定了所有的变量都存储在主内存中，每个线程有自己的工作内存，这个内存中保存了该线程使用到的变量的主内存副本拷贝，线程对变量的所有操作都必须在工作内存中进行，而不能直接读写主内存。不同的线程之间也无法直接访问对方工作内存中的变量，线程间变量的传递均需要自己的工作内存和主存之间进行数据同步。</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/35/9.jpg" alt="nBbaqO.png"></p><p>简单总结下，Java的多线程之间是通过共享内存进行通信的，而由于采用共享内存进行通信，在通信过程中会存在一系列如可见性、原子性、顺序性等问题，而JMM就是围绕着多线程通信以及与其相关的一系列特性而建立的模型。JMM定义了一些语法集，这些语法集映射到Java语言中就是 <code>volatile</code>、<code>synchronized</code> 等关键字。</p><blockquote><p>这里所讲的主内存、工作内存与 Java 内存区域中的 Java 堆、栈、方法区等并不是同一个层次的内存划分，这两者基本上是没有关系的，如果两者一定要勉强对应起来，那从变量、主内存、工作内存的定义来看，主内存主要对应于Java堆中的对象实例数据部分，而工作内存则对应于虚拟机栈中的部分区域。</p></blockquote><p>有关重排序、内存屏障、happens-before等将会在下一篇文章中进行单独介绍。</p><p><strong>参考文章</strong></p><p><a href="https://book.douban.com/subject/24722612/" target="_blank" rel="noopener">深入理解Java虚拟机（第2版）</a><br><a href="https://book.douban.com/subject/30333948/" target="_blank" rel="noopener">码出高效：Java开发手册</a><br><a href="https://meandni.com/2019/01/10/jvm_note1/#%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98" target="_blank" rel="noopener">《深入理解java虚拟机》</a><br><a href="https://www.infoq.cn/article/java-memory-model-1" target="_blank" rel="noopener">深入理解 Java 内存模型</a><br><a href="https://www.hollischuang.com/archives/2550" target="_blank" rel="noopener">Java内存模型是什么</a><br><a href="https://www.zhihu.com/question/64586462/answer/576543433" target="_blank" rel="noopener">Java内存模型和Java内存区域</a><br><a href="https://zhuanlan.zhihu.com/p/51613784" target="_blank" rel="noopener">Java内存模型原理，你真的理解吗？</a></p><blockquote><p>附上《深入理解Java虚拟机（第二版）》，下载于网络，侵删！</p></blockquote><div class="row"><embed src="https://cdn.jsdelivr.net/gh/leafjame/cdn/docs/knowJVM.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> JVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JVM </tag>
            
            <tag> OOM </tag>
            
            <tag> 内存模型 </tag>
            
            <tag> 多线程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JVM内存溢出（OOM）的问题</title>
      <link href="/posts/1686339123.html"/>
      <url>/posts/1686339123.html</url>
      
        <content type="html"><![CDATA[<p>线上的应用运行几天后，总是出现卡死甚至出现<strong>OOM</strong>的情况</p><h3 id="通过Linux的top命令查看cpu占比"><a href="#通过Linux的top命令查看cpu占比" class="headerlink" title="通过Linux的top命令查看cpu占比"></a>通过Linux的top命令查看cpu占比</h3><p>首先通过top命令查看，发现某个java程序占用了较高内存：</p><a id="more"></a><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/1.jpg" alt="nOUDtf.png"></p><h3 id="JDK的jps命令确定是哪个java程序"><a href="#JDK的jps命令确定是哪个java程序" class="headerlink" title="JDK的jps命令确定是哪个java程序"></a>JDK的jps命令确定是哪个java程序</h3><p>然后通过jps -l 与上面的PID列（2848）比较，确定是 picasso-java-v1.jar 这个java程序占用cpu过高：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/2.jpg" alt="nOaU8U.png"></p><h3 id="通过ps-查看具体哪个JVM线程"><a href="#通过ps-查看具体哪个JVM线程" class="headerlink" title="通过ps 查看具体哪个JVM线程"></a>通过ps 查看具体哪个JVM线程</h3><p>当时想的是可能应用内某个线程导致死循环，使用如下命令查看2848进程的各个线程小号cpu时间</p><blockquote><p>//ps -mp [线程号] -o THREAD,tid,time<br>ps -mp 2848 -o THREAD,tid,time</p></blockquote><p>下图 %CPU列 为 cpu的百分比，TID列 为线程id</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/3.jpg" alt="nOa0KJ.png"></p><p>找到消耗cpu最大的线程（当时线上出现时某个线程消耗cpu90%多），这里为了演示，所以取2858这个线程。</p><h3 id="通过jstack查看java中的具体线程栈信息"><a href="#通过jstack查看java中的具体线程栈信息" class="headerlink" title="通过jstack查看java中的具体线程栈信息"></a>通过jstack查看java中的具体线程栈信息</h3><p>然后把上面线程id转化为16进制，在shell中使用printf “%x\n” tid即可，结果为b2a:</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/4.jpg" alt="nOa656.png"></p><p>然后使用jstack输出这个线程的调用栈：</p><blockquote><p>//jstack [进程id] | grep [线程的16进制id] -A行数<br>jstack 2848 | grep b2a -A30</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/5.jpg" alt="nOa5qA.png"></p><p>发现为GC线程，原来是jvm内存回收导致的cpu过高！</p><h3 id="通过jstat查看内存回收情况"><a href="#通过jstat查看内存回收情况" class="headerlink" title="通过jstat查看内存回收情况"></a>通过jstat查看内存回收情况</h3><p>使用jstat -gcutil 线程数 间隔秒数 次数命令查看：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/6.jpg" alt="nOdFRU.png"></p><p>如图上面的FGC列Full GC次数为几百，而FGCT的Full GC秒数达到了几千，通过设置更多的监控次数观察，每次Full GC过后，O列的老年代还是99%，可见是内存不足导致的一直不停Full GC !</p><h3 id="重启程序，使用-Xmx-Xms设置更大堆内存"><a href="#重启程序，使用-Xmx-Xms设置更大堆内存" class="headerlink" title="重启程序，使用-Xmx -Xms设置更大堆内存"></a>重启程序，使用-Xmx -Xms设置更大堆内存</h3><p>通过重启程序，<font color="red"> -Xmx2048m -Xms2048m </font>设置了更大的内存参数，缓解了问题！</p><h4 id="问题重现，寻找其他原因，使用jmap生成堆转储文件"><a href="#问题重现，寻找其他原因，使用jmap生成堆转储文件" class="headerlink" title="问题重现，寻找其他原因，使用jmap生成堆转储文件"></a>问题重现，寻找其他原因，使用jmap生成堆转储文件</h4><p>隔了几天后，问题重现，此时通过jmap 生成了镜像</p><blockquote><p>jmap -dump:format=b,file=dumpfile.dat [pid]</p></blockquote><p>生成的文件也是非常之大，达到2.1Gb！</p><h4 id="柳暗花明，使用Eclipse-Memory-Analyzer分析出原因"><a href="#柳暗花明，使用Eclipse-Memory-Analyzer分析出原因" class="headerlink" title="柳暗花明，使用Eclipse Memory Analyzer分析出原因"></a>柳暗花明，使用Eclipse Memory Analyzer分析出原因</h4><p>把dump文件下载到本地，同时下载了Eclipse Memory Analyzer对dump文件进行分析。</p><p>在Eclipse Memory Analyzer中生成Leak Suspects报告：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/7.jpg" alt="nOdmZR.png"></p><p>发现是 PoolingHttpClientConnectionManager 这个类导致的。再点击上图中的Details,查看详细信息：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/8.jpg" alt="nOdteA.png"></p><p>这下清晰了，是阿里的oss类库导致的，结合程序中的如下代码：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">OSSClient ossClient = <span class="keyword">new</span> OSSClient(<span class="string">""</span>,<span class="string">""</span>); </span><br><span class="line">PutObjectResult putObjectResult = ossClient.putObject(<span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>);</span><br></pre></td></tr></table></figure></div><p>这个方法在程序中没有使用单例模式而且没有关闭，每调用一次就生成了一个PoolingHttpClientConnectionManager，而且是不可回收的。通过源码查看到IdleConnectionReaper.size()这个类会生成PoolingHttpClientConnectionManager的总数量。</p><h2 id="验证猜测"><a href="#验证猜测" class="headerlink" title="验证猜测"></a>验证猜测</h2><p>使用 -Xms20m -Xmx20m 运行以下程序，发现size一直变大，最后导致OOM (java.lang.OutOfMemoryError)</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">60000</span>; i++) &#123;</span><br><span class="line">      OSSClient ossClient = <span class="keyword">new</span> OSSClient(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line">      ossClient.putObject(<span class="string">"&lt;test-bucket&gt;"</span>, <span class="string">"test1234"</span> + UUID.randomUUID(), <span class="keyword">new</span> File(<span class="string">"d:/file.txt"</span>));</span><br><span class="line">      System.out.println(<span class="string">"size="</span>+IdleConnectionReaper.size());</span><br><span class="line">      Thread.sleep(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/36/9.jpg" alt="nOdUot.png"></p><p>查看api，得知使用shutdown方法即可关闭OSSClient：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ossClient.shutdown();</span><br></pre></td></tr></table></figure></div><p>再运行以下程序，size一直为0，一切正常：</p><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVA"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">60000</span>; i++) &#123;</span><br><span class="line">  OSSClient ossClient = <span class="keyword">new</span> OSSClient(endpoint, accessKeyId, accessKeySecret);</span><br><span class="line">      ossClient.putObject(<span class="string">"&lt;test-bucket&gt;"</span>, <span class="string">"test1234"</span> + UUID.randomUUID(), <span class="keyword">new</span> File(<span class="string">"d:/file.txt"</span>));</span><br><span class="line">      ossClient.shutdown();</span><br><span class="line">      System.out.println(<span class="string">"size="</span>+IdleConnectionReaper.size());</span><br><span class="line">      Thread.sleep(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>至此，终于找到了导致cpu过高和OutOfMemoryError的真凶！</p><p>原文链接：</p><p><a href="https://blog.csdn.net/Keith003/article/details/81974929" class="LinkCard" target="_blank" rel="noopener">线上java应用导致JVM内存溢出（OOM）的问题</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> JVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> JVM </tag>
            
            <tag> Linux </tag>
            
            <tag> OOM </tag>
            
            <tag> 内存 </tag>
            
            <tag> 命令 </tag>
            
            <tag> CPU </tag>
            
            <tag> JDK </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo NexT主题美化1.0</title>
      <link href="/posts/3606203205.html"/>
      <url>/posts/3606203205.html</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://leafjame.github.io/posts/2114475547.html" target="_blank" rel="noopener">Hexo NexT 主题美化2.0</a><br><a href="https://www.jianshu.com/p/f054333ac9e6?utm_campaign=maleskine&utm_content=note&utm_medium=seo_notes&utm_source=recommendation" target="_blank" rel="noopener">hexo的next主题个性化教程:打造炫酷网站</a><br><a href="https://yangbingdong.com/2017/build-blog-hexo-advanced/" target="_blank" rel="noopener">基于Hexo搭建个人网站——进阶篇(从入门到入土)</a><br><a href="http://www.cduyzh.com/hexo-settings-4/" target="_blank" rel="noopener">基于hexo搭建个人免费网站——自定义页面样式</a></p></blockquote><p>以上所列的主题美化效果都不错，可以作个参考，这里单独记录一下<strong>网页标题崩溃特效</strong>：当用户离开站点相关的页面时，网页的标题会变成已崩溃，网站图标也会改变；当用户重新回到站点页面时又恢复正常。</p><a id="more"></a><p>实现方式：</p><ul><li>在 <code>next/source/js/src/</code> 目录下新建 <code>crash_cheat.js</code>，代码如下：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVASCRIPT"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 离开当前页面时修改网页标题，回到当前页面时恢复原来标题 */</span></span><br><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> OriginTitile = <span class="built_in">document</span>.title;</span><br><span class="line">  <span class="keyword">var</span> titleTime;</span><br><span class="line">  <span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.hidden) &#123;</span><br><span class="line">      $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"../../images/failure.png"</span>);</span><br><span class="line">      $(<span class="string">'[rel="shortcut icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"../../images/failure.png"</span>);</span><br><span class="line">      <span class="built_in">document</span>.title = <span class="string">'(●—●)喔哟，崩溃啦！'</span>;</span><br><span class="line">      clearTimeout(titleTime);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      $(<span class="string">'[rel="icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"../../images/favicon-32x32-next.png"</span>);</span><br><span class="line">      $(<span class="string">'[rel="shortcut icon"]'</span>).attr(<span class="string">'href'</span>, <span class="string">"../../images/favicon-32x32-next.png"</span>);</span><br><span class="line">      <span class="built_in">document</span>.title = <span class="string">'(/≧▽≦/)咦！页面又好了！'</span>;</span><br><span class="line">      titleTime = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">document</span>.title = OriginTitile;</span><br><span class="line">      &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div><ul><li>在 <code>next/layout/_layout.swig</code> 文件末尾，添加引用：</li></ul><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="false"data-rel="JAVASCRIPT"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><figure class="iseeu highlight /javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--崩溃欺骗--&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/crash_cheat.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></div><ul><li>最后在 <code>next/source/images/</code> 目录下添加 <code>failure.png</code>，作为网站崩溃时显示的图标，如下：</li></ul><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/37/1.jpg" alt="nOwccD.png"></p><p>这里的 <code>favicon-32x32-next.png</code> 是你个人站点的图标</p><p>完成的效果如下：</p><p>留在当前页：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/37/2.jpg" alt="nOwWBd.png"></p><p>离开当前页：</p><p><img src="https://cdn.jsdelivr.net/gh/leafjame/cdn/img/articles/37/3.jpg" alt="nOwOBj.png"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo NexT </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo NexT </tag>
            
            <tag> 特效 </tag>
            
            <tag> 崩溃 </tag>
            
            <tag> 欺骗 </tag>
            
            <tag> Icon </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
